CMAKE_MINIMUM_REQUIRED (VERSION 2.8.12)

IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE "Release")
ENDIF()

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})

FIND_PACKAGE(Boost REQUIRED)
IF(Boost_FOUND)
    INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS}) 
	ADD_DEFINITIONS( -DCARVE_SYSTEM_BOOST )
ENDIF()

INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} src/)
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${CARVE_SOURCE_DIR})
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${CARVE_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${CARVE_SOURCE_DIR}/src)
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${CARVE_SOURCE_DIR}/common)
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${CARVE_SOURCE_DIR}/src/common)
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${CARVE_SOURCE_DIR}/src/include)
INCLUDE_DIRECTORIES( ${INCLUDE_DIRECTORIES} ${OSG_INCLUDE_DIR} )

LINK_DIRECTORIES (${LINK_DIRECTORIES} ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE}) 
FILE (GLOB ifc4_source "src/ifcpp/IFC4/*.cpp")

SET(IFCPP_SOURCE_FILES 
  src/ifcpp/IfcPPEntityBroker.cpp
  src/ifcpp/IfcPPTypeBroker.cpp
  src/ifcpp/model/IfcPPGuid.cpp
  src/ifcpp/model/IfcPPModel.cpp
  src/ifcpp/model/UnitConverter.cpp
  src/ifcpp/reader/IfcPPReader.cpp
  src/ifcpp/reader/IfcPPReaderSTEP.cpp
  src/ifcpp/reader/IfcPPReaderXML.cpp
  src/ifcpp/reader/ReaderUtil.cpp
  src/ifcpp/writer/IfcPPWriterSTEP.cpp

  ${ifc4_source}
)



IF(CMAKE_COMPILER_IS_GNUCXX)
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11")
	ADD_LIBRARY(IfcPlusPlus SHARED ${IFCPP_SOURCE_FILES})
ELSE(CMAKE_COMPILER_IS_GNUCXX)
	ADD_LIBRARY(IfcPlusPlus STATIC ${IFCPP_SOURCE_FILES})
ENDIF()
