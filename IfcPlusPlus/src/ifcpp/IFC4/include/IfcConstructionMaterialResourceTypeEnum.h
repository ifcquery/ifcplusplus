/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

// TYPE IfcConstructionMaterialResourceTypeEnum = ENUMERATION OF	(AGGREGATES	,CONCRETE	,DRYWALL	,FUEL	,GYPSUM	,MASONRY	,METAL	,PLASTIC	,WOOD	,NOTDEFINED	,USERDEFINED);
class IFCQUERY_EXPORT IfcConstructionMaterialResourceTypeEnum : virtual public BuildingObject
{
public:
	enum IfcConstructionMaterialResourceTypeEnumEnum
	{
		ENUM_AGGREGATES,
		ENUM_CONCRETE,
		ENUM_DRYWALL,
		ENUM_FUEL,
		ENUM_GYPSUM,
		ENUM_MASONRY,
		ENUM_METAL,
		ENUM_PLASTIC,
		ENUM_WOOD,
		ENUM_NOTDEFINED,
		ENUM_USERDEFINED
	};

	IfcConstructionMaterialResourceTypeEnum() = default;
	IfcConstructionMaterialResourceTypeEnum( IfcConstructionMaterialResourceTypeEnumEnum e ) { m_enum = e; }
	~IfcConstructionMaterialResourceTypeEnum();
	virtual const char* className() const { return "IfcConstructionMaterialResourceTypeEnum"; }
	virtual shared_ptr<BuildingObject> getDeepCopy( BuildingCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcConstructionMaterialResourceTypeEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<BuildingEntity> >& map );
	IfcConstructionMaterialResourceTypeEnumEnum m_enum;
};

