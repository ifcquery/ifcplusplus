/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

// TYPE IfcEventTypeEnum = ENUMERATION OF	(STARTEVENT	,ENDEVENT	,INTERMEDIATEEVENT	,USERDEFINED	,NOTDEFINED);
class IFCQUERY_EXPORT IfcEventTypeEnum : virtual public BuildingObject
{
public:
	enum IfcEventTypeEnumEnum
	{
		ENUM_STARTEVENT,
		ENUM_ENDEVENT,
		ENUM_INTERMEDIATEEVENT,
		ENUM_USERDEFINED,
		ENUM_NOTDEFINED
	};

	IfcEventTypeEnum() = default;
	IfcEventTypeEnum( IfcEventTypeEnumEnum e ) { m_enum = e; }
	~IfcEventTypeEnum();
	virtual const char* className() const { return "IfcEventTypeEnum"; }
	virtual shared_ptr<BuildingObject> getDeepCopy( BuildingCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcEventTypeEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<BuildingEntity> >& map );
	IfcEventTypeEnumEnum m_enum;
};

