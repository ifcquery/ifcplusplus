/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

// TYPE IfcHumidifierTypeEnum = ENUMERATION OF	(STEAMINJECTION	,ADIABATICAIRWASHER	,ADIABATICPAN	,ADIABATICWETTEDELEMENT	,ADIABATICATOMIZING	,ADIABATICULTRASONIC	,ADIABATICRIGIDMEDIA	,ADIABATICCOMPRESSEDAIRNOZZLE	,ASSISTEDELECTRIC	,ASSISTEDNATURALGAS	,ASSISTEDPROPANE	,ASSISTEDBUTANE	,ASSISTEDSTEAM	,USERDEFINED	,NOTDEFINED);
class IFCQUERY_EXPORT IfcHumidifierTypeEnum : virtual public BuildingObject
{
public:
	enum IfcHumidifierTypeEnumEnum
	{
		ENUM_STEAMINJECTION,
		ENUM_ADIABATICAIRWASHER,
		ENUM_ADIABATICPAN,
		ENUM_ADIABATICWETTEDELEMENT,
		ENUM_ADIABATICATOMIZING,
		ENUM_ADIABATICULTRASONIC,
		ENUM_ADIABATICRIGIDMEDIA,
		ENUM_ADIABATICCOMPRESSEDAIRNOZZLE,
		ENUM_ASSISTEDELECTRIC,
		ENUM_ASSISTEDNATURALGAS,
		ENUM_ASSISTEDPROPANE,
		ENUM_ASSISTEDBUTANE,
		ENUM_ASSISTEDSTEAM,
		ENUM_USERDEFINED,
		ENUM_NOTDEFINED
	};

	IfcHumidifierTypeEnum() = default;
	IfcHumidifierTypeEnum( IfcHumidifierTypeEnumEnum e ) { m_enum = e; }
	~IfcHumidifierTypeEnum();
	virtual const char* className() const { return "IfcHumidifierTypeEnum"; }
	virtual shared_ptr<BuildingObject> getDeepCopy( BuildingCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcHumidifierTypeEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<BuildingEntity> >& map );
	IfcHumidifierTypeEnumEnum m_enum;
};

