/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

// TYPE IfcLampTypeEnum = ENUMERATION OF	(COMPACTFLUORESCENT	,FLUORESCENT	,HALOGEN	,HIGHPRESSUREMERCURY	,HIGHPRESSURESODIUM	,LED	,METALHALIDE	,OLED	,TUNGSTENFILAMENT	,USERDEFINED	,NOTDEFINED);
class IFCQUERY_EXPORT IfcLampTypeEnum : virtual public BuildingObject
{
public:
	enum IfcLampTypeEnumEnum
	{
		ENUM_COMPACTFLUORESCENT,
		ENUM_FLUORESCENT,
		ENUM_HALOGEN,
		ENUM_HIGHPRESSUREMERCURY,
		ENUM_HIGHPRESSURESODIUM,
		ENUM_LED,
		ENUM_METALHALIDE,
		ENUM_OLED,
		ENUM_TUNGSTENFILAMENT,
		ENUM_USERDEFINED,
		ENUM_NOTDEFINED
	};

	IfcLampTypeEnum() = default;
	IfcLampTypeEnum( IfcLampTypeEnumEnum e ) { m_enum = e; }
	~IfcLampTypeEnum();
	virtual const char* className() const { return "IfcLampTypeEnum"; }
	virtual shared_ptr<BuildingObject> getDeepCopy( BuildingCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcLampTypeEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<BuildingEntity> >& map );
	IfcLampTypeEnumEnum m_enum;
};

