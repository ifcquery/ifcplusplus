/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

// TYPE IfcPileTypeEnum = ENUMERATION OF	(BORED	,DRIVEN	,JETGROUTING	,COHESION	,FRICTION	,SUPPORT	,USERDEFINED	,NOTDEFINED);
class IFCQUERY_EXPORT IfcPileTypeEnum : virtual public BuildingObject
{
public:
	enum IfcPileTypeEnumEnum
	{
		ENUM_BORED,
		ENUM_DRIVEN,
		ENUM_JETGROUTING,
		ENUM_COHESION,
		ENUM_FRICTION,
		ENUM_SUPPORT,
		ENUM_USERDEFINED,
		ENUM_NOTDEFINED
	};

	IfcPileTypeEnum() = default;
	IfcPileTypeEnum( IfcPileTypeEnumEnum e ) { m_enum = e; }
	~IfcPileTypeEnum();
	virtual const char* className() const { return "IfcPileTypeEnum"; }
	virtual shared_ptr<BuildingObject> getDeepCopy( BuildingCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcPileTypeEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<BuildingEntity> >& map );
	IfcPileTypeEnumEnum m_enum;
};

