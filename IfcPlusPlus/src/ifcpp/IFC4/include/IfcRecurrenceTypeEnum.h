/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

// TYPE IfcRecurrenceTypeEnum = ENUMERATION OF	(DAILY	,WEEKLY	,MONTHLY_BY_DAY_OF_MONTH	,MONTHLY_BY_POSITION	,BY_DAY_COUNT	,BY_WEEKDAY_COUNT	,YEARLY_BY_DAY_OF_MONTH	,YEARLY_BY_POSITION);
class IFCQUERY_EXPORT IfcRecurrenceTypeEnum : virtual public BuildingObject
{
public:
	enum IfcRecurrenceTypeEnumEnum
	{
		ENUM_DAILY,
		ENUM_WEEKLY,
		ENUM_MONTHLY_BY_DAY_OF_MONTH,
		ENUM_MONTHLY_BY_POSITION,
		ENUM_BY_DAY_COUNT,
		ENUM_BY_WEEKDAY_COUNT,
		ENUM_YEARLY_BY_DAY_OF_MONTH,
		ENUM_YEARLY_BY_POSITION
	};

	IfcRecurrenceTypeEnum() = default;
	IfcRecurrenceTypeEnum( IfcRecurrenceTypeEnumEnum e ) { m_enum = e; }
	~IfcRecurrenceTypeEnum();
	virtual const char* className() const { return "IfcRecurrenceTypeEnum"; }
	virtual shared_ptr<BuildingObject> getDeepCopy( BuildingCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcRecurrenceTypeEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<BuildingEntity> >& map );
	IfcRecurrenceTypeEnumEnum m_enum;
};

