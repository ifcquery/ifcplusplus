/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

// TYPE IfcSIPrefix = ENUMERATION OF	(EXA	,PETA	,TERA	,GIGA	,MEGA	,KILO	,HECTO	,DECA	,DECI	,CENTI	,MILLI	,MICRO	,NANO	,PICO	,FEMTO	,ATTO);
class IFCQUERY_EXPORT IfcSIPrefix : virtual public BuildingObject
{
public:
	enum IfcSIPrefixEnum
	{
		ENUM_EXA,
		ENUM_PETA,
		ENUM_TERA,
		ENUM_GIGA,
		ENUM_MEGA,
		ENUM_KILO,
		ENUM_HECTO,
		ENUM_DECA,
		ENUM_DECI,
		ENUM_CENTI,
		ENUM_MILLI,
		ENUM_MICRO,
		ENUM_NANO,
		ENUM_PICO,
		ENUM_FEMTO,
		ENUM_ATTO
	};

	IfcSIPrefix() = default;
	IfcSIPrefix( IfcSIPrefixEnum e ) { m_enum = e; }
	~IfcSIPrefix();
	virtual const char* className() const { return "IfcSIPrefix"; }
	virtual shared_ptr<BuildingObject> getDeepCopy( BuildingCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcSIPrefix> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<BuildingEntity> >& map );
	IfcSIPrefixEnum m_enum;
};

