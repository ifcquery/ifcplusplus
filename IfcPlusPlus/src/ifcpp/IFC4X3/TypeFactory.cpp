/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#include <map>
#include <functional>
#include "ifcpp/model/BasicTypes.h"
#include "lib/IfcAbsorbedDoseMeasure.cpp"
#include "lib/IfcAccelerationMeasure.cpp"
#include "lib/IfcActionRequestTypeEnum.cpp"
#include "lib/IfcActionSourceTypeEnum.cpp"
#include "lib/IfcActionTypeEnum.cpp"
#include "lib/IfcActorSelect.cpp"
#include "lib/IfcActuatorTypeEnum.cpp"
#include "lib/IfcAddressTypeEnum.cpp"
#include "lib/IfcAirTerminalBoxTypeEnum.cpp"
#include "lib/IfcAirTerminalTypeEnum.cpp"
#include "lib/IfcAirToAirHeatRecoveryTypeEnum.cpp"
#include "lib/IfcAlarmTypeEnum.cpp"
#include "lib/IfcAlignmentCantSegmentTypeEnum.cpp"
#include "lib/IfcAlignmentHorizontalSegmentTypeEnum.cpp"
#include "lib/IfcAlignmentTypeEnum.cpp"
#include "lib/IfcAlignmentVerticalSegmentTypeEnum.cpp"
#include "lib/IfcAmountOfSubstanceMeasure.cpp"
#include "lib/IfcAnalysisModelTypeEnum.cpp"
#include "lib/IfcAnalysisTheoryTypeEnum.cpp"
#include "lib/IfcAngularVelocityMeasure.cpp"
#include "lib/IfcAnnotationTypeEnum.cpp"
#include "lib/IfcAppliedValueSelect.cpp"
#include "lib/IfcArcIndex.cpp"
#include "lib/IfcAreaDensityMeasure.cpp"
#include "lib/IfcAreaMeasure.cpp"
#include "lib/IfcArithmeticOperatorEnum.cpp"
#include "lib/IfcAssemblyPlaceEnum.cpp"
#include "lib/IfcAudioVisualApplianceTypeEnum.cpp"
#include "lib/IfcAxis2Placement.cpp"
#include "lib/IfcBSplineCurveForm.cpp"
#include "lib/IfcBSplineSurfaceForm.cpp"
#include "lib/IfcBeamTypeEnum.cpp"
#include "lib/IfcBearingTypeEnum.cpp"
#include "lib/IfcBenchmarkEnum.cpp"
#include "lib/IfcBendingParameterSelect.cpp"
#include "lib/IfcBinary.cpp"
#include "lib/IfcBoilerTypeEnum.cpp"
#include "lib/IfcBoolean.cpp"
#include "lib/IfcBooleanOperand.cpp"
#include "lib/IfcBooleanOperator.cpp"
#include "lib/IfcBoxAlignment.cpp"
#include "lib/IfcBridgePartTypeEnum.cpp"
#include "lib/IfcBridgeTypeEnum.cpp"
#include "lib/IfcBuildingElementPartTypeEnum.cpp"
#include "lib/IfcBuildingElementProxyTypeEnum.cpp"
#include "lib/IfcBuildingSystemTypeEnum.cpp"
#include "lib/IfcBuiltSystemTypeEnum.cpp"
#include "lib/IfcBurnerTypeEnum.cpp"
#include "lib/IfcCableCarrierFittingTypeEnum.cpp"
#include "lib/IfcCableCarrierSegmentTypeEnum.cpp"
#include "lib/IfcCableFittingTypeEnum.cpp"
#include "lib/IfcCableSegmentTypeEnum.cpp"
#include "lib/IfcCaissonFoundationTypeEnum.cpp"
#include "lib/IfcCardinalPointReference.cpp"
#include "lib/IfcChangeActionEnum.cpp"
#include "lib/IfcChillerTypeEnum.cpp"
#include "lib/IfcChimneyTypeEnum.cpp"
#include "lib/IfcClassificationReferenceSelect.cpp"
#include "lib/IfcClassificationSelect.cpp"
#include "lib/IfcCoilTypeEnum.cpp"
#include "lib/IfcColour.cpp"
#include "lib/IfcColourOrFactor.cpp"
#include "lib/IfcColumnTypeEnum.cpp"
#include "lib/IfcCommunicationsApplianceTypeEnum.cpp"
#include "lib/IfcComplexNumber.cpp"
#include "lib/IfcComplexPropertyTemplateTypeEnum.cpp"
#include "lib/IfcCompoundPlaneAngleMeasure.cpp"
#include "lib/IfcCompressorTypeEnum.cpp"
#include "lib/IfcCondenserTypeEnum.cpp"
#include "lib/IfcConnectionTypeEnum.cpp"
#include "lib/IfcConstraintEnum.cpp"
#include "lib/IfcConstructionEquipmentResourceTypeEnum.cpp"
#include "lib/IfcConstructionMaterialResourceTypeEnum.cpp"
#include "lib/IfcConstructionProductResourceTypeEnum.cpp"
#include "lib/IfcContextDependentMeasure.cpp"
#include "lib/IfcControllerTypeEnum.cpp"
#include "lib/IfcConveyorSegmentTypeEnum.cpp"
#include "lib/IfcCooledBeamTypeEnum.cpp"
#include "lib/IfcCoolingTowerTypeEnum.cpp"
#include "lib/IfcCoordinateReferenceSystemSelect.cpp"
#include "lib/IfcCostItemTypeEnum.cpp"
#include "lib/IfcCostScheduleTypeEnum.cpp"
#include "lib/IfcCountMeasure.cpp"
#include "lib/IfcCourseTypeEnum.cpp"
#include "lib/IfcCoveringTypeEnum.cpp"
#include "lib/IfcCrewResourceTypeEnum.cpp"
#include "lib/IfcCsgSelect.cpp"
#include "lib/IfcCurtainWallTypeEnum.cpp"
#include "lib/IfcCurvatureMeasure.cpp"
#include "lib/IfcCurveFontOrScaledCurveFontSelect.cpp"
#include "lib/IfcCurveInterpolationEnum.cpp"
#include "lib/IfcCurveMeasureSelect.cpp"
#include "lib/IfcCurveOnSurface.cpp"
#include "lib/IfcCurveOrEdgeCurve.cpp"
#include "lib/IfcCurveStyleFontSelect.cpp"
#include "lib/IfcDamperTypeEnum.cpp"
#include "lib/IfcDataOriginEnum.cpp"
#include "lib/IfcDate.cpp"
#include "lib/IfcDateTime.cpp"
#include "lib/IfcDayInMonthNumber.cpp"
#include "lib/IfcDayInWeekNumber.cpp"
#include "lib/IfcDefinitionSelect.cpp"
#include "lib/IfcDerivedMeasureValue.cpp"
#include "lib/IfcDerivedUnitEnum.cpp"
#include "lib/IfcDescriptiveMeasure.cpp"
#include "lib/IfcDimensionCount.cpp"
#include "lib/IfcDirectionSenseEnum.cpp"
#include "lib/IfcDiscreteAccessoryTypeEnum.cpp"
#include "lib/IfcDistributionBoardTypeEnum.cpp"
#include "lib/IfcDistributionChamberElementTypeEnum.cpp"
#include "lib/IfcDistributionPortTypeEnum.cpp"
#include "lib/IfcDistributionSystemEnum.cpp"
#include "lib/IfcDocumentConfidentialityEnum.cpp"
#include "lib/IfcDocumentSelect.cpp"
#include "lib/IfcDocumentStatusEnum.cpp"
#include "lib/IfcDoorPanelOperationEnum.cpp"
#include "lib/IfcDoorPanelPositionEnum.cpp"
#include "lib/IfcDoorStyleConstructionEnum.cpp"
#include "lib/IfcDoorStyleOperationEnum.cpp"
#include "lib/IfcDoorTypeEnum.cpp"
#include "lib/IfcDoorTypeOperationEnum.cpp"
#include "lib/IfcDoseEquivalentMeasure.cpp"
#include "lib/IfcDuctFittingTypeEnum.cpp"
#include "lib/IfcDuctSegmentTypeEnum.cpp"
#include "lib/IfcDuctSilencerTypeEnum.cpp"
#include "lib/IfcDuration.cpp"
#include "lib/IfcDynamicViscosityMeasure.cpp"
#include "lib/IfcEarthworksCutTypeEnum.cpp"
#include "lib/IfcEarthworksFillTypeEnum.cpp"
#include "lib/IfcElectricApplianceTypeEnum.cpp"
#include "lib/IfcElectricCapacitanceMeasure.cpp"
#include "lib/IfcElectricChargeMeasure.cpp"
#include "lib/IfcElectricConductanceMeasure.cpp"
#include "lib/IfcElectricCurrentMeasure.cpp"
#include "lib/IfcElectricDistributionBoardTypeEnum.cpp"
#include "lib/IfcElectricFlowStorageDeviceTypeEnum.cpp"
#include "lib/IfcElectricFlowTreatmentDeviceTypeEnum.cpp"
#include "lib/IfcElectricGeneratorTypeEnum.cpp"
#include "lib/IfcElectricMotorTypeEnum.cpp"
#include "lib/IfcElectricResistanceMeasure.cpp"
#include "lib/IfcElectricTimeControlTypeEnum.cpp"
#include "lib/IfcElectricVoltageMeasure.cpp"
#include "lib/IfcElementAssemblyTypeEnum.cpp"
#include "lib/IfcElementCompositionEnum.cpp"
#include "lib/IfcEnergyMeasure.cpp"
#include "lib/IfcEngineTypeEnum.cpp"
#include "lib/IfcEvaporativeCoolerTypeEnum.cpp"
#include "lib/IfcEvaporatorTypeEnum.cpp"
#include "lib/IfcEventTriggerTypeEnum.cpp"
#include "lib/IfcEventTypeEnum.cpp"
#include "lib/IfcExternalSpatialElementTypeEnum.cpp"
#include "lib/IfcFacilityPartCommonTypeEnum.cpp"
#include "lib/IfcFacilityUsageEnum.cpp"
#include "lib/IfcFanTypeEnum.cpp"
#include "lib/IfcFastenerTypeEnum.cpp"
#include "lib/IfcFillStyleSelect.cpp"
#include "lib/IfcFilterTypeEnum.cpp"
#include "lib/IfcFireSuppressionTerminalTypeEnum.cpp"
#include "lib/IfcFlowDirectionEnum.cpp"
#include "lib/IfcFlowInstrumentTypeEnum.cpp"
#include "lib/IfcFlowMeterTypeEnum.cpp"
#include "lib/IfcFontStyle.cpp"
#include "lib/IfcFontVariant.cpp"
#include "lib/IfcFontWeight.cpp"
#include "lib/IfcFootingTypeEnum.cpp"
#include "lib/IfcForceMeasure.cpp"
#include "lib/IfcFrequencyMeasure.cpp"
#include "lib/IfcFurnitureTypeEnum.cpp"
#include "lib/IfcGeographicElementTypeEnum.cpp"
#include "lib/IfcGeometricProjectionEnum.cpp"
#include "lib/IfcGeometricSetSelect.cpp"
#include "lib/IfcGeotechnicalStratumTypeEnum.cpp"
#include "lib/IfcGlobalOrLocalEnum.cpp"
#include "lib/IfcGloballyUniqueId.cpp"
#include "lib/IfcGridPlacementDirectionSelect.cpp"
#include "lib/IfcGridTypeEnum.cpp"
#include "lib/IfcHatchLineDistanceSelect.cpp"
#include "lib/IfcHeatExchangerTypeEnum.cpp"
#include "lib/IfcHeatFluxDensityMeasure.cpp"
#include "lib/IfcHeatingValueMeasure.cpp"
#include "lib/IfcHumidifierTypeEnum.cpp"
#include "lib/IfcIdentifier.cpp"
#include "lib/IfcIlluminanceMeasure.cpp"
#include "lib/IfcImpactProtectionDeviceTypeEnum.cpp"
#include "lib/IfcInductanceMeasure.cpp"
#include "lib/IfcInteger.cpp"
#include "lib/IfcIntegerCountRateMeasure.cpp"
#include "lib/IfcInterceptorTypeEnum.cpp"
#include "lib/IfcInterferenceSelect.cpp"
#include "lib/IfcInternalOrExternalEnum.cpp"
#include "lib/IfcInventoryTypeEnum.cpp"
#include "lib/IfcIonConcentrationMeasure.cpp"
#include "lib/IfcIsothermalMoistureCapacityMeasure.cpp"
#include "lib/IfcJunctionBoxTypeEnum.cpp"
#include "lib/IfcKerbTypeEnum.cpp"
#include "lib/IfcKinematicViscosityMeasure.cpp"
#include "lib/IfcKnotType.cpp"
#include "lib/IfcLabel.cpp"
#include "lib/IfcLaborResourceTypeEnum.cpp"
#include "lib/IfcLampTypeEnum.cpp"
#include "lib/IfcLanguageId.cpp"
#include "lib/IfcLayerSetDirectionEnum.cpp"
#include "lib/IfcLayeredItem.cpp"
#include "lib/IfcLengthMeasure.cpp"
#include "lib/IfcLibrarySelect.cpp"
#include "lib/IfcLightDistributionCurveEnum.cpp"
#include "lib/IfcLightDistributionDataSourceSelect.cpp"
#include "lib/IfcLightEmissionSourceEnum.cpp"
#include "lib/IfcLightFixtureTypeEnum.cpp"
#include "lib/IfcLineIndex.cpp"
#include "lib/IfcLinearForceMeasure.cpp"
#include "lib/IfcLinearMomentMeasure.cpp"
#include "lib/IfcLinearStiffnessMeasure.cpp"
#include "lib/IfcLinearVelocityMeasure.cpp"
#include "lib/IfcLiquidTerminalTypeEnum.cpp"
#include "lib/IfcLoadGroupTypeEnum.cpp"
#include "lib/IfcLogical.cpp"
#include "lib/IfcLogicalOperatorEnum.cpp"
#include "lib/IfcLuminousFluxMeasure.cpp"
#include "lib/IfcLuminousIntensityDistributionMeasure.cpp"
#include "lib/IfcLuminousIntensityMeasure.cpp"
#include "lib/IfcMagneticFluxDensityMeasure.cpp"
#include "lib/IfcMagneticFluxMeasure.cpp"
#include "lib/IfcMarineFacilityTypeEnum.cpp"
#include "lib/IfcMarinePartTypeEnum.cpp"
#include "lib/IfcMassDensityMeasure.cpp"
#include "lib/IfcMassFlowRateMeasure.cpp"
#include "lib/IfcMassMeasure.cpp"
#include "lib/IfcMassPerLengthMeasure.cpp"
#include "lib/IfcMaterialSelect.cpp"
#include "lib/IfcMeasureValue.cpp"
#include "lib/IfcMechanicalFastenerTypeEnum.cpp"
#include "lib/IfcMedicalDeviceTypeEnum.cpp"
#include "lib/IfcMemberTypeEnum.cpp"
#include "lib/IfcMetricValueSelect.cpp"
#include "lib/IfcMobileTelecommunicationsApplianceTypeEnum.cpp"
#include "lib/IfcModulusOfElasticityMeasure.cpp"
#include "lib/IfcModulusOfLinearSubgradeReactionMeasure.cpp"
#include "lib/IfcModulusOfRotationalSubgradeReactionMeasure.cpp"
#include "lib/IfcModulusOfRotationalSubgradeReactionSelect.cpp"
#include "lib/IfcModulusOfSubgradeReactionMeasure.cpp"
#include "lib/IfcModulusOfSubgradeReactionSelect.cpp"
#include "lib/IfcModulusOfTranslationalSubgradeReactionSelect.cpp"
#include "lib/IfcMoistureDiffusivityMeasure.cpp"
#include "lib/IfcMolecularWeightMeasure.cpp"
#include "lib/IfcMomentOfInertiaMeasure.cpp"
#include "lib/IfcMonetaryMeasure.cpp"
#include "lib/IfcMonthInYearNumber.cpp"
#include "lib/IfcMooringDeviceTypeEnum.cpp"
#include "lib/IfcMotorConnectionTypeEnum.cpp"
#include "lib/IfcNavigationElementTypeEnum.cpp"
#include "lib/IfcNonNegativeLengthMeasure.cpp"
#include "lib/IfcNormalisedRatioMeasure.cpp"
#include "lib/IfcNumericMeasure.cpp"
#include "lib/IfcObjectReferenceSelect.cpp"
#include "lib/IfcObjectiveEnum.cpp"
#include "lib/IfcOccupantTypeEnum.cpp"
#include "lib/IfcOpeningElementTypeEnum.cpp"
#include "lib/IfcOutletTypeEnum.cpp"
#include "lib/IfcPHMeasure.cpp"
#include "lib/IfcParameterValue.cpp"
#include "lib/IfcPavementTypeEnum.cpp"
#include "lib/IfcPerformanceHistoryTypeEnum.cpp"
#include "lib/IfcPermeableCoveringOperationEnum.cpp"
#include "lib/IfcPermitTypeEnum.cpp"
#include "lib/IfcPhysicalOrVirtualEnum.cpp"
#include "lib/IfcPileConstructionEnum.cpp"
#include "lib/IfcPileTypeEnum.cpp"
#include "lib/IfcPipeFittingTypeEnum.cpp"
#include "lib/IfcPipeSegmentTypeEnum.cpp"
#include "lib/IfcPlanarForceMeasure.cpp"
#include "lib/IfcPlaneAngleMeasure.cpp"
#include "lib/IfcPlateTypeEnum.cpp"
#include "lib/IfcPointOrVertexPoint.cpp"
#include "lib/IfcPositiveInteger.cpp"
#include "lib/IfcPositiveLengthMeasure.cpp"
#include "lib/IfcPositivePlaneAngleMeasure.cpp"
#include "lib/IfcPositiveRatioMeasure.cpp"
#include "lib/IfcPowerMeasure.cpp"
#include "lib/IfcPreferredSurfaceCurveRepresentation.cpp"
#include "lib/IfcPresentableText.cpp"
#include "lib/IfcPressureMeasure.cpp"
#include "lib/IfcProcedureTypeEnum.cpp"
#include "lib/IfcProcessSelect.cpp"
#include "lib/IfcProductRepresentationSelect.cpp"
#include "lib/IfcProductSelect.cpp"
#include "lib/IfcProfileTypeEnum.cpp"
#include "lib/IfcProjectOrderTypeEnum.cpp"
#include "lib/IfcProjectedOrTrueLengthEnum.cpp"
#include "lib/IfcProjectionElementTypeEnum.cpp"
#include "lib/IfcPropertySetDefinitionSelect.cpp"
#include "lib/IfcPropertySetDefinitionSet.cpp"
#include "lib/IfcPropertySetTemplateTypeEnum.cpp"
#include "lib/IfcProtectiveDeviceTrippingUnitTypeEnum.cpp"
#include "lib/IfcProtectiveDeviceTypeEnum.cpp"
#include "lib/IfcPumpTypeEnum.cpp"
#include "lib/IfcRadioActivityMeasure.cpp"
#include "lib/IfcRailTypeEnum.cpp"
#include "lib/IfcRailingTypeEnum.cpp"
#include "lib/IfcRailwayPartTypeEnum.cpp"
#include "lib/IfcRailwayTypeEnum.cpp"
#include "lib/IfcRampFlightTypeEnum.cpp"
#include "lib/IfcRampTypeEnum.cpp"
#include "lib/IfcRatioMeasure.cpp"
#include "lib/IfcReal.cpp"
#include "lib/IfcRecurrenceTypeEnum.cpp"
#include "lib/IfcReferentTypeEnum.cpp"
#include "lib/IfcReflectanceMethodEnum.cpp"
#include "lib/IfcReinforcedSoilTypeEnum.cpp"
#include "lib/IfcReinforcingBarRoleEnum.cpp"
#include "lib/IfcReinforcingBarSurfaceEnum.cpp"
#include "lib/IfcReinforcingBarTypeEnum.cpp"
#include "lib/IfcReinforcingMeshTypeEnum.cpp"
#include "lib/IfcResourceObjectSelect.cpp"
#include "lib/IfcResourceSelect.cpp"
#include "lib/IfcRoadPartTypeEnum.cpp"
#include "lib/IfcRoadTypeEnum.cpp"
#include "lib/IfcRoleEnum.cpp"
#include "lib/IfcRoofTypeEnum.cpp"
#include "lib/IfcRotationalFrequencyMeasure.cpp"
#include "lib/IfcRotationalMassMeasure.cpp"
#include "lib/IfcRotationalStiffnessMeasure.cpp"
#include "lib/IfcRotationalStiffnessSelect.cpp"
#include "lib/IfcSIPrefix.cpp"
#include "lib/IfcSIUnitName.cpp"
#include "lib/IfcSanitaryTerminalTypeEnum.cpp"
#include "lib/IfcSectionModulusMeasure.cpp"
#include "lib/IfcSectionTypeEnum.cpp"
#include "lib/IfcSectionalAreaIntegralMeasure.cpp"
#include "lib/IfcSegmentIndexSelect.cpp"
#include "lib/IfcSensorTypeEnum.cpp"
#include "lib/IfcSequenceEnum.cpp"
#include "lib/IfcShadingDeviceTypeEnum.cpp"
#include "lib/IfcShearModulusMeasure.cpp"
#include "lib/IfcShell.cpp"
#include "lib/IfcSignTypeEnum.cpp"
#include "lib/IfcSignalTypeEnum.cpp"
#include "lib/IfcSimplePropertyTemplateTypeEnum.cpp"
#include "lib/IfcSimpleValue.cpp"
#include "lib/IfcSizeSelect.cpp"
#include "lib/IfcSlabTypeEnum.cpp"
#include "lib/IfcSolarDeviceTypeEnum.cpp"
#include "lib/IfcSolidAngleMeasure.cpp"
#include "lib/IfcSolidOrShell.cpp"
#include "lib/IfcSoundPowerLevelMeasure.cpp"
#include "lib/IfcSoundPowerMeasure.cpp"
#include "lib/IfcSoundPressureLevelMeasure.cpp"
#include "lib/IfcSoundPressureMeasure.cpp"
#include "lib/IfcSpaceBoundarySelect.cpp"
#include "lib/IfcSpaceHeaterTypeEnum.cpp"
#include "lib/IfcSpaceTypeEnum.cpp"
#include "lib/IfcSpatialReferenceSelect.cpp"
#include "lib/IfcSpatialZoneTypeEnum.cpp"
#include "lib/IfcSpecificHeatCapacityMeasure.cpp"
#include "lib/IfcSpecularExponent.cpp"
#include "lib/IfcSpecularHighlightSelect.cpp"
#include "lib/IfcSpecularRoughness.cpp"
#include "lib/IfcStackTerminalTypeEnum.cpp"
#include "lib/IfcStairFlightTypeEnum.cpp"
#include "lib/IfcStairTypeEnum.cpp"
#include "lib/IfcStateEnum.cpp"
#include "lib/IfcStrippedOptional.cpp"
#include "lib/IfcStructuralActivityAssignmentSelect.cpp"
#include "lib/IfcStructuralCurveActivityTypeEnum.cpp"
#include "lib/IfcStructuralCurveMemberTypeEnum.cpp"
#include "lib/IfcStructuralSurfaceActivityTypeEnum.cpp"
#include "lib/IfcStructuralSurfaceMemberTypeEnum.cpp"
#include "lib/IfcSubContractResourceTypeEnum.cpp"
#include "lib/IfcSurfaceFeatureTypeEnum.cpp"
#include "lib/IfcSurfaceOrFaceSurface.cpp"
#include "lib/IfcSurfaceSide.cpp"
#include "lib/IfcSurfaceStyleElementSelect.cpp"
#include "lib/IfcSwitchingDeviceTypeEnum.cpp"
#include "lib/IfcSystemFurnitureElementTypeEnum.cpp"
#include "lib/IfcTankTypeEnum.cpp"
#include "lib/IfcTaskDurationEnum.cpp"
#include "lib/IfcTaskTypeEnum.cpp"
#include "lib/IfcTemperatureGradientMeasure.cpp"
#include "lib/IfcTemperatureRateOfChangeMeasure.cpp"
#include "lib/IfcTendonAnchorTypeEnum.cpp"
#include "lib/IfcTendonConduitTypeEnum.cpp"
#include "lib/IfcTendonTypeEnum.cpp"
#include "lib/IfcText.cpp"
#include "lib/IfcTextAlignment.cpp"
#include "lib/IfcTextDecoration.cpp"
#include "lib/IfcTextFontName.cpp"
#include "lib/IfcTextFontSelect.cpp"
#include "lib/IfcTextPath.cpp"
#include "lib/IfcTextTransformation.cpp"
#include "lib/IfcThermalAdmittanceMeasure.cpp"
#include "lib/IfcThermalConductivityMeasure.cpp"
#include "lib/IfcThermalExpansionCoefficientMeasure.cpp"
#include "lib/IfcThermalResistanceMeasure.cpp"
#include "lib/IfcThermalTransmittanceMeasure.cpp"
#include "lib/IfcThermodynamicTemperatureMeasure.cpp"
#include "lib/IfcTime.cpp"
#include "lib/IfcTimeMeasure.cpp"
#include "lib/IfcTimeOrRatioSelect.cpp"
#include "lib/IfcTimeSeriesDataTypeEnum.cpp"
#include "lib/IfcTimeStamp.cpp"
#include "lib/IfcTorqueMeasure.cpp"
#include "lib/IfcTrackElementTypeEnum.cpp"
#include "lib/IfcTransformerTypeEnum.cpp"
#include "lib/IfcTransitionCode.cpp"
#include "lib/IfcTranslationalStiffnessSelect.cpp"
#include "lib/IfcTransportElementTypeEnum.cpp"
#include "lib/IfcTrimmingPreference.cpp"
#include "lib/IfcTrimmingSelect.cpp"
#include "lib/IfcTubeBundleTypeEnum.cpp"
#include "lib/IfcURIReference.cpp"
#include "lib/IfcUnit.cpp"
#include "lib/IfcUnitEnum.cpp"
#include "lib/IfcUnitaryControlElementTypeEnum.cpp"
#include "lib/IfcUnitaryEquipmentTypeEnum.cpp"
#include "lib/IfcValue.cpp"
#include "lib/IfcValveTypeEnum.cpp"
#include "lib/IfcVaporPermeabilityMeasure.cpp"
#include "lib/IfcVectorOrDirection.cpp"
#include "lib/IfcVehicleTypeEnum.cpp"
#include "lib/IfcVibrationDamperTypeEnum.cpp"
#include "lib/IfcVibrationIsolatorTypeEnum.cpp"
#include "lib/IfcVirtualElementTypeEnum.cpp"
#include "lib/IfcVoidingFeatureTypeEnum.cpp"
#include "lib/IfcVolumeMeasure.cpp"
#include "lib/IfcVolumetricFlowRateMeasure.cpp"
#include "lib/IfcWallTypeEnum.cpp"
#include "lib/IfcWarpingConstantMeasure.cpp"
#include "lib/IfcWarpingMomentMeasure.cpp"
#include "lib/IfcWarpingStiffnessSelect.cpp"
#include "lib/IfcWasteTerminalTypeEnum.cpp"
#include "lib/IfcWellKnownTextLiteral.cpp"
#include "lib/IfcWindowPanelOperationEnum.cpp"
#include "lib/IfcWindowPanelPositionEnum.cpp"
#include "lib/IfcWindowStyleConstructionEnum.cpp"
#include "lib/IfcWindowStyleOperationEnum.cpp"
#include "lib/IfcWindowTypeEnum.cpp"
#include "lib/IfcWindowTypePartitioningEnum.cpp"
#include "lib/IfcWorkCalendarTypeEnum.cpp"
#include "lib/IfcWorkPlanTypeEnum.cpp"
#include "lib/IfcWorkScheduleTypeEnum.cpp"
#include "TypeFactory.h"

static BuildingModelMapType<std::string, std::function<shared_ptr<BuildingObject>( const std::string&, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >&, std::stringstream&, std::unordered_set<int>& )> > type_factory_map = {
{ "IFCABSORBEDDOSEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAbsorbedDoseMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCACCELERATIONMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAccelerationMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCACTIONREQUESTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcActionRequestTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCACTIONSOURCETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcActionSourceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCACTIONTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcActionTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCACTORSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcActorSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCACTUATORTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcActuatorTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCADDRESSTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAddressTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCAIRTERMINALBOXTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAirTerminalBoxTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCAIRTERMINALTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAirTerminalTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCAIRTOAIRHEATRECOVERYTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAirToAirHeatRecoveryTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCALARMTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAlarmTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCALIGNMENTCANTSEGMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAlignmentCantSegmentTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCALIGNMENTHORIZONTALSEGMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAlignmentHorizontalSegmentTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCALIGNMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAlignmentTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCALIGNMENTVERTICALSEGMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAlignmentVerticalSegmentTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCAMOUNTOFSUBSTANCEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAmountOfSubstanceMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCANALYSISMODELTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAnalysisModelTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCANALYSISTHEORYTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAnalysisTheoryTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCANGULARVELOCITYMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAngularVelocityMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCANNOTATIONTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAnnotationTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCAPPLIEDVALUESELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAppliedValueSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCARCINDEX", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcArcIndex::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCAREADENSITYMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAreaDensityMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCAREAMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAreaMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCARITHMETICOPERATORENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcArithmeticOperatorEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCASSEMBLYPLACEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAssemblyPlaceEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCAUDIOVISUALAPPLIANCETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAudioVisualApplianceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCAXIS2PLACEMENT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcAxis2Placement::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCBSPLINECURVEFORM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcBSplineCurveForm::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCBSPLINESURFACEFORM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcBSplineSurfaceForm::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCBEAMTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcBeamTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCBEARINGTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcBearingTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCBENCHMARKENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcBenchmarkEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCBENDINGPARAMETERSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcBendingParameterSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCBINARY", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcBinary::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCBOILERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcBoilerTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCBOOLEAN", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcBoolean::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCBOOLEANOPERAND", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcBooleanOperand::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCBOOLEANOPERATOR", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcBooleanOperator::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCBOXALIGNMENT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcBoxAlignment::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCBRIDGEPARTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcBridgePartTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCBRIDGETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcBridgeTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCBUILDINGELEMENTPARTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcBuildingElementPartTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCBUILDINGELEMENTPROXYTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcBuildingElementProxyTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCBUILDINGSYSTEMTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcBuildingSystemTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCBUILTSYSTEMTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcBuiltSystemTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCBURNERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcBurnerTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCABLECARRIERFITTINGTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCableCarrierFittingTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCABLECARRIERSEGMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCableCarrierSegmentTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCABLEFITTINGTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCableFittingTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCABLESEGMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCableSegmentTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCAISSONFOUNDATIONTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCaissonFoundationTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCARDINALPOINTREFERENCE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCardinalPointReference::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCHANGEACTIONENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcChangeActionEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCHILLERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcChillerTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCHIMNEYTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcChimneyTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCLASSIFICATIONREFERENCESELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcClassificationReferenceSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCLASSIFICATIONSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcClassificationSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCOILTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCoilTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCOLOUR", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcColour::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCOLOURORFACTOR", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcColourOrFactor::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCOLUMNTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcColumnTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCOMMUNICATIONSAPPLIANCETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCommunicationsApplianceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCOMPLEXNUMBER", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcComplexNumber::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCOMPLEXPROPERTYTEMPLATETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcComplexPropertyTemplateTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCOMPOUNDPLANEANGLEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCompoundPlaneAngleMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCOMPRESSORTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCompressorTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCONDENSERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCondenserTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCONNECTIONTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcConnectionTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCONSTRAINTENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcConstraintEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCONSTRUCTIONEQUIPMENTRESOURCETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcConstructionEquipmentResourceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCONSTRUCTIONMATERIALRESOURCETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcConstructionMaterialResourceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCONSTRUCTIONPRODUCTRESOURCETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcConstructionProductResourceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCONTEXTDEPENDENTMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcContextDependentMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCONTROLLERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcControllerTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCONVEYORSEGMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcConveyorSegmentTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCOOLEDBEAMTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCooledBeamTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCOOLINGTOWERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCoolingTowerTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCOORDINATEREFERENCESYSTEMSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCoordinateReferenceSystemSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCOSTITEMTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCostItemTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCOSTSCHEDULETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCostScheduleTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCOUNTMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCountMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCOURSETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCourseTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCOVERINGTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCoveringTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCREWRESOURCETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCrewResourceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCSGSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCsgSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCURTAINWALLTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCurtainWallTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCURVATUREMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCurvatureMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCURVEFONTORSCALEDCURVEFONTSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCurveFontOrScaledCurveFontSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCURVEINTERPOLATIONENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCurveInterpolationEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCURVEMEASURESELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCurveMeasureSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCURVEONSURFACE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCurveOnSurface::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCURVEOREDGECURVE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCurveOrEdgeCurve::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCCURVESTYLEFONTSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcCurveStyleFontSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDAMPERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDamperTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDATAORIGINENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDataOriginEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDATE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDate::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDATETIME", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDateTime::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDAYINMONTHNUMBER", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDayInMonthNumber::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDAYINWEEKNUMBER", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDayInWeekNumber::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDEFINITIONSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDefinitionSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDERIVEDMEASUREVALUE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDerivedMeasureValue::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDERIVEDUNITENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDerivedUnitEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDESCRIPTIVEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDescriptiveMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDIMENSIONCOUNT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDimensionCount::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDIRECTIONSENSEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDirectionSenseEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDISCRETEACCESSORYTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDiscreteAccessoryTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDISTRIBUTIONBOARDTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDistributionBoardTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDISTRIBUTIONCHAMBERELEMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDistributionChamberElementTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDISTRIBUTIONPORTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDistributionPortTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDISTRIBUTIONSYSTEMENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDistributionSystemEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDOCUMENTCONFIDENTIALITYENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDocumentConfidentialityEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDOCUMENTSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDocumentSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDOCUMENTSTATUSENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDocumentStatusEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDOORPANELOPERATIONENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDoorPanelOperationEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDOORPANELPOSITIONENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDoorPanelPositionEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDOORSTYLECONSTRUCTIONENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDoorStyleConstructionEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDOORSTYLEOPERATIONENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDoorStyleOperationEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDOORTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDoorTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDOORTYPEOPERATIONENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDoorTypeOperationEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDOSEEQUIVALENTMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDoseEquivalentMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDUCTFITTINGTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDuctFittingTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDUCTSEGMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDuctSegmentTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDUCTSILENCERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDuctSilencerTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDURATION", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDuration::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCDYNAMICVISCOSITYMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcDynamicViscosityMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCEARTHWORKSCUTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcEarthworksCutTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCEARTHWORKSFILLTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcEarthworksFillTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCELECTRICAPPLIANCETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricApplianceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCELECTRICCAPACITANCEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricCapacitanceMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCELECTRICCHARGEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricChargeMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCELECTRICCONDUCTANCEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricConductanceMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCELECTRICCURRENTMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricCurrentMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCELECTRICDISTRIBUTIONBOARDTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricDistributionBoardTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCELECTRICFLOWSTORAGEDEVICETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricFlowStorageDeviceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCELECTRICFLOWTREATMENTDEVICETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricFlowTreatmentDeviceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCELECTRICGENERATORTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricGeneratorTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCELECTRICMOTORTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricMotorTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCELECTRICRESISTANCEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricResistanceMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCELECTRICTIMECONTROLTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricTimeControlTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCELECTRICVOLTAGEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricVoltageMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCELEMENTASSEMBLYTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcElementAssemblyTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCELEMENTCOMPOSITIONENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcElementCompositionEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCENERGYMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcEnergyMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCENGINETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcEngineTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCEVAPORATIVECOOLERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcEvaporativeCoolerTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCEVAPORATORTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcEvaporatorTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCEVENTTRIGGERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcEventTriggerTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCEVENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcEventTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCEXTERNALSPATIALELEMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcExternalSpatialElementTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCFACILITYPARTCOMMONTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcFacilityPartCommonTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCFACILITYUSAGEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcFacilityUsageEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCFANTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcFanTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCFASTENERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcFastenerTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCFILLSTYLESELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcFillStyleSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCFILTERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcFilterTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCFIRESUPPRESSIONTERMINALTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcFireSuppressionTerminalTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCFLOWDIRECTIONENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcFlowDirectionEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCFLOWINSTRUMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcFlowInstrumentTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCFLOWMETERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcFlowMeterTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCFONTSTYLE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcFontStyle::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCFONTVARIANT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcFontVariant::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCFONTWEIGHT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcFontWeight::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCFOOTINGTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcFootingTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCFORCEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcForceMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCFREQUENCYMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcFrequencyMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCFURNITURETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcFurnitureTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCGEOGRAPHICELEMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcGeographicElementTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCGEOMETRICPROJECTIONENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcGeometricProjectionEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCGEOMETRICSETSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcGeometricSetSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCGEOTECHNICALSTRATUMTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcGeotechnicalStratumTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCGLOBALORLOCALENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcGlobalOrLocalEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCGLOBALLYUNIQUEID", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcGloballyUniqueId::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCGRIDPLACEMENTDIRECTIONSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcGridPlacementDirectionSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCGRIDTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcGridTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCHATCHLINEDISTANCESELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcHatchLineDistanceSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCHEATEXCHANGERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcHeatExchangerTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCHEATFLUXDENSITYMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcHeatFluxDensityMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCHEATINGVALUEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcHeatingValueMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCHUMIDIFIERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcHumidifierTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCIDENTIFIER", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcIdentifier::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCILLUMINANCEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcIlluminanceMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCIMPACTPROTECTIONDEVICETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcImpactProtectionDeviceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCINDUCTANCEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcInductanceMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCINTEGER", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcInteger::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCINTEGERCOUNTRATEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcIntegerCountRateMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCINTERCEPTORTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcInterceptorTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCINTERFERENCESELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcInterferenceSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCINTERNALOREXTERNALENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcInternalOrExternalEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCINVENTORYTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcInventoryTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCIONCONCENTRATIONMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcIonConcentrationMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCISOTHERMALMOISTURECAPACITYMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcIsothermalMoistureCapacityMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCJUNCTIONBOXTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcJunctionBoxTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCKERBTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcKerbTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCKINEMATICVISCOSITYMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcKinematicViscosityMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCKNOTTYPE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcKnotType::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLABEL", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLabel::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLABORRESOURCETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLaborResourceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLAMPTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLampTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLANGUAGEID", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLanguageId::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLAYERSETDIRECTIONENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLayerSetDirectionEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLAYEREDITEM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLayeredItem::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLENGTHMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLengthMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLIBRARYSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLibrarySelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLIGHTDISTRIBUTIONCURVEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLightDistributionCurveEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLIGHTDISTRIBUTIONDATASOURCESELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLightDistributionDataSourceSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLIGHTEMISSIONSOURCEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLightEmissionSourceEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLIGHTFIXTURETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLightFixtureTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLINEINDEX", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLineIndex::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLINEARFORCEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLinearForceMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLINEARMOMENTMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLinearMomentMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLINEARSTIFFNESSMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLinearStiffnessMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLINEARVELOCITYMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLinearVelocityMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLIQUIDTERMINALTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLiquidTerminalTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLOADGROUPTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLoadGroupTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLOGICAL", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLogical::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLOGICALOPERATORENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLogicalOperatorEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLUMINOUSFLUXMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLuminousFluxMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLUMINOUSINTENSITYDISTRIBUTIONMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLuminousIntensityDistributionMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCLUMINOUSINTENSITYMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcLuminousIntensityMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMAGNETICFLUXDENSITYMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMagneticFluxDensityMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMAGNETICFLUXMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMagneticFluxMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMARINEFACILITYTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMarineFacilityTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMARINEPARTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMarinePartTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMASSDENSITYMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMassDensityMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMASSFLOWRATEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMassFlowRateMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMASSMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMassMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMASSPERLENGTHMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMassPerLengthMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMATERIALSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMaterialSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMEASUREVALUE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMeasureValue::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMECHANICALFASTENERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMechanicalFastenerTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMEDICALDEVICETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMedicalDeviceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMEMBERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMemberTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMETRICVALUESELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMetricValueSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMOBILETELECOMMUNICATIONSAPPLIANCETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMobileTelecommunicationsApplianceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMODULUSOFELASTICITYMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcModulusOfElasticityMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMODULUSOFLINEARSUBGRADEREACTIONMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcModulusOfLinearSubgradeReactionMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMODULUSOFROTATIONALSUBGRADEREACTIONMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcModulusOfRotationalSubgradeReactionMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMODULUSOFROTATIONALSUBGRADEREACTIONSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcModulusOfRotationalSubgradeReactionSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMODULUSOFSUBGRADEREACTIONMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcModulusOfSubgradeReactionMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMODULUSOFSUBGRADEREACTIONSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcModulusOfSubgradeReactionSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMODULUSOFTRANSLATIONALSUBGRADEREACTIONSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcModulusOfTranslationalSubgradeReactionSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMOISTUREDIFFUSIVITYMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMoistureDiffusivityMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMOLECULARWEIGHTMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMolecularWeightMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMOMENTOFINERTIAMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMomentOfInertiaMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMONETARYMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMonetaryMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMONTHINYEARNUMBER", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMonthInYearNumber::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMOORINGDEVICETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMooringDeviceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCMOTORCONNECTIONTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcMotorConnectionTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCNAVIGATIONELEMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcNavigationElementTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCNONNEGATIVELENGTHMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcNonNegativeLengthMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCNORMALISEDRATIOMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcNormalisedRatioMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCNUMERICMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcNumericMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCOBJECTREFERENCESELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcObjectReferenceSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCOBJECTIVEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcObjectiveEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCOCCUPANTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcOccupantTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCOPENINGELEMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcOpeningElementTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCOUTLETTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcOutletTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPHMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPHMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPARAMETERVALUE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcParameterValue::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPAVEMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPavementTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPERFORMANCEHISTORYTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPerformanceHistoryTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPERMEABLECOVERINGOPERATIONENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPermeableCoveringOperationEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPERMITTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPermitTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPHYSICALORVIRTUALENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPhysicalOrVirtualEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPILECONSTRUCTIONENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPileConstructionEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPILETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPileTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPIPEFITTINGTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPipeFittingTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPIPESEGMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPipeSegmentTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPLANARFORCEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPlanarForceMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPLANEANGLEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPlaneAngleMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPLATETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPlateTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPOINTORVERTEXPOINT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPointOrVertexPoint::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPOSITIVEINTEGER", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPositiveInteger::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPOSITIVELENGTHMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPositiveLengthMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPOSITIVEPLANEANGLEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPositivePlaneAngleMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPOSITIVERATIOMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPositiveRatioMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPOWERMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPowerMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPREFERREDSURFACECURVEREPRESENTATION", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPreferredSurfaceCurveRepresentation::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPRESENTABLETEXT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPresentableText::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPRESSUREMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPressureMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPROCEDURETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcProcedureTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPROCESSSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcProcessSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPRODUCTREPRESENTATIONSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcProductRepresentationSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPRODUCTSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcProductSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPROFILETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcProfileTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPROJECTORDERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcProjectOrderTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPROJECTEDORTRUELENGTHENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcProjectedOrTrueLengthEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPROJECTIONELEMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcProjectionElementTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPROPERTYSETDEFINITIONSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPropertySetDefinitionSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPROPERTYSETDEFINITIONSET", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPropertySetDefinitionSet::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPROPERTYSETTEMPLATETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPropertySetTemplateTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPROTECTIVEDEVICETRIPPINGUNITTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcProtectiveDeviceTrippingUnitTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPROTECTIVEDEVICETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcProtectiveDeviceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCPUMPTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcPumpTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCRADIOACTIVITYMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcRadioActivityMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCRAILTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcRailTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCRAILINGTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcRailingTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCRAILWAYPARTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcRailwayPartTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCRAILWAYTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcRailwayTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCRAMPFLIGHTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcRampFlightTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCRAMPTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcRampTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCRATIOMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcRatioMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCREAL", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcReal::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCRECURRENCETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcRecurrenceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCREFERENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcReferentTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCREFLECTANCEMETHODENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcReflectanceMethodEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCREINFORCEDSOILTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcReinforcedSoilTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCREINFORCINGBARROLEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcReinforcingBarRoleEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCREINFORCINGBARSURFACEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcReinforcingBarSurfaceEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCREINFORCINGBARTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcReinforcingBarTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCREINFORCINGMESHTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcReinforcingMeshTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCRESOURCEOBJECTSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcResourceObjectSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCRESOURCESELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcResourceSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCROADPARTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcRoadPartTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCROADTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcRoadTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCROLEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcRoleEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCROOFTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcRoofTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCROTATIONALFREQUENCYMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcRotationalFrequencyMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCROTATIONALMASSMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcRotationalMassMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCROTATIONALSTIFFNESSMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcRotationalStiffnessMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCROTATIONALSTIFFNESSSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcRotationalStiffnessSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSIPREFIX", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSIPrefix::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSIUNITNAME", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSIUnitName::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSANITARYTERMINALTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSanitaryTerminalTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSECTIONMODULUSMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSectionModulusMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSECTIONTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSectionTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSECTIONALAREAINTEGRALMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSectionalAreaIntegralMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSEGMENTINDEXSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSegmentIndexSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSENSORTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSensorTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSEQUENCEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSequenceEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSHADINGDEVICETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcShadingDeviceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSHEARMODULUSMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcShearModulusMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSHELL", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcShell::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSIGNTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSignTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSIGNALTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSignalTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSIMPLEPROPERTYTEMPLATETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSimplePropertyTemplateTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSIMPLEVALUE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSimpleValue::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSIZESELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSizeSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSLABTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSlabTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSOLARDEVICETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSolarDeviceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSOLIDANGLEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSolidAngleMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSOLIDORSHELL", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSolidOrShell::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSOUNDPOWERLEVELMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSoundPowerLevelMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSOUNDPOWERMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSoundPowerMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSOUNDPRESSURELEVELMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSoundPressureLevelMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSOUNDPRESSUREMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSoundPressureMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSPACEBOUNDARYSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSpaceBoundarySelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSPACEHEATERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSpaceHeaterTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSPACETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSpaceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSPATIALREFERENCESELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSpatialReferenceSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSPATIALZONETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSpatialZoneTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSPECIFICHEATCAPACITYMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSpecificHeatCapacityMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSPECULAREXPONENT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSpecularExponent::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSPECULARHIGHLIGHTSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSpecularHighlightSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSPECULARROUGHNESS", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSpecularRoughness::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSTACKTERMINALTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcStackTerminalTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSTAIRFLIGHTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcStairFlightTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSTAIRTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcStairTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSTATEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcStateEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSTRIPPEDOPTIONAL", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcStrippedOptional::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSTRUCTURALACTIVITYASSIGNMENTSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcStructuralActivityAssignmentSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSTRUCTURALCURVEACTIVITYTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcStructuralCurveActivityTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSTRUCTURALCURVEMEMBERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcStructuralCurveMemberTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSTRUCTURALSURFACEACTIVITYTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcStructuralSurfaceActivityTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSTRUCTURALSURFACEMEMBERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcStructuralSurfaceMemberTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSUBCONTRACTRESOURCETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSubContractResourceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSURFACEFEATURETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSurfaceFeatureTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSURFACEORFACESURFACE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSurfaceOrFaceSurface::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSURFACESIDE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSurfaceSide::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSURFACESTYLEELEMENTSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSurfaceStyleElementSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSWITCHINGDEVICETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSwitchingDeviceTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCSYSTEMFURNITUREELEMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcSystemFurnitureElementTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTANKTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTankTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTASKDURATIONENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTaskDurationEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTASKTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTaskTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTEMPERATUREGRADIENTMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTemperatureGradientMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTEMPERATURERATEOFCHANGEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTemperatureRateOfChangeMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTENDONANCHORTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTendonAnchorTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTENDONCONDUITTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTendonConduitTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTENDONTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTendonTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTEXT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcText::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTEXTALIGNMENT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTextAlignment::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTEXTDECORATION", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTextDecoration::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTEXTFONTNAME", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTextFontName::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTEXTFONTSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTextFontSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTEXTPATH", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTextPath::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTEXTTRANSFORMATION", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTextTransformation::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTHERMALADMITTANCEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcThermalAdmittanceMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTHERMALCONDUCTIVITYMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcThermalConductivityMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTHERMALEXPANSIONCOEFFICIENTMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcThermalExpansionCoefficientMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTHERMALRESISTANCEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcThermalResistanceMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTHERMALTRANSMITTANCEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcThermalTransmittanceMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTHERMODYNAMICTEMPERATUREMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcThermodynamicTemperatureMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTIME", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTime::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTIMEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTimeMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTIMEORRATIOSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTimeOrRatioSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTIMESERIESDATATYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTimeSeriesDataTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTIMESTAMP", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTimeStamp::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTORQUEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTorqueMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTRACKELEMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTrackElementTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTRANSFORMERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTransformerTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTRANSITIONCODE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTransitionCode::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTRANSLATIONALSTIFFNESSSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTranslationalStiffnessSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTRANSPORTELEMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTransportElementTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTRIMMINGPREFERENCE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTrimmingPreference::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTRIMMINGSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTrimmingSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCTUBEBUNDLETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcTubeBundleTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCURIREFERENCE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcURIReference::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCUNIT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcUnit::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCUNITENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcUnitEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCUNITARYCONTROLELEMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcUnitaryControlElementTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCUNITARYEQUIPMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcUnitaryEquipmentTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCVALUE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcValue::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCVALVETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcValveTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCVAPORPERMEABILITYMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcVaporPermeabilityMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCVECTORORDIRECTION", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcVectorOrDirection::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCVEHICLETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcVehicleTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCVIBRATIONDAMPERTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcVibrationDamperTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCVIBRATIONISOLATORTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcVibrationIsolatorTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCVIRTUALELEMENTTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcVirtualElementTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCVOIDINGFEATURETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcVoidingFeatureTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCVOLUMEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcVolumeMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCVOLUMETRICFLOWRATEMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcVolumetricFlowRateMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCWALLTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcWallTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCWARPINGCONSTANTMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcWarpingConstantMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCWARPINGMOMENTMEASURE", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcWarpingMomentMeasure::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCWARPINGSTIFFNESSSELECT", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcWarpingStiffnessSelect::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCWASTETERMINALTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcWasteTerminalTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCWELLKNOWNTEXTLITERAL", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcWellKnownTextLiteral::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCWINDOWPANELOPERATIONENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcWindowPanelOperationEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCWINDOWPANELPOSITIONENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcWindowPanelPositionEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCWINDOWSTYLECONSTRUCTIONENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcWindowStyleConstructionEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCWINDOWSTYLEOPERATIONENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcWindowStyleOperationEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCWINDOWTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcWindowTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCWINDOWTYPEPARTITIONINGENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcWindowTypePartitioningEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCWORKCALENDARTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcWorkCalendarTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCWORKPLANTYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcWorkPlanTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } },
{ "IFCWORKSCHEDULETYPEENUM", []( const std::string& arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )->shared_ptr<BuildingObject> { return IFC4X3::IfcWorkScheduleTypeEnum::createObjectFromSTEP( arg, map, errorStream, entityIdNotFound ); } }};

shared_ptr<BuildingObject> IFC4X3::TypeFactory::createTypeObject( const std::string& class_name_upper, const std::string& type_arg, const BuildingModelMapType<int, shared_ptr<BuildingEntity> >& mapEntities, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )
{
	if (class_name_upper.size() > 0)
	{
		if (class_name_upper.compare("$") != 0)
		{
			if (class_name_upper.compare("*") != 0)
			{
				auto it_find = type_factory_map.find( class_name_upper );
				if( it_find != type_factory_map.end() )
				{
					return it_find->second( type_arg, mapEntities, errorStream, entityIdNotFound );
				}
			}
		}
	}
	// class_name not registered
	return shared_ptr<BuildingObject>();
}
void IFC4X3::TypeFactory::emptyMapOfTypes()
{
	type_factory_map.clear();
}
