/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcAddressTypeEnum = ENUMERATION OF	(DISTRIBUTIONPOINT	,HOME	,OFFICE	,SITE	,USERDEFINED);
	class IFCQUERY_EXPORT IfcAddressTypeEnum : virtual public BuildingObject
	{
	public:
		enum IfcAddressTypeEnumEnum
		{
			ENUM_DISTRIBUTIONPOINT,
			ENUM_HOME,
			ENUM_OFFICE,
			ENUM_SITE,
			ENUM_USERDEFINED
		};

		IfcAddressTypeEnum() = default;
		IfcAddressTypeEnum( IfcAddressTypeEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 33568735; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcAddressTypeEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcAddressTypeEnumEnum m_enum;
	};
}
