/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcAlarmTypeEnum = ENUMERATION OF	(BELL	,BREAKGLASSBUTTON	,LIGHT	,MANUALPULLBOX	,RAILWAYCROCODILE	,RAILWAYDETONATOR	,SIREN	,WHISTLE	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcAlarmTypeEnum : virtual public BuildingObject
	{
	public:
		enum IfcAlarmTypeEnumEnum
		{
			ENUM_BELL,
			ENUM_BREAKGLASSBUTTON,
			ENUM_LIGHT,
			ENUM_MANUALPULLBOX,
			ENUM_RAILWAYCROCODILE,
			ENUM_RAILWAYDETONATOR,
			ENUM_SIREN,
			ENUM_WHISTLE,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcAlarmTypeEnum() = default;
		IfcAlarmTypeEnum( IfcAlarmTypeEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 4164688622; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcAlarmTypeEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcAlarmTypeEnumEnum m_enum;
	};
}
