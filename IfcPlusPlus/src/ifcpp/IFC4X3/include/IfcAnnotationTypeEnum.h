/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcAnnotationTypeEnum = ENUMERATION OF	(CONTOURLINE	,DIMENSION	,ISOBAR	,ISOLUX	,ISOTHERM	,LEADER	,SURVEY	,SYMBOL	,TEXT	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcAnnotationTypeEnum : virtual public BuildingObject
	{
	public:
		enum IfcAnnotationTypeEnumEnum
		{
			ENUM_CONTOURLINE,
			ENUM_DIMENSION,
			ENUM_ISOBAR,
			ENUM_ISOLUX,
			ENUM_ISOTHERM,
			ENUM_LEADER,
			ENUM_SURVEY,
			ENUM_SYMBOL,
			ENUM_TEXT,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcAnnotationTypeEnum() = default;
		IfcAnnotationTypeEnum( IfcAnnotationTypeEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 3733744356; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcAnnotationTypeEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcAnnotationTypeEnumEnum m_enum;
	};
}
