/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcBeamTypeEnum = ENUMERATION OF	(BEAM	,CORNICE	,DIAPHRAGM	,EDGEBEAM	,GIRDER_SEGMENT	,HATSTONE	,HOLLOWCORE	,JOIST	,LINTEL	,PIERCAP	,SPANDREL	,T_BEAM	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcBeamTypeEnum : virtual public BuildingObject
	{
	public:
		enum IfcBeamTypeEnumEnum
		{
			ENUM_BEAM,
			ENUM_CORNICE,
			ENUM_DIAPHRAGM,
			ENUM_EDGEBEAM,
			ENUM_GIRDER_SEGMENT,
			ENUM_HATSTONE,
			ENUM_HOLLOWCORE,
			ENUM_JOIST,
			ENUM_LINTEL,
			ENUM_PIERCAP,
			ENUM_SPANDREL,
			ENUM_T_BEAM,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcBeamTypeEnum() = default;
		IfcBeamTypeEnum( IfcBeamTypeEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 358033588; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcBeamTypeEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcBeamTypeEnumEnum m_enum;
	};
}
