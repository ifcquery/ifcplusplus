/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcCableCarrierSegmentTypeEnum = ENUMERATION OF	(CABLEBRACKET	,CABLELADDERSEGMENT	,CABLETRAYSEGMENT	,CABLETRUNKINGSEGMENT	,CATENARYWIRE	,CONDUITSEGMENT	,DROPPER	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcCableCarrierSegmentTypeEnum : virtual public BuildingObject
	{
	public:
		enum IfcCableCarrierSegmentTypeEnumEnum
		{
			ENUM_CABLEBRACKET,
			ENUM_CABLELADDERSEGMENT,
			ENUM_CABLETRAYSEGMENT,
			ENUM_CABLETRUNKINGSEGMENT,
			ENUM_CATENARYWIRE,
			ENUM_CONDUITSEGMENT,
			ENUM_DROPPER,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcCableCarrierSegmentTypeEnum() = default;
		IfcCableCarrierSegmentTypeEnum( IfcCableCarrierSegmentTypeEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 1501183454; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcCableCarrierSegmentTypeEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcCableCarrierSegmentTypeEnumEnum m_enum;
	};
}
