/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcConstructionEquipmentResourceTypeEnum = ENUMERATION OF	(DEMOLISHING	,EARTHMOVING	,ERECTING	,HEATING	,LIGHTING	,PAVING	,PUMPING	,TRANSPORTING	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcConstructionEquipmentResourceTypeEnum : virtual public BuildingObject
	{
	public:
		enum IfcConstructionEquipmentResourceTypeEnumEnum
		{
			ENUM_DEMOLISHING,
			ENUM_EARTHMOVING,
			ENUM_ERECTING,
			ENUM_HEATING,
			ENUM_LIGHTING,
			ENUM_PAVING,
			ENUM_PUMPING,
			ENUM_TRANSPORTING,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcConstructionEquipmentResourceTypeEnum() = default;
		IfcConstructionEquipmentResourceTypeEnum( IfcConstructionEquipmentResourceTypeEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 91683625; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcConstructionEquipmentResourceTypeEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcConstructionEquipmentResourceTypeEnumEnum m_enum;
	};
}
