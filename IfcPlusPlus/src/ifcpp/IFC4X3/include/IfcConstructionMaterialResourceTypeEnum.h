/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcConstructionMaterialResourceTypeEnum = ENUMERATION OF	(AGGREGATES	,CONCRETE	,DRYWALL	,FUEL	,GYPSUM	,MASONRY	,METAL	,PLASTIC	,WOOD	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcConstructionMaterialResourceTypeEnum : virtual public BuildingObject
	{
	public:
		enum IfcConstructionMaterialResourceTypeEnumEnum
		{
			ENUM_AGGREGATES,
			ENUM_CONCRETE,
			ENUM_DRYWALL,
			ENUM_FUEL,
			ENUM_GYPSUM,
			ENUM_MASONRY,
			ENUM_METAL,
			ENUM_PLASTIC,
			ENUM_WOOD,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcConstructionMaterialResourceTypeEnum() = default;
		IfcConstructionMaterialResourceTypeEnum( IfcConstructionMaterialResourceTypeEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 3593671318; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcConstructionMaterialResourceTypeEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcConstructionMaterialResourceTypeEnumEnum m_enum;
	};
}
