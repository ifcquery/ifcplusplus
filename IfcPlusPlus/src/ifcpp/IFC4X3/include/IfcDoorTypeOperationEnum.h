/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcDoorTypeOperationEnum = ENUMERATION OF	(DOUBLE_DOOR_DOUBLE_SWING	,DOUBLE_DOOR_FOLDING	,DOUBLE_DOOR_LIFTING_VERTICAL	,DOUBLE_DOOR_SINGLE_SWING	,DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT	,DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT	,DOUBLE_DOOR_SLIDING	,DOUBLE_SWING_LEFT	,DOUBLE_SWING_RIGHT	,FOLDING_TO_LEFT	,FOLDING_TO_RIGHT	,LIFTING_HORIZONTAL	,LIFTING_VERTICAL_LEFT	,LIFTING_VERTICAL_RIGHT	,REVOLVING	,REVOLVING_VERTICAL	,ROLLINGUP	,SINGLE_SWING_LEFT	,SINGLE_SWING_RIGHT	,SLIDING_TO_LEFT	,SLIDING_TO_RIGHT	,SWING_FIXED_LEFT	,SWING_FIXED_RIGHT	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcDoorTypeOperationEnum : virtual public BuildingObject
	{
	public:
		enum IfcDoorTypeOperationEnumEnum
		{
			ENUM_DOUBLE_DOOR_DOUBLE_SWING,
			ENUM_DOUBLE_DOOR_FOLDING,
			ENUM_DOUBLE_DOOR_LIFTING_VERTICAL,
			ENUM_DOUBLE_DOOR_SINGLE_SWING,
			ENUM_DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT,
			ENUM_DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT,
			ENUM_DOUBLE_DOOR_SLIDING,
			ENUM_DOUBLE_SWING_LEFT,
			ENUM_DOUBLE_SWING_RIGHT,
			ENUM_FOLDING_TO_LEFT,
			ENUM_FOLDING_TO_RIGHT,
			ENUM_LIFTING_HORIZONTAL,
			ENUM_LIFTING_VERTICAL_LEFT,
			ENUM_LIFTING_VERTICAL_RIGHT,
			ENUM_REVOLVING,
			ENUM_REVOLVING_VERTICAL,
			ENUM_ROLLINGUP,
			ENUM_SINGLE_SWING_LEFT,
			ENUM_SINGLE_SWING_RIGHT,
			ENUM_SLIDING_TO_LEFT,
			ENUM_SLIDING_TO_RIGHT,
			ENUM_SWING_FIXED_LEFT,
			ENUM_SWING_FIXED_RIGHT,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcDoorTypeOperationEnum() = default;
		IfcDoorTypeOperationEnum( IfcDoorTypeOperationEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 4016286979; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcDoorTypeOperationEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcDoorTypeOperationEnumEnum m_enum;
	};
}
