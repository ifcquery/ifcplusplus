/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcFurnitureTypeEnum = ENUMERATION OF	(BED	,CHAIR	,DESK	,FILECABINET	,SHELF	,SOFA	,TABLE	,TECHNICALCABINET	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcFurnitureTypeEnum : virtual public BuildingObject
	{
	public:
		enum IfcFurnitureTypeEnumEnum
		{
			ENUM_BED,
			ENUM_CHAIR,
			ENUM_DESK,
			ENUM_FILECABINET,
			ENUM_SHELF,
			ENUM_SOFA,
			ENUM_TABLE,
			ENUM_TECHNICALCABINET,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcFurnitureTypeEnum() = default;
		IfcFurnitureTypeEnum( IfcFurnitureTypeEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 1639589134; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcFurnitureTypeEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcFurnitureTypeEnumEnum m_enum;
	};
}
