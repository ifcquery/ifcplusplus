/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcHumidifierTypeEnum = ENUMERATION OF	(ADIABATICAIRWASHER	,ADIABATICATOMIZING	,ADIABATICCOMPRESSEDAIRNOZZLE	,ADIABATICPAN	,ADIABATICRIGIDMEDIA	,ADIABATICULTRASONIC	,ADIABATICWETTEDELEMENT	,ASSISTEDBUTANE	,ASSISTEDELECTRIC	,ASSISTEDNATURALGAS	,ASSISTEDPROPANE	,ASSISTEDSTEAM	,STEAMINJECTION	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcHumidifierTypeEnum : virtual public BuildingObject
	{
	public:
		enum IfcHumidifierTypeEnumEnum
		{
			ENUM_ADIABATICAIRWASHER,
			ENUM_ADIABATICATOMIZING,
			ENUM_ADIABATICCOMPRESSEDAIRNOZZLE,
			ENUM_ADIABATICPAN,
			ENUM_ADIABATICRIGIDMEDIA,
			ENUM_ADIABATICULTRASONIC,
			ENUM_ADIABATICWETTEDELEMENT,
			ENUM_ASSISTEDBUTANE,
			ENUM_ASSISTEDELECTRIC,
			ENUM_ASSISTEDNATURALGAS,
			ENUM_ASSISTEDPROPANE,
			ENUM_ASSISTEDSTEAM,
			ENUM_STEAMINJECTION,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcHumidifierTypeEnum() = default;
		IfcHumidifierTypeEnum( IfcHumidifierTypeEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 237118112; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcHumidifierTypeEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcHumidifierTypeEnumEnum m_enum;
	};
}
