/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcLaborResourceTypeEnum = ENUMERATION OF	(ADMINISTRATION	,CARPENTRY	,CLEANING	,CONCRETE	,DRYWALL	,ELECTRIC	,FINISHING	,FLOORING	,GENERAL	,HVAC	,LANDSCAPING	,MASONRY	,PAINTING	,PAVING	,PLUMBING	,ROOFING	,SITEGRADING	,STEELWORK	,SURVEYING	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcLaborResourceTypeEnum : virtual public BuildingObject
	{
	public:
		enum IfcLaborResourceTypeEnumEnum
		{
			ENUM_ADMINISTRATION,
			ENUM_CARPENTRY,
			ENUM_CLEANING,
			ENUM_CONCRETE,
			ENUM_DRYWALL,
			ENUM_ELECTRIC,
			ENUM_FINISHING,
			ENUM_FLOORING,
			ENUM_GENERAL,
			ENUM_HVAC,
			ENUM_LANDSCAPING,
			ENUM_MASONRY,
			ENUM_PAINTING,
			ENUM_PAVING,
			ENUM_PLUMBING,
			ENUM_ROOFING,
			ENUM_SITEGRADING,
			ENUM_STEELWORK,
			ENUM_SURVEYING,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcLaborResourceTypeEnum() = default;
		IfcLaborResourceTypeEnum( IfcLaborResourceTypeEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 1162880614; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcLaborResourceTypeEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcLaborResourceTypeEnumEnum m_enum;
	};
}
