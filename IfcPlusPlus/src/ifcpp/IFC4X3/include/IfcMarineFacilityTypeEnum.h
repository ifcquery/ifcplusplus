/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcMarineFacilityTypeEnum = ENUMERATION OF	(BARRIERBEACH	,BREAKWATER	,CANAL	,DRYDOCK	,FLOATINGDOCK	,HYDROLIFT	,JETTY	,LAUNCHRECOVERY	,MARINEDEFENCE	,NAVIGATIONALCHANNEL	,PORT	,QUAY	,REVETMENT	,SHIPLIFT	,SHIPLOCK	,SHIPYARD	,SLIPWAY	,WATERWAY	,WATERWAYSHIPLIFT	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcMarineFacilityTypeEnum : virtual public BuildingObject
	{
	public:
		enum IfcMarineFacilityTypeEnumEnum
		{
			ENUM_BARRIERBEACH,
			ENUM_BREAKWATER,
			ENUM_CANAL,
			ENUM_DRYDOCK,
			ENUM_FLOATINGDOCK,
			ENUM_HYDROLIFT,
			ENUM_JETTY,
			ENUM_LAUNCHRECOVERY,
			ENUM_MARINEDEFENCE,
			ENUM_NAVIGATIONALCHANNEL,
			ENUM_PORT,
			ENUM_QUAY,
			ENUM_REVETMENT,
			ENUM_SHIPLIFT,
			ENUM_SHIPLOCK,
			ENUM_SHIPYARD,
			ENUM_SLIPWAY,
			ENUM_WATERWAY,
			ENUM_WATERWAYSHIPLIFT,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcMarineFacilityTypeEnum() = default;
		IfcMarineFacilityTypeEnum( IfcMarineFacilityTypeEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 4135496989; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcMarineFacilityTypeEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcMarineFacilityTypeEnumEnum m_enum;
	};
}
