/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcObjectiveEnum = ENUMERATION OF	(CODECOMPLIANCE	,CODEWAIVER	,DESIGNINTENT	,EXTERNAL	,HEALTHANDSAFETY	,MERGECONFLICT	,MODELVIEW	,PARAMETER	,REQUIREMENT	,SPECIFICATION	,TRIGGERCONDITION	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcObjectiveEnum : virtual public BuildingObject
	{
	public:
		enum IfcObjectiveEnumEnum
		{
			ENUM_CODECOMPLIANCE,
			ENUM_CODEWAIVER,
			ENUM_DESIGNINTENT,
			ENUM_EXTERNAL,
			ENUM_HEALTHANDSAFETY,
			ENUM_MERGECONFLICT,
			ENUM_MODELVIEW,
			ENUM_PARAMETER,
			ENUM_REQUIREMENT,
			ENUM_SPECIFICATION,
			ENUM_TRIGGERCONDITION,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcObjectiveEnum() = default;
		IfcObjectiveEnum( IfcObjectiveEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 1962769620; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcObjectiveEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcObjectiveEnumEnum m_enum;
	};
}
