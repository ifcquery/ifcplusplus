/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcPileTypeEnum = ENUMERATION OF	(BORED	,COHESION	,DRIVEN	,FRICTION	,JETGROUTING	,SUPPORT	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcPileTypeEnum : virtual public BuildingObject
	{
	public:
		enum IfcPileTypeEnumEnum
		{
			ENUM_BORED,
			ENUM_COHESION,
			ENUM_DRIVEN,
			ENUM_FRICTION,
			ENUM_JETGROUTING,
			ENUM_SUPPORT,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcPileTypeEnum() = default;
		IfcPileTypeEnum( IfcPileTypeEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 2974343352; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcPileTypeEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcPileTypeEnumEnum m_enum;
	};
}
