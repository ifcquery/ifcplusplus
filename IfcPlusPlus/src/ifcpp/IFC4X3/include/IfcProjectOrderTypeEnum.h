/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcProjectOrderTypeEnum = ENUMERATION OF	(CHANGEORDER	,MAINTENANCEWORKORDER	,MOVEORDER	,PURCHASEORDER	,WORKORDER	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcProjectOrderTypeEnum : virtual public BuildingObject
	{
	public:
		enum IfcProjectOrderTypeEnumEnum
		{
			ENUM_CHANGEORDER,
			ENUM_MAINTENANCEWORKORDER,
			ENUM_MOVEORDER,
			ENUM_PURCHASEORDER,
			ENUM_WORKORDER,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcProjectOrderTypeEnum() = default;
		IfcProjectOrderTypeEnum( IfcProjectOrderTypeEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 1551283683; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcProjectOrderTypeEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcProjectOrderTypeEnumEnum m_enum;
	};
}
