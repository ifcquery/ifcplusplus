/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcRecurrenceTypeEnum = ENUMERATION OF	(BY_DAY_COUNT	,BY_WEEKDAY_COUNT	,DAILY	,MONTHLY_BY_DAY_OF_MONTH	,MONTHLY_BY_POSITION	,WEEKLY	,YEARLY_BY_DAY_OF_MONTH	,YEARLY_BY_POSITION);
	class IFCQUERY_EXPORT IfcRecurrenceTypeEnum : virtual public BuildingObject
	{
	public:
		enum IfcRecurrenceTypeEnumEnum
		{
			ENUM_BY_DAY_COUNT,
			ENUM_BY_WEEKDAY_COUNT,
			ENUM_DAILY,
			ENUM_MONTHLY_BY_DAY_OF_MONTH,
			ENUM_MONTHLY_BY_POSITION,
			ENUM_WEEKLY,
			ENUM_YEARLY_BY_DAY_OF_MONTH,
			ENUM_YEARLY_BY_POSITION
		};

		IfcRecurrenceTypeEnum() = default;
		IfcRecurrenceTypeEnum( IfcRecurrenceTypeEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 1390679141; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcRecurrenceTypeEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcRecurrenceTypeEnumEnum m_enum;
	};
}
