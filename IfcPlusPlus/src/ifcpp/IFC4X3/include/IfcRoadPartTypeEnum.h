/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcRoadPartTypeEnum = ENUMERATION OF	(BICYCLECROSSING	,BUS_STOP	,CARRIAGEWAY	,CENTRALISLAND	,CENTRALRESERVE	,HARDSHOULDER	,INTERSECTION	,LAYBY	,PARKINGBAY	,PASSINGBAY	,PEDESTRIAN_CROSSING	,RAILWAYCROSSING	,REFUGEISLAND	,ROADSEGMENT	,ROADSIDE	,ROADSIDEPART	,ROADWAYPLATEAU	,ROUNDABOUT	,SHOULDER	,SIDEWALK	,SOFTSHOULDER	,TOLLPLAZA	,TRAFFICISLAND	,TRAFFICLANE	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcRoadPartTypeEnum : virtual public BuildingObject
	{
	public:
		enum IfcRoadPartTypeEnumEnum
		{
			ENUM_BICYCLECROSSING,
			ENUM_BUS_STOP,
			ENUM_CARRIAGEWAY,
			ENUM_CENTRALISLAND,
			ENUM_CENTRALRESERVE,
			ENUM_HARDSHOULDER,
			ENUM_INTERSECTION,
			ENUM_LAYBY,
			ENUM_PARKINGBAY,
			ENUM_PASSINGBAY,
			ENUM_PEDESTRIAN_CROSSING,
			ENUM_RAILWAYCROSSING,
			ENUM_REFUGEISLAND,
			ENUM_ROADSEGMENT,
			ENUM_ROADSIDE,
			ENUM_ROADSIDEPART,
			ENUM_ROADWAYPLATEAU,
			ENUM_ROUNDABOUT,
			ENUM_SHOULDER,
			ENUM_SIDEWALK,
			ENUM_SOFTSHOULDER,
			ENUM_TOLLPLAZA,
			ENUM_TRAFFICISLAND,
			ENUM_TRAFFICLANE,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcRoadPartTypeEnum() = default;
		IfcRoadPartTypeEnum( IfcRoadPartTypeEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 3629595153; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcRoadPartTypeEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcRoadPartTypeEnumEnum m_enum;
	};
}
