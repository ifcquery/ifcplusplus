/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcRoleEnum = ENUMERATION OF	(ARCHITECT	,BUILDINGOPERATOR	,BUILDINGOWNER	,CIVILENGINEER	,CLIENT	,COMMISSIONINGENGINEER	,CONSTRUCTIONMANAGER	,CONSULTANT	,CONTRACTOR	,COSTENGINEER	,ELECTRICALENGINEER	,ENGINEER	,FACILITIESMANAGER	,FIELDCONSTRUCTIONMANAGER	,MANUFACTURER	,MECHANICALENGINEER	,OWNER	,PROJECTMANAGER	,RESELLER	,STRUCTURALENGINEER	,SUBCONTRACTOR	,SUPPLIER	,USERDEFINED);
	class IFCQUERY_EXPORT IfcRoleEnum : virtual public BuildingObject
	{
	public:
		enum IfcRoleEnumEnum
		{
			ENUM_ARCHITECT,
			ENUM_BUILDINGOPERATOR,
			ENUM_BUILDINGOWNER,
			ENUM_CIVILENGINEER,
			ENUM_CLIENT,
			ENUM_COMMISSIONINGENGINEER,
			ENUM_CONSTRUCTIONMANAGER,
			ENUM_CONSULTANT,
			ENUM_CONTRACTOR,
			ENUM_COSTENGINEER,
			ENUM_ELECTRICALENGINEER,
			ENUM_ENGINEER,
			ENUM_FACILITIESMANAGER,
			ENUM_FIELDCONSTRUCTIONMANAGER,
			ENUM_MANUFACTURER,
			ENUM_MECHANICALENGINEER,
			ENUM_OWNER,
			ENUM_PROJECTMANAGER,
			ENUM_RESELLER,
			ENUM_STRUCTURALENGINEER,
			ENUM_SUBCONTRACTOR,
			ENUM_SUPPLIER,
			ENUM_USERDEFINED
		};

		IfcRoleEnum() = default;
		IfcRoleEnum( IfcRoleEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 3869224543; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcRoleEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcRoleEnumEnum m_enum;
	};
}
