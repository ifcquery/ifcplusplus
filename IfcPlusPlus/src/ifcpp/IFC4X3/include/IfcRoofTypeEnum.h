/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcRoofTypeEnum = ENUMERATION OF	(BARREL_ROOF	,BUTTERFLY_ROOF	,DOME_ROOF	,FLAT_ROOF	,FREEFORM	,GABLE_ROOF	,GAMBREL_ROOF	,HIPPED_GABLE_ROOF	,HIP_ROOF	,MANSARD_ROOF	,PAVILION_ROOF	,RAINBOW_ROOF	,SHED_ROOF	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcRoofTypeEnum : virtual public BuildingObject
	{
	public:
		enum IfcRoofTypeEnumEnum
		{
			ENUM_BARREL_ROOF,
			ENUM_BUTTERFLY_ROOF,
			ENUM_DOME_ROOF,
			ENUM_FLAT_ROOF,
			ENUM_FREEFORM,
			ENUM_GABLE_ROOF,
			ENUM_GAMBREL_ROOF,
			ENUM_HIPPED_GABLE_ROOF,
			ENUM_HIP_ROOF,
			ENUM_MANSARD_ROOF,
			ENUM_PAVILION_ROOF,
			ENUM_RAINBOW_ROOF,
			ENUM_SHED_ROOF,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcRoofTypeEnum() = default;
		IfcRoofTypeEnum( IfcRoofTypeEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 1736192930; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcRoofTypeEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcRoofTypeEnumEnum m_enum;
	};
}
