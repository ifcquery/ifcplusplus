/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcSequenceEnum = ENUMERATION OF	(FINISH_FINISH	,FINISH_START	,START_FINISH	,START_START	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcSequenceEnum : virtual public BuildingObject
	{
	public:
		enum IfcSequenceEnumEnum
		{
			ENUM_FINISH_FINISH,
			ENUM_FINISH_START,
			ENUM_START_FINISH,
			ENUM_START_START,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcSequenceEnum() = default;
		IfcSequenceEnum( IfcSequenceEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 628493158; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcSequenceEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcSequenceEnumEnum m_enum;
	};
}
