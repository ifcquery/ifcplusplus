/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcStairTypeEnum = ENUMERATION OF	(CURVED_RUN_STAIR	,DOUBLE_RETURN_STAIR	,HALF_TURN_STAIR	,HALF_WINDING_STAIR	,LADDER	,QUARTER_TURN_STAIR	,QUARTER_WINDING_STAIR	,SPIRAL_STAIR	,STRAIGHT_RUN_STAIR	,THREE_QUARTER_TURN_STAIR	,THREE_QUARTER_WINDING_STAIR	,TWO_CURVED_RUN_STAIR	,TWO_QUARTER_TURN_STAIR	,TWO_QUARTER_WINDING_STAIR	,TWO_STRAIGHT_RUN_STAIR	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcStairTypeEnum : virtual public BuildingObject
	{
	public:
		enum IfcStairTypeEnumEnum
		{
			ENUM_CURVED_RUN_STAIR,
			ENUM_DOUBLE_RETURN_STAIR,
			ENUM_HALF_TURN_STAIR,
			ENUM_HALF_WINDING_STAIR,
			ENUM_LADDER,
			ENUM_QUARTER_TURN_STAIR,
			ENUM_QUARTER_WINDING_STAIR,
			ENUM_SPIRAL_STAIR,
			ENUM_STRAIGHT_RUN_STAIR,
			ENUM_THREE_QUARTER_TURN_STAIR,
			ENUM_THREE_QUARTER_WINDING_STAIR,
			ENUM_TWO_CURVED_RUN_STAIR,
			ENUM_TWO_QUARTER_TURN_STAIR,
			ENUM_TWO_QUARTER_WINDING_STAIR,
			ENUM_TWO_STRAIGHT_RUN_STAIR,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcStairTypeEnum() = default;
		IfcStairTypeEnum( IfcStairTypeEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 2319738306; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcStairTypeEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcStairTypeEnumEnum m_enum;
	};
}
