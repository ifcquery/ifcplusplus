/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcSurfaceFeatureTypeEnum = ENUMERATION OF	(DEFECT	,HATCHMARKING	,LINEMARKING	,MARK	,NONSKIDSURFACING	,PAVEMENTSURFACEMARKING	,RUMBLESTRIP	,SYMBOLMARKING	,TAG	,TRANSVERSERUMBLESTRIP	,TREATMENT	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcSurfaceFeatureTypeEnum : virtual public BuildingObject
	{
	public:
		enum IfcSurfaceFeatureTypeEnumEnum
		{
			ENUM_DEFECT,
			ENUM_HATCHMARKING,
			ENUM_LINEMARKING,
			ENUM_MARK,
			ENUM_NONSKIDSURFACING,
			ENUM_PAVEMENTSURFACEMARKING,
			ENUM_RUMBLESTRIP,
			ENUM_SYMBOLMARKING,
			ENUM_TAG,
			ENUM_TRANSVERSERUMBLESTRIP,
			ENUM_TREATMENT,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcSurfaceFeatureTypeEnum() = default;
		IfcSurfaceFeatureTypeEnum( IfcSurfaceFeatureTypeEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 652748602; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcSurfaceFeatureTypeEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcSurfaceFeatureTypeEnumEnum m_enum;
	};
}
