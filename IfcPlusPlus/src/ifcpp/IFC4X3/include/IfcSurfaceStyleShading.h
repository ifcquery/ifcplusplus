/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */
#pragma once
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"
#include "IfcSurfaceStyleElementSelect.h"
#include "IfcPresentationItem.h"
namespace IFC4X3
{
	class IFCQUERY_EXPORT IfcColourRgb;
	class IFCQUERY_EXPORT IfcNormalisedRatioMeasure;
	//ENTITY
	class IFCQUERY_EXPORT IfcSurfaceStyleShading : virtual public IfcSurfaceStyleElementSelect, public IfcPresentationItem
	{
	public:
		IfcSurfaceStyleShading() = default;
		IfcSurfaceStyleShading( int id );
		virtual void getStepLine( std::stringstream& stream, size_t precision ) const;
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		virtual void readStepArguments( const std::vector<std::string>& args, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		virtual void setInverseCounterparts( shared_ptr<BuildingEntity> ptr_self );
		virtual uint8_t getNumAttributes() const { return 2; }
		virtual void getAttributes( std::vector<std::pair<std::string, shared_ptr<BuildingObject> > >& vec_attributes ) const;
		virtual void getAttributesInverse( std::vector<std::pair<std::string, shared_ptr<BuildingObject> > >& vec_attributes ) const;
		virtual void unlinkFromInverseCounterparts();
		virtual uint32_t classID() const { return 846575682; }

		// IfcPresentationItem -----------------------------------------------------------

		// IfcSurfaceStyleShading -----------------------------------------------------------
		// attributes:
		shared_ptr<IfcColourRgb>				m_SurfaceColour;
		shared_ptr<IfcNormalisedRatioMeasure>	m_Transparency;				//optional
	};
}
