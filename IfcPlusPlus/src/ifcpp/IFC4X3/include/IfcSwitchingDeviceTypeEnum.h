/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcSwitchingDeviceTypeEnum = ENUMERATION OF	(CONTACTOR	,DIMMERSWITCH	,EMERGENCYSTOP	,KEYPAD	,MOMENTARYSWITCH	,RELAY	,SELECTORSWITCH	,STARTER	,START_AND_STOP_EQUIPMENT	,SWITCHDISCONNECTOR	,TOGGLESWITCH	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcSwitchingDeviceTypeEnum : virtual public BuildingObject
	{
	public:
		enum IfcSwitchingDeviceTypeEnumEnum
		{
			ENUM_CONTACTOR,
			ENUM_DIMMERSWITCH,
			ENUM_EMERGENCYSTOP,
			ENUM_KEYPAD,
			ENUM_MOMENTARYSWITCH,
			ENUM_RELAY,
			ENUM_SELECTORSWITCH,
			ENUM_STARTER,
			ENUM_START_AND_STOP_EQUIPMENT,
			ENUM_SWITCHDISCONNECTOR,
			ENUM_TOGGLESWITCH,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcSwitchingDeviceTypeEnum() = default;
		IfcSwitchingDeviceTypeEnum( IfcSwitchingDeviceTypeEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 1942645678; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcSwitchingDeviceTypeEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcSwitchingDeviceTypeEnumEnum m_enum;
	};
}
