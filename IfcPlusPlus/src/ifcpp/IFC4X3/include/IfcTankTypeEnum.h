/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcTankTypeEnum = ENUMERATION OF	(BASIN	,BREAKPRESSURE	,EXPANSION	,FEEDANDEXPANSION	,OILRETENTIONTRAY	,PRESSUREVESSEL	,STORAGE	,VESSEL	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcTankTypeEnum : virtual public BuildingObject
	{
	public:
		enum IfcTankTypeEnumEnum
		{
			ENUM_BASIN,
			ENUM_BREAKPRESSURE,
			ENUM_EXPANSION,
			ENUM_FEEDANDEXPANSION,
			ENUM_OILRETENTIONTRAY,
			ENUM_PRESSUREVESSEL,
			ENUM_STORAGE,
			ENUM_VESSEL,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcTankTypeEnum() = default;
		IfcTankTypeEnum( IfcTankTypeEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 3300536621; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcTankTypeEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcTankTypeEnumEnum m_enum;
	};
}
