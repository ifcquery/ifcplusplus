/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

namespace IFC4X3
{
	// TYPE IfcVoidingFeatureTypeEnum = ENUMERATION OF	(CHAMFER	,CUTOUT	,EDGE	,HOLE	,MITER	,NOTCH	,USERDEFINED	,NOTDEFINED);
	class IFCQUERY_EXPORT IfcVoidingFeatureTypeEnum : virtual public BuildingObject
	{
	public:
		enum IfcVoidingFeatureTypeEnumEnum
		{
			ENUM_CHAMFER,
			ENUM_CUTOUT,
			ENUM_EDGE,
			ENUM_HOLE,
			ENUM_MITER,
			ENUM_NOTCH,
			ENUM_USERDEFINED,
			ENUM_NOTDEFINED
		};

		IfcVoidingFeatureTypeEnum() = default;
		IfcVoidingFeatureTypeEnum( IfcVoidingFeatureTypeEnumEnum e ) { m_enum = e; }
		virtual uint32_t classID() const { return 3288126668; }
		virtual void getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const;
		static shared_ptr<IfcVoidingFeatureTypeEnum> createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound );
		IfcVoidingFeatureTypeEnumEnum m_enum;
	};
}
