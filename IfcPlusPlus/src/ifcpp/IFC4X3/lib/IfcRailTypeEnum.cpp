/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#include <sstream>
#include <limits>
#include <map>
#include "ifcpp/reader/ReaderUtil.h"
#include "ifcpp/writer/WriterUtil.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingException.h"
#include "ifcpp/IFC4X3/include/IfcRailTypeEnum.h"

// TYPE IfcRailTypeEnum = ENUMERATION OF	(BLADE	,CHECKRAIL	,GUARDRAIL	,RACKRAIL	,RAIL	,STOCKRAIL	,USERDEFINED	,NOTDEFINED);
void IFC4X3::IfcRailTypeEnum::getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const
{
	if( is_select_type ) { stream << "IFCRAILTYPEENUM("; }
	switch( m_enum )
	{
		case ENUM_BLADE:	stream << ".BLADE."; break;
		case ENUM_CHECKRAIL:	stream << ".CHECKRAIL."; break;
		case ENUM_GUARDRAIL:	stream << ".GUARDRAIL."; break;
		case ENUM_RACKRAIL:	stream << ".RACKRAIL."; break;
		case ENUM_RAIL:	stream << ".RAIL."; break;
		case ENUM_STOCKRAIL:	stream << ".STOCKRAIL."; break;
		case ENUM_USERDEFINED:	stream << ".USERDEFINED."; break;
		case ENUM_NOTDEFINED:	stream << ".NOTDEFINED."; break;
	}
	if( is_select_type ) { stream << ")"; }
}
shared_ptr<IFC4X3::IfcRailTypeEnum> IFC4X3::IfcRailTypeEnum::createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )
{
	if( arg.size() == 0 ) { return shared_ptr<IfcRailTypeEnum>(); }
	if( arg.compare( "$" ) == 0 ) { return shared_ptr<IfcRailTypeEnum>(); }
	if( arg.compare( "*" ) == 0 ) { return shared_ptr<IfcRailTypeEnum>(); }
	shared_ptr<IfcRailTypeEnum> type_object( new IfcRailTypeEnum() );
	if( std_iequal( arg, ".BLADE." ) )
	{
		type_object->m_enum = IfcRailTypeEnum::ENUM_BLADE;
	}
	else if( std_iequal( arg, ".CHECKRAIL." ) )
	{
		type_object->m_enum = IfcRailTypeEnum::ENUM_CHECKRAIL;
	}
	else if( std_iequal( arg, ".GUARDRAIL." ) )
	{
		type_object->m_enum = IfcRailTypeEnum::ENUM_GUARDRAIL;
	}
	else if( std_iequal( arg, ".RACKRAIL." ) )
	{
		type_object->m_enum = IfcRailTypeEnum::ENUM_RACKRAIL;
	}
	else if( std_iequal( arg, ".RAIL." ) )
	{
		type_object->m_enum = IfcRailTypeEnum::ENUM_RAIL;
	}
	else if( std_iequal( arg, ".STOCKRAIL." ) )
	{
		type_object->m_enum = IfcRailTypeEnum::ENUM_STOCKRAIL;
	}
	else if( std_iequal( arg, ".USERDEFINED." ) )
	{
		type_object->m_enum = IfcRailTypeEnum::ENUM_USERDEFINED;
	}
	else if( std_iequal( arg, ".NOTDEFINED." ) )
	{
		type_object->m_enum = IfcRailTypeEnum::ENUM_NOTDEFINED;
	}
	return type_object;
}
