/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#include <sstream>
#include <limits>
#include <map>
#include "ifcpp/reader/ReaderUtil.h"
#include "ifcpp/writer/WriterUtil.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingException.h"
#include "ifcpp/IFC4X3/include/IfcVibrationDamperTypeEnum.h"

// TYPE IfcVibrationDamperTypeEnum = ENUMERATION OF	(AXIAL_YIELD	,BENDING_YIELD	,FRICTION	,RUBBER	,SHEAR_YIELD	,VISCOUS	,USERDEFINED	,NOTDEFINED);
void IFC4X3::IfcVibrationDamperTypeEnum::getStepParameter( std::stringstream& stream, bool is_select_type, size_t precision ) const
{
	if( is_select_type ) { stream << "IFCVIBRATIONDAMPERTYPEENUM("; }
	switch( m_enum )
	{
		case ENUM_AXIAL_YIELD:	stream << ".AXIAL_YIELD."; break;
		case ENUM_BENDING_YIELD:	stream << ".BENDING_YIELD."; break;
		case ENUM_FRICTION:	stream << ".FRICTION."; break;
		case ENUM_RUBBER:	stream << ".RUBBER."; break;
		case ENUM_SHEAR_YIELD:	stream << ".SHEAR_YIELD."; break;
		case ENUM_VISCOUS:	stream << ".VISCOUS."; break;
		case ENUM_USERDEFINED:	stream << ".USERDEFINED."; break;
		case ENUM_NOTDEFINED:	stream << ".NOTDEFINED."; break;
	}
	if( is_select_type ) { stream << ")"; }
}
shared_ptr<IFC4X3::IfcVibrationDamperTypeEnum> IFC4X3::IfcVibrationDamperTypeEnum::createObjectFromSTEP( const std::string& arg, const BuildingModelMapType<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream, std::unordered_set<int>& entityIdNotFound )
{
	if( arg.size() == 0 ) { return shared_ptr<IfcVibrationDamperTypeEnum>(); }
	if( arg.compare( "$" ) == 0 ) { return shared_ptr<IfcVibrationDamperTypeEnum>(); }
	if( arg.compare( "*" ) == 0 ) { return shared_ptr<IfcVibrationDamperTypeEnum>(); }
	shared_ptr<IfcVibrationDamperTypeEnum> type_object( new IfcVibrationDamperTypeEnum() );
	if( std_iequal( arg, ".AXIAL_YIELD." ) )
	{
		type_object->m_enum = IfcVibrationDamperTypeEnum::ENUM_AXIAL_YIELD;
	}
	else if( std_iequal( arg, ".BENDING_YIELD." ) )
	{
		type_object->m_enum = IfcVibrationDamperTypeEnum::ENUM_BENDING_YIELD;
	}
	else if( std_iequal( arg, ".FRICTION." ) )
	{
		type_object->m_enum = IfcVibrationDamperTypeEnum::ENUM_FRICTION;
	}
	else if( std_iequal( arg, ".RUBBER." ) )
	{
		type_object->m_enum = IfcVibrationDamperTypeEnum::ENUM_RUBBER;
	}
	else if( std_iequal( arg, ".SHEAR_YIELD." ) )
	{
		type_object->m_enum = IfcVibrationDamperTypeEnum::ENUM_SHEAR_YIELD;
	}
	else if( std_iequal( arg, ".VISCOUS." ) )
	{
		type_object->m_enum = IfcVibrationDamperTypeEnum::ENUM_VISCOUS;
	}
	else if( std_iequal( arg, ".USERDEFINED." ) )
	{
		type_object->m_enum = IfcVibrationDamperTypeEnum::ENUM_USERDEFINED;
	}
	else if( std_iequal( arg, ".NOTDEFINED." ) )
	{
		type_object->m_enum = IfcVibrationDamperTypeEnum::ENUM_NOTDEFINED;
	}
	return type_object;
}
