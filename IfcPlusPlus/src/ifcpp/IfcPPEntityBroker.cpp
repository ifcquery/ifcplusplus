/* -*-c++-*- IfcPlusPlus - www.ifcplusplus.com - Copyright (C) 2011 Fabian Gerold
*
* This library is open source and may be redistributed and/or modified under  
* the terms of the OpenSceneGraph Public License (OSGPL) version 0.0 or 
* (at your option) any later version.  The full license is in LICENSE file
* included with this distribution, and on the openscenegraph.org website.
* 
* This library is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
* OpenSceneGraph Public License for more details.
*/

#include <vector>
#include <map>
#include <string>
#include "ifcpp/IfcPPEntities.h"
#include "ifcpp/IfcPPEntityEnums.h"
#include "ifcpp/model/IfcPPException.h"

IfcPPEntity* createIfcPPEntity( const IfcPPEntityEnum entity_enum )
{
	switch( entity_enum )
	{
		case IFCACTIONREQUEST:return new IfcActionRequest();
		case IFCACTOR:return new IfcActor();
		case IFCACTORROLE:return new IfcActorRole();
		case IFCACTUATOR:return new IfcActuator();
		case IFCACTUATORTYPE:return new IfcActuatorType();
		case IFCADDRESS:return new IfcAddress();
		case IFCADVANCEDBREP:return new IfcAdvancedBrep();
		case IFCADVANCEDBREPWITHVOIDS:return new IfcAdvancedBrepWithVoids();
		case IFCADVANCEDFACE:return new IfcAdvancedFace();
		case IFCAIRTERMINAL:return new IfcAirTerminal();
		case IFCAIRTERMINALBOX:return new IfcAirTerminalBox();
		case IFCAIRTERMINALBOXTYPE:return new IfcAirTerminalBoxType();
		case IFCAIRTERMINALTYPE:return new IfcAirTerminalType();
		case IFCAIRTOAIRHEATRECOVERY:return new IfcAirToAirHeatRecovery();
		case IFCAIRTOAIRHEATRECOVERYTYPE:return new IfcAirToAirHeatRecoveryType();
		case IFCALARM:return new IfcAlarm();
		case IFCALARMTYPE:return new IfcAlarmType();
		case IFCANNOTATION:return new IfcAnnotation();
		case IFCANNOTATIONFILLAREA:return new IfcAnnotationFillArea();
		case IFCAPPLICATION:return new IfcApplication();
		case IFCAPPLIEDVALUE:return new IfcAppliedValue();
		case IFCAPPROVAL:return new IfcApproval();
		case IFCAPPROVALRELATIONSHIP:return new IfcApprovalRelationship();
		case IFCARBITRARYCLOSEDPROFILEDEF:return new IfcArbitraryClosedProfileDef();
		case IFCARBITRARYOPENPROFILEDEF:return new IfcArbitraryOpenProfileDef();
		case IFCARBITRARYPROFILEDEFWITHVOIDS:return new IfcArbitraryProfileDefWithVoids();
		case IFCASSET:return new IfcAsset();
		case IFCASYMMETRICISHAPEPROFILEDEF:return new IfcAsymmetricIShapeProfileDef();
		case IFCAUDIOVISUALAPPLIANCE:return new IfcAudioVisualAppliance();
		case IFCAUDIOVISUALAPPLIANCETYPE:return new IfcAudioVisualApplianceType();
		case IFCAXIS1PLACEMENT:return new IfcAxis1Placement();
		case IFCAXIS2PLACEMENT2D:return new IfcAxis2Placement2D();
		case IFCAXIS2PLACEMENT3D:return new IfcAxis2Placement3D();
		case IFCBSPLINECURVE:return new IfcBSplineCurve();
		case IFCBSPLINECURVEWITHKNOTS:return new IfcBSplineCurveWithKnots();
		case IFCBSPLINESURFACE:return new IfcBSplineSurface();
		case IFCBSPLINESURFACEWITHKNOTS:return new IfcBSplineSurfaceWithKnots();
		case IFCBEAM:return new IfcBeam();
		case IFCBEAMSTANDARDCASE:return new IfcBeamStandardCase();
		case IFCBEAMTYPE:return new IfcBeamType();
		case IFCBLOBTEXTURE:return new IfcBlobTexture();
		case IFCBLOCK:return new IfcBlock();
		case IFCBOILER:return new IfcBoiler();
		case IFCBOILERTYPE:return new IfcBoilerType();
		case IFCBOOLEANCLIPPINGRESULT:return new IfcBooleanClippingResult();
		case IFCBOOLEANRESULT:return new IfcBooleanResult();
		case IFCBOUNDARYCONDITION:return new IfcBoundaryCondition();
		case IFCBOUNDARYCURVE:return new IfcBoundaryCurve();
		case IFCBOUNDARYEDGECONDITION:return new IfcBoundaryEdgeCondition();
		case IFCBOUNDARYFACECONDITION:return new IfcBoundaryFaceCondition();
		case IFCBOUNDARYNODECONDITION:return new IfcBoundaryNodeCondition();
		case IFCBOUNDARYNODECONDITIONWARPING:return new IfcBoundaryNodeConditionWarping();
		case IFCBOUNDEDCURVE:return new IfcBoundedCurve();
		case IFCBOUNDEDSURFACE:return new IfcBoundedSurface();
		case IFCBOUNDINGBOX:return new IfcBoundingBox();
		case IFCBOXEDHALFSPACE:return new IfcBoxedHalfSpace();
		case IFCBUILDING:return new IfcBuilding();
		case IFCBUILDINGELEMENT:return new IfcBuildingElement();
		case IFCBUILDINGELEMENTPART:return new IfcBuildingElementPart();
		case IFCBUILDINGELEMENTPARTTYPE:return new IfcBuildingElementPartType();
		case IFCBUILDINGELEMENTPROXY:return new IfcBuildingElementProxy();
		case IFCBUILDINGELEMENTPROXYTYPE:return new IfcBuildingElementProxyType();
		case IFCBUILDINGELEMENTTYPE:return new IfcBuildingElementType();
		case IFCBUILDINGSTOREY:return new IfcBuildingStorey();
		case IFCBUILDINGSYSTEM:return new IfcBuildingSystem();
		case IFCBURNER:return new IfcBurner();
		case IFCBURNERTYPE:return new IfcBurnerType();
		case IFCCSHAPEPROFILEDEF:return new IfcCShapeProfileDef();
		case IFCCABLECARRIERFITTING:return new IfcCableCarrierFitting();
		case IFCCABLECARRIERFITTINGTYPE:return new IfcCableCarrierFittingType();
		case IFCCABLECARRIERSEGMENT:return new IfcCableCarrierSegment();
		case IFCCABLECARRIERSEGMENTTYPE:return new IfcCableCarrierSegmentType();
		case IFCCABLEFITTING:return new IfcCableFitting();
		case IFCCABLEFITTINGTYPE:return new IfcCableFittingType();
		case IFCCABLESEGMENT:return new IfcCableSegment();
		case IFCCABLESEGMENTTYPE:return new IfcCableSegmentType();
		case IFCCARTESIANPOINT:return new IfcCartesianPoint();
		case IFCCARTESIANPOINTLIST:return new IfcCartesianPointList();
		case IFCCARTESIANPOINTLIST2D:return new IfcCartesianPointList2D();
		case IFCCARTESIANPOINTLIST3D:return new IfcCartesianPointList3D();
		case IFCCARTESIANTRANSFORMATIONOPERATOR:return new IfcCartesianTransformationOperator();
		case IFCCARTESIANTRANSFORMATIONOPERATOR2D:return new IfcCartesianTransformationOperator2D();
		case IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM:return new IfcCartesianTransformationOperator2DnonUniform();
		case IFCCARTESIANTRANSFORMATIONOPERATOR3D:return new IfcCartesianTransformationOperator3D();
		case IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM:return new IfcCartesianTransformationOperator3DnonUniform();
		case IFCCENTERLINEPROFILEDEF:return new IfcCenterLineProfileDef();
		case IFCCHILLER:return new IfcChiller();
		case IFCCHILLERTYPE:return new IfcChillerType();
		case IFCCHIMNEY:return new IfcChimney();
		case IFCCHIMNEYTYPE:return new IfcChimneyType();
		case IFCCIRCLE:return new IfcCircle();
		case IFCCIRCLEHOLLOWPROFILEDEF:return new IfcCircleHollowProfileDef();
		case IFCCIRCLEPROFILEDEF:return new IfcCircleProfileDef();
		case IFCCIVILELEMENT:return new IfcCivilElement();
		case IFCCIVILELEMENTTYPE:return new IfcCivilElementType();
		case IFCCLASSIFICATION:return new IfcClassification();
		case IFCCLASSIFICATIONREFERENCE:return new IfcClassificationReference();
		case IFCCLOSEDSHELL:return new IfcClosedShell();
		case IFCCOIL:return new IfcCoil();
		case IFCCOILTYPE:return new IfcCoilType();
		case IFCCOLOURRGB:return new IfcColourRgb();
		case IFCCOLOURRGBLIST:return new IfcColourRgbList();
		case IFCCOLOURSPECIFICATION:return new IfcColourSpecification();
		case IFCCOLUMN:return new IfcColumn();
		case IFCCOLUMNSTANDARDCASE:return new IfcColumnStandardCase();
		case IFCCOLUMNTYPE:return new IfcColumnType();
		case IFCCOMMUNICATIONSAPPLIANCE:return new IfcCommunicationsAppliance();
		case IFCCOMMUNICATIONSAPPLIANCETYPE:return new IfcCommunicationsApplianceType();
		case IFCCOMPLEXPROPERTY:return new IfcComplexProperty();
		case IFCCOMPLEXPROPERTYTEMPLATE:return new IfcComplexPropertyTemplate();
		case IFCCOMPOSITECURVE:return new IfcCompositeCurve();
		case IFCCOMPOSITECURVEONSURFACE:return new IfcCompositeCurveOnSurface();
		case IFCCOMPOSITECURVESEGMENT:return new IfcCompositeCurveSegment();
		case IFCCOMPOSITEPROFILEDEF:return new IfcCompositeProfileDef();
		case IFCCOMPRESSOR:return new IfcCompressor();
		case IFCCOMPRESSORTYPE:return new IfcCompressorType();
		case IFCCONDENSER:return new IfcCondenser();
		case IFCCONDENSERTYPE:return new IfcCondenserType();
		case IFCCONIC:return new IfcConic();
		case IFCCONNECTEDFACESET:return new IfcConnectedFaceSet();
		case IFCCONNECTIONCURVEGEOMETRY:return new IfcConnectionCurveGeometry();
		case IFCCONNECTIONGEOMETRY:return new IfcConnectionGeometry();
		case IFCCONNECTIONPOINTECCENTRICITY:return new IfcConnectionPointEccentricity();
		case IFCCONNECTIONPOINTGEOMETRY:return new IfcConnectionPointGeometry();
		case IFCCONNECTIONSURFACEGEOMETRY:return new IfcConnectionSurfaceGeometry();
		case IFCCONNECTIONVOLUMEGEOMETRY:return new IfcConnectionVolumeGeometry();
		case IFCCONSTRAINT:return new IfcConstraint();
		case IFCCONSTRUCTIONEQUIPMENTRESOURCE:return new IfcConstructionEquipmentResource();
		case IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE:return new IfcConstructionEquipmentResourceType();
		case IFCCONSTRUCTIONMATERIALRESOURCE:return new IfcConstructionMaterialResource();
		case IFCCONSTRUCTIONMATERIALRESOURCETYPE:return new IfcConstructionMaterialResourceType();
		case IFCCONSTRUCTIONPRODUCTRESOURCE:return new IfcConstructionProductResource();
		case IFCCONSTRUCTIONPRODUCTRESOURCETYPE:return new IfcConstructionProductResourceType();
		case IFCCONSTRUCTIONRESOURCE:return new IfcConstructionResource();
		case IFCCONSTRUCTIONRESOURCETYPE:return new IfcConstructionResourceType();
		case IFCCONTEXT:return new IfcContext();
		case IFCCONTEXTDEPENDENTUNIT:return new IfcContextDependentUnit();
		case IFCCONTROL:return new IfcControl();
		case IFCCONTROLLER:return new IfcController();
		case IFCCONTROLLERTYPE:return new IfcControllerType();
		case IFCCONVERSIONBASEDUNIT:return new IfcConversionBasedUnit();
		case IFCCONVERSIONBASEDUNITWITHOFFSET:return new IfcConversionBasedUnitWithOffset();
		case IFCCOOLEDBEAM:return new IfcCooledBeam();
		case IFCCOOLEDBEAMTYPE:return new IfcCooledBeamType();
		case IFCCOOLINGTOWER:return new IfcCoolingTower();
		case IFCCOOLINGTOWERTYPE:return new IfcCoolingTowerType();
		case IFCCOORDINATEOPERATION:return new IfcCoordinateOperation();
		case IFCCOORDINATEREFERENCESYSTEM:return new IfcCoordinateReferenceSystem();
		case IFCCOSTITEM:return new IfcCostItem();
		case IFCCOSTSCHEDULE:return new IfcCostSchedule();
		case IFCCOSTVALUE:return new IfcCostValue();
		case IFCCOVERING:return new IfcCovering();
		case IFCCOVERINGTYPE:return new IfcCoveringType();
		case IFCCREWRESOURCE:return new IfcCrewResource();
		case IFCCREWRESOURCETYPE:return new IfcCrewResourceType();
		case IFCCSGPRIMITIVE3D:return new IfcCsgPrimitive3D();
		case IFCCSGSOLID:return new IfcCsgSolid();
		case IFCCURRENCYRELATIONSHIP:return new IfcCurrencyRelationship();
		case IFCCURTAINWALL:return new IfcCurtainWall();
		case IFCCURTAINWALLTYPE:return new IfcCurtainWallType();
		case IFCCURVE:return new IfcCurve();
		case IFCCURVEBOUNDEDPLANE:return new IfcCurveBoundedPlane();
		case IFCCURVEBOUNDEDSURFACE:return new IfcCurveBoundedSurface();
		case IFCCURVESTYLE:return new IfcCurveStyle();
		case IFCCURVESTYLEFONT:return new IfcCurveStyleFont();
		case IFCCURVESTYLEFONTANDSCALING:return new IfcCurveStyleFontAndScaling();
		case IFCCURVESTYLEFONTPATTERN:return new IfcCurveStyleFontPattern();
		case IFCCYLINDRICALSURFACE:return new IfcCylindricalSurface();
		case IFCDAMPER:return new IfcDamper();
		case IFCDAMPERTYPE:return new IfcDamperType();
		case IFCDERIVEDPROFILEDEF:return new IfcDerivedProfileDef();
		case IFCDERIVEDUNIT:return new IfcDerivedUnit();
		case IFCDERIVEDUNITELEMENT:return new IfcDerivedUnitElement();
		case IFCDIMENSIONALEXPONENTS:return new IfcDimensionalExponents();
		case IFCDIRECTION:return new IfcDirection();
		case IFCDISCRETEACCESSORY:return new IfcDiscreteAccessory();
		case IFCDISCRETEACCESSORYTYPE:return new IfcDiscreteAccessoryType();
		case IFCDISTRIBUTIONCHAMBERELEMENT:return new IfcDistributionChamberElement();
		case IFCDISTRIBUTIONCHAMBERELEMENTTYPE:return new IfcDistributionChamberElementType();
		case IFCDISTRIBUTIONCIRCUIT:return new IfcDistributionCircuit();
		case IFCDISTRIBUTIONCONTROLELEMENT:return new IfcDistributionControlElement();
		case IFCDISTRIBUTIONCONTROLELEMENTTYPE:return new IfcDistributionControlElementType();
		case IFCDISTRIBUTIONELEMENT:return new IfcDistributionElement();
		case IFCDISTRIBUTIONELEMENTTYPE:return new IfcDistributionElementType();
		case IFCDISTRIBUTIONFLOWELEMENT:return new IfcDistributionFlowElement();
		case IFCDISTRIBUTIONFLOWELEMENTTYPE:return new IfcDistributionFlowElementType();
		case IFCDISTRIBUTIONPORT:return new IfcDistributionPort();
		case IFCDISTRIBUTIONSYSTEM:return new IfcDistributionSystem();
		case IFCDOCUMENTINFORMATION:return new IfcDocumentInformation();
		case IFCDOCUMENTINFORMATIONRELATIONSHIP:return new IfcDocumentInformationRelationship();
		case IFCDOCUMENTREFERENCE:return new IfcDocumentReference();
		case IFCDOOR:return new IfcDoor();
		case IFCDOORLININGPROPERTIES:return new IfcDoorLiningProperties();
		case IFCDOORPANELPROPERTIES:return new IfcDoorPanelProperties();
		case IFCDOORSTANDARDCASE:return new IfcDoorStandardCase();
		case IFCDOORSTYLE:return new IfcDoorStyle();
		case IFCDOORTYPE:return new IfcDoorType();
		case IFCDRAUGHTINGPREDEFINEDCOLOUR:return new IfcDraughtingPreDefinedColour();
		case IFCDRAUGHTINGPREDEFINEDCURVEFONT:return new IfcDraughtingPreDefinedCurveFont();
		case IFCDUCTFITTING:return new IfcDuctFitting();
		case IFCDUCTFITTINGTYPE:return new IfcDuctFittingType();
		case IFCDUCTSEGMENT:return new IfcDuctSegment();
		case IFCDUCTSEGMENTTYPE:return new IfcDuctSegmentType();
		case IFCDUCTSILENCER:return new IfcDuctSilencer();
		case IFCDUCTSILENCERTYPE:return new IfcDuctSilencerType();
		case IFCEDGE:return new IfcEdge();
		case IFCEDGECURVE:return new IfcEdgeCurve();
		case IFCEDGELOOP:return new IfcEdgeLoop();
		case IFCELECTRICAPPLIANCE:return new IfcElectricAppliance();
		case IFCELECTRICAPPLIANCETYPE:return new IfcElectricApplianceType();
		case IFCELECTRICDISTRIBUTIONBOARD:return new IfcElectricDistributionBoard();
		case IFCELECTRICDISTRIBUTIONBOARDTYPE:return new IfcElectricDistributionBoardType();
		case IFCELECTRICFLOWSTORAGEDEVICE:return new IfcElectricFlowStorageDevice();
		case IFCELECTRICFLOWSTORAGEDEVICETYPE:return new IfcElectricFlowStorageDeviceType();
		case IFCELECTRICGENERATOR:return new IfcElectricGenerator();
		case IFCELECTRICGENERATORTYPE:return new IfcElectricGeneratorType();
		case IFCELECTRICMOTOR:return new IfcElectricMotor();
		case IFCELECTRICMOTORTYPE:return new IfcElectricMotorType();
		case IFCELECTRICTIMECONTROL:return new IfcElectricTimeControl();
		case IFCELECTRICTIMECONTROLTYPE:return new IfcElectricTimeControlType();
		case IFCELEMENT:return new IfcElement();
		case IFCELEMENTASSEMBLY:return new IfcElementAssembly();
		case IFCELEMENTASSEMBLYTYPE:return new IfcElementAssemblyType();
		case IFCELEMENTCOMPONENT:return new IfcElementComponent();
		case IFCELEMENTCOMPONENTTYPE:return new IfcElementComponentType();
		case IFCELEMENTQUANTITY:return new IfcElementQuantity();
		case IFCELEMENTTYPE:return new IfcElementType();
		case IFCELEMENTARYSURFACE:return new IfcElementarySurface();
		case IFCELLIPSE:return new IfcEllipse();
		case IFCELLIPSEPROFILEDEF:return new IfcEllipseProfileDef();
		case IFCENERGYCONVERSIONDEVICE:return new IfcEnergyConversionDevice();
		case IFCENERGYCONVERSIONDEVICETYPE:return new IfcEnergyConversionDeviceType();
		case IFCENGINE:return new IfcEngine();
		case IFCENGINETYPE:return new IfcEngineType();
		case IFCEVAPORATIVECOOLER:return new IfcEvaporativeCooler();
		case IFCEVAPORATIVECOOLERTYPE:return new IfcEvaporativeCoolerType();
		case IFCEVAPORATOR:return new IfcEvaporator();
		case IFCEVAPORATORTYPE:return new IfcEvaporatorType();
		case IFCEVENT:return new IfcEvent();
		case IFCEVENTTIME:return new IfcEventTime();
		case IFCEVENTTYPE:return new IfcEventType();
		case IFCEXTENDEDPROPERTIES:return new IfcExtendedProperties();
		case IFCEXTERNALINFORMATION:return new IfcExternalInformation();
		case IFCEXTERNALREFERENCE:return new IfcExternalReference();
		case IFCEXTERNALREFERENCERELATIONSHIP:return new IfcExternalReferenceRelationship();
		case IFCEXTERNALSPATIALELEMENT:return new IfcExternalSpatialElement();
		case IFCEXTERNALSPATIALSTRUCTUREELEMENT:return new IfcExternalSpatialStructureElement();
		case IFCEXTERNALLYDEFINEDHATCHSTYLE:return new IfcExternallyDefinedHatchStyle();
		case IFCEXTERNALLYDEFINEDSURFACESTYLE:return new IfcExternallyDefinedSurfaceStyle();
		case IFCEXTERNALLYDEFINEDTEXTFONT:return new IfcExternallyDefinedTextFont();
		case IFCEXTRUDEDAREASOLID:return new IfcExtrudedAreaSolid();
		case IFCEXTRUDEDAREASOLIDTAPERED:return new IfcExtrudedAreaSolidTapered();
		case IFCFACE:return new IfcFace();
		case IFCFACEBASEDSURFACEMODEL:return new IfcFaceBasedSurfaceModel();
		case IFCFACEBOUND:return new IfcFaceBound();
		case IFCFACEOUTERBOUND:return new IfcFaceOuterBound();
		case IFCFACESURFACE:return new IfcFaceSurface();
		case IFCFACETEDBREP:return new IfcFacetedBrep();
		case IFCFACETEDBREPWITHVOIDS:return new IfcFacetedBrepWithVoids();
		case IFCFAILURECONNECTIONCONDITION:return new IfcFailureConnectionCondition();
		case IFCFAN:return new IfcFan();
		case IFCFANTYPE:return new IfcFanType();
		case IFCFASTENER:return new IfcFastener();
		case IFCFASTENERTYPE:return new IfcFastenerType();
		case IFCFEATUREELEMENT:return new IfcFeatureElement();
		case IFCFEATUREELEMENTADDITION:return new IfcFeatureElementAddition();
		case IFCFEATUREELEMENTSUBTRACTION:return new IfcFeatureElementSubtraction();
		case IFCFILLAREASTYLE:return new IfcFillAreaStyle();
		case IFCFILLAREASTYLEHATCHING:return new IfcFillAreaStyleHatching();
		case IFCFILLAREASTYLETILES:return new IfcFillAreaStyleTiles();
		case IFCFILTER:return new IfcFilter();
		case IFCFILTERTYPE:return new IfcFilterType();
		case IFCFIRESUPPRESSIONTERMINAL:return new IfcFireSuppressionTerminal();
		case IFCFIRESUPPRESSIONTERMINALTYPE:return new IfcFireSuppressionTerminalType();
		case IFCFIXEDREFERENCESWEPTAREASOLID:return new IfcFixedReferenceSweptAreaSolid();
		case IFCFLOWCONTROLLER:return new IfcFlowController();
		case IFCFLOWCONTROLLERTYPE:return new IfcFlowControllerType();
		case IFCFLOWFITTING:return new IfcFlowFitting();
		case IFCFLOWFITTINGTYPE:return new IfcFlowFittingType();
		case IFCFLOWINSTRUMENT:return new IfcFlowInstrument();
		case IFCFLOWINSTRUMENTTYPE:return new IfcFlowInstrumentType();
		case IFCFLOWMETER:return new IfcFlowMeter();
		case IFCFLOWMETERTYPE:return new IfcFlowMeterType();
		case IFCFLOWMOVINGDEVICE:return new IfcFlowMovingDevice();
		case IFCFLOWMOVINGDEVICETYPE:return new IfcFlowMovingDeviceType();
		case IFCFLOWSEGMENT:return new IfcFlowSegment();
		case IFCFLOWSEGMENTTYPE:return new IfcFlowSegmentType();
		case IFCFLOWSTORAGEDEVICE:return new IfcFlowStorageDevice();
		case IFCFLOWSTORAGEDEVICETYPE:return new IfcFlowStorageDeviceType();
		case IFCFLOWTERMINAL:return new IfcFlowTerminal();
		case IFCFLOWTERMINALTYPE:return new IfcFlowTerminalType();
		case IFCFLOWTREATMENTDEVICE:return new IfcFlowTreatmentDevice();
		case IFCFLOWTREATMENTDEVICETYPE:return new IfcFlowTreatmentDeviceType();
		case IFCFOOTING:return new IfcFooting();
		case IFCFOOTINGTYPE:return new IfcFootingType();
		case IFCFURNISHINGELEMENT:return new IfcFurnishingElement();
		case IFCFURNISHINGELEMENTTYPE:return new IfcFurnishingElementType();
		case IFCFURNITURE:return new IfcFurniture();
		case IFCFURNITURETYPE:return new IfcFurnitureType();
		case IFCGEOGRAPHICELEMENT:return new IfcGeographicElement();
		case IFCGEOGRAPHICELEMENTTYPE:return new IfcGeographicElementType();
		case IFCGEOMETRICCURVESET:return new IfcGeometricCurveSet();
		case IFCGEOMETRICREPRESENTATIONCONTEXT:return new IfcGeometricRepresentationContext();
		case IFCGEOMETRICREPRESENTATIONITEM:return new IfcGeometricRepresentationItem();
		case IFCGEOMETRICREPRESENTATIONSUBCONTEXT:return new IfcGeometricRepresentationSubContext();
		case IFCGEOMETRICSET:return new IfcGeometricSet();
		case IFCGRID:return new IfcGrid();
		case IFCGRIDAXIS:return new IfcGridAxis();
		case IFCGRIDPLACEMENT:return new IfcGridPlacement();
		case IFCGROUP:return new IfcGroup();
		case IFCHALFSPACESOLID:return new IfcHalfSpaceSolid();
		case IFCHEATEXCHANGER:return new IfcHeatExchanger();
		case IFCHEATEXCHANGERTYPE:return new IfcHeatExchangerType();
		case IFCHUMIDIFIER:return new IfcHumidifier();
		case IFCHUMIDIFIERTYPE:return new IfcHumidifierType();
		case IFCISHAPEPROFILEDEF:return new IfcIShapeProfileDef();
		case IFCIMAGETEXTURE:return new IfcImageTexture();
		case IFCINDEXEDCOLOURMAP:return new IfcIndexedColourMap();
		case IFCINDEXEDPOLYCURVE:return new IfcIndexedPolyCurve();
		case IFCINDEXEDTEXTUREMAP:return new IfcIndexedTextureMap();
		case IFCINDEXEDTRIANGLETEXTUREMAP:return new IfcIndexedTriangleTextureMap();
		case IFCINTERCEPTOR:return new IfcInterceptor();
		case IFCINTERCEPTORTYPE:return new IfcInterceptorType();
		case IFCINVENTORY:return new IfcInventory();
		case IFCIRREGULARTIMESERIES:return new IfcIrregularTimeSeries();
		case IFCIRREGULARTIMESERIESVALUE:return new IfcIrregularTimeSeriesValue();
		case IFCJUNCTIONBOX:return new IfcJunctionBox();
		case IFCJUNCTIONBOXTYPE:return new IfcJunctionBoxType();
		case IFCLSHAPEPROFILEDEF:return new IfcLShapeProfileDef();
		case IFCLABORRESOURCE:return new IfcLaborResource();
		case IFCLABORRESOURCETYPE:return new IfcLaborResourceType();
		case IFCLAGTIME:return new IfcLagTime();
		case IFCLAMP:return new IfcLamp();
		case IFCLAMPTYPE:return new IfcLampType();
		case IFCLIBRARYINFORMATION:return new IfcLibraryInformation();
		case IFCLIBRARYREFERENCE:return new IfcLibraryReference();
		case IFCLIGHTDISTRIBUTIONDATA:return new IfcLightDistributionData();
		case IFCLIGHTFIXTURE:return new IfcLightFixture();
		case IFCLIGHTFIXTURETYPE:return new IfcLightFixtureType();
		case IFCLIGHTINTENSITYDISTRIBUTION:return new IfcLightIntensityDistribution();
		case IFCLIGHTSOURCE:return new IfcLightSource();
		case IFCLIGHTSOURCEAMBIENT:return new IfcLightSourceAmbient();
		case IFCLIGHTSOURCEDIRECTIONAL:return new IfcLightSourceDirectional();
		case IFCLIGHTSOURCEGONIOMETRIC:return new IfcLightSourceGoniometric();
		case IFCLIGHTSOURCEPOSITIONAL:return new IfcLightSourcePositional();
		case IFCLIGHTSOURCESPOT:return new IfcLightSourceSpot();
		case IFCLINE:return new IfcLine();
		case IFCLOCALPLACEMENT:return new IfcLocalPlacement();
		case IFCLOOP:return new IfcLoop();
		case IFCMANIFOLDSOLIDBREP:return new IfcManifoldSolidBrep();
		case IFCMAPCONVERSION:return new IfcMapConversion();
		case IFCMAPPEDITEM:return new IfcMappedItem();
		case IFCMATERIAL:return new IfcMaterial();
		case IFCMATERIALCLASSIFICATIONRELATIONSHIP:return new IfcMaterialClassificationRelationship();
		case IFCMATERIALCONSTITUENT:return new IfcMaterialConstituent();
		case IFCMATERIALCONSTITUENTSET:return new IfcMaterialConstituentSet();
		case IFCMATERIALDEFINITION:return new IfcMaterialDefinition();
		case IFCMATERIALDEFINITIONREPRESENTATION:return new IfcMaterialDefinitionRepresentation();
		case IFCMATERIALLAYER:return new IfcMaterialLayer();
		case IFCMATERIALLAYERSET:return new IfcMaterialLayerSet();
		case IFCMATERIALLAYERSETUSAGE:return new IfcMaterialLayerSetUsage();
		case IFCMATERIALLAYERWITHOFFSETS:return new IfcMaterialLayerWithOffsets();
		case IFCMATERIALLIST:return new IfcMaterialList();
		case IFCMATERIALPROFILE:return new IfcMaterialProfile();
		case IFCMATERIALPROFILESET:return new IfcMaterialProfileSet();
		case IFCMATERIALPROFILESETUSAGE:return new IfcMaterialProfileSetUsage();
		case IFCMATERIALPROFILESETUSAGETAPERING:return new IfcMaterialProfileSetUsageTapering();
		case IFCMATERIALPROFILEWITHOFFSETS:return new IfcMaterialProfileWithOffsets();
		case IFCMATERIALPROPERTIES:return new IfcMaterialProperties();
		case IFCMATERIALRELATIONSHIP:return new IfcMaterialRelationship();
		case IFCMATERIALUSAGEDEFINITION:return new IfcMaterialUsageDefinition();
		case IFCMEASUREWITHUNIT:return new IfcMeasureWithUnit();
		case IFCMECHANICALFASTENER:return new IfcMechanicalFastener();
		case IFCMECHANICALFASTENERTYPE:return new IfcMechanicalFastenerType();
		case IFCMEDICALDEVICE:return new IfcMedicalDevice();
		case IFCMEDICALDEVICETYPE:return new IfcMedicalDeviceType();
		case IFCMEMBER:return new IfcMember();
		case IFCMEMBERSTANDARDCASE:return new IfcMemberStandardCase();
		case IFCMEMBERTYPE:return new IfcMemberType();
		case IFCMETRIC:return new IfcMetric();
		case IFCMIRROREDPROFILEDEF:return new IfcMirroredProfileDef();
		case IFCMONETARYUNIT:return new IfcMonetaryUnit();
		case IFCMOTORCONNECTION:return new IfcMotorConnection();
		case IFCMOTORCONNECTIONTYPE:return new IfcMotorConnectionType();
		case IFCNAMEDUNIT:return new IfcNamedUnit();
		case IFCOBJECT:return new IfcObject();
		case IFCOBJECTDEFINITION:return new IfcObjectDefinition();
		case IFCOBJECTPLACEMENT:return new IfcObjectPlacement();
		case IFCOBJECTIVE:return new IfcObjective();
		case IFCOCCUPANT:return new IfcOccupant();
		case IFCOFFSETCURVE2D:return new IfcOffsetCurve2D();
		case IFCOFFSETCURVE3D:return new IfcOffsetCurve3D();
		case IFCOPENSHELL:return new IfcOpenShell();
		case IFCOPENINGELEMENT:return new IfcOpeningElement();
		case IFCOPENINGSTANDARDCASE:return new IfcOpeningStandardCase();
		case IFCORGANIZATION:return new IfcOrganization();
		case IFCORGANIZATIONRELATIONSHIP:return new IfcOrganizationRelationship();
		case IFCORIENTEDEDGE:return new IfcOrientedEdge();
		case IFCOUTERBOUNDARYCURVE:return new IfcOuterBoundaryCurve();
		case IFCOUTLET:return new IfcOutlet();
		case IFCOUTLETTYPE:return new IfcOutletType();
		case IFCOWNERHISTORY:return new IfcOwnerHistory();
		case IFCPARAMETERIZEDPROFILEDEF:return new IfcParameterizedProfileDef();
		case IFCPATH:return new IfcPath();
		case IFCPCURVE:return new IfcPcurve();
		case IFCPERFORMANCEHISTORY:return new IfcPerformanceHistory();
		case IFCPERMEABLECOVERINGPROPERTIES:return new IfcPermeableCoveringProperties();
		case IFCPERMIT:return new IfcPermit();
		case IFCPERSON:return new IfcPerson();
		case IFCPERSONANDORGANIZATION:return new IfcPersonAndOrganization();
		case IFCPHYSICALCOMPLEXQUANTITY:return new IfcPhysicalComplexQuantity();
		case IFCPHYSICALQUANTITY:return new IfcPhysicalQuantity();
		case IFCPHYSICALSIMPLEQUANTITY:return new IfcPhysicalSimpleQuantity();
		case IFCPILE:return new IfcPile();
		case IFCPILETYPE:return new IfcPileType();
		case IFCPIPEFITTING:return new IfcPipeFitting();
		case IFCPIPEFITTINGTYPE:return new IfcPipeFittingType();
		case IFCPIPESEGMENT:return new IfcPipeSegment();
		case IFCPIPESEGMENTTYPE:return new IfcPipeSegmentType();
		case IFCPIXELTEXTURE:return new IfcPixelTexture();
		case IFCPLACEMENT:return new IfcPlacement();
		case IFCPLANARBOX:return new IfcPlanarBox();
		case IFCPLANAREXTENT:return new IfcPlanarExtent();
		case IFCPLANE:return new IfcPlane();
		case IFCPLATE:return new IfcPlate();
		case IFCPLATESTANDARDCASE:return new IfcPlateStandardCase();
		case IFCPLATETYPE:return new IfcPlateType();
		case IFCPOINT:return new IfcPoint();
		case IFCPOINTONCURVE:return new IfcPointOnCurve();
		case IFCPOINTONSURFACE:return new IfcPointOnSurface();
		case IFCPOLYLOOP:return new IfcPolyLoop();
		case IFCPOLYGONALBOUNDEDHALFSPACE:return new IfcPolygonalBoundedHalfSpace();
		case IFCPOLYLINE:return new IfcPolyline();
		case IFCPORT:return new IfcPort();
		case IFCPOSTALADDRESS:return new IfcPostalAddress();
		case IFCPREDEFINEDCOLOUR:return new IfcPreDefinedColour();
		case IFCPREDEFINEDCURVEFONT:return new IfcPreDefinedCurveFont();
		case IFCPREDEFINEDITEM:return new IfcPreDefinedItem();
		case IFCPREDEFINEDPROPERTIES:return new IfcPreDefinedProperties();
		case IFCPREDEFINEDPROPERTYSET:return new IfcPreDefinedPropertySet();
		case IFCPREDEFINEDTEXTFONT:return new IfcPreDefinedTextFont();
		case IFCPRESENTATIONITEM:return new IfcPresentationItem();
		case IFCPRESENTATIONLAYERASSIGNMENT:return new IfcPresentationLayerAssignment();
		case IFCPRESENTATIONLAYERWITHSTYLE:return new IfcPresentationLayerWithStyle();
		case IFCPRESENTATIONSTYLE:return new IfcPresentationStyle();
		case IFCPRESENTATIONSTYLEASSIGNMENT:return new IfcPresentationStyleAssignment();
		case IFCPROCEDURE:return new IfcProcedure();
		case IFCPROCEDURETYPE:return new IfcProcedureType();
		case IFCPROCESS:return new IfcProcess();
		case IFCPRODUCT:return new IfcProduct();
		case IFCPRODUCTDEFINITIONSHAPE:return new IfcProductDefinitionShape();
		case IFCPRODUCTREPRESENTATION:return new IfcProductRepresentation();
		case IFCPROFILEDEF:return new IfcProfileDef();
		case IFCPROFILEPROPERTIES:return new IfcProfileProperties();
		case IFCPROJECT:return new IfcProject();
		case IFCPROJECTLIBRARY:return new IfcProjectLibrary();
		case IFCPROJECTORDER:return new IfcProjectOrder();
		case IFCPROJECTEDCRS:return new IfcProjectedCRS();
		case IFCPROJECTIONELEMENT:return new IfcProjectionElement();
		case IFCPROPERTY:return new IfcProperty();
		case IFCPROPERTYABSTRACTION:return new IfcPropertyAbstraction();
		case IFCPROPERTYBOUNDEDVALUE:return new IfcPropertyBoundedValue();
		case IFCPROPERTYDEFINITION:return new IfcPropertyDefinition();
		case IFCPROPERTYDEPENDENCYRELATIONSHIP:return new IfcPropertyDependencyRelationship();
		case IFCPROPERTYENUMERATEDVALUE:return new IfcPropertyEnumeratedValue();
		case IFCPROPERTYENUMERATION:return new IfcPropertyEnumeration();
		case IFCPROPERTYLISTVALUE:return new IfcPropertyListValue();
		case IFCPROPERTYREFERENCEVALUE:return new IfcPropertyReferenceValue();
		case IFCPROPERTYSET:return new IfcPropertySet();
		case IFCPROPERTYSETDEFINITION:return new IfcPropertySetDefinition();
		case IFCPROPERTYSETTEMPLATE:return new IfcPropertySetTemplate();
		case IFCPROPERTYSINGLEVALUE:return new IfcPropertySingleValue();
		case IFCPROPERTYTABLEVALUE:return new IfcPropertyTableValue();
		case IFCPROPERTYTEMPLATE:return new IfcPropertyTemplate();
		case IFCPROPERTYTEMPLATEDEFINITION:return new IfcPropertyTemplateDefinition();
		case IFCPROTECTIVEDEVICE:return new IfcProtectiveDevice();
		case IFCPROTECTIVEDEVICETRIPPINGUNIT:return new IfcProtectiveDeviceTrippingUnit();
		case IFCPROTECTIVEDEVICETRIPPINGUNITTYPE:return new IfcProtectiveDeviceTrippingUnitType();
		case IFCPROTECTIVEDEVICETYPE:return new IfcProtectiveDeviceType();
		case IFCPROXY:return new IfcProxy();
		case IFCPUMP:return new IfcPump();
		case IFCPUMPTYPE:return new IfcPumpType();
		case IFCQUANTITYAREA:return new IfcQuantityArea();
		case IFCQUANTITYCOUNT:return new IfcQuantityCount();
		case IFCQUANTITYLENGTH:return new IfcQuantityLength();
		case IFCQUANTITYSET:return new IfcQuantitySet();
		case IFCQUANTITYTIME:return new IfcQuantityTime();
		case IFCQUANTITYVOLUME:return new IfcQuantityVolume();
		case IFCQUANTITYWEIGHT:return new IfcQuantityWeight();
		case IFCRAILING:return new IfcRailing();
		case IFCRAILINGTYPE:return new IfcRailingType();
		case IFCRAMP:return new IfcRamp();
		case IFCRAMPFLIGHT:return new IfcRampFlight();
		case IFCRAMPFLIGHTTYPE:return new IfcRampFlightType();
		case IFCRAMPTYPE:return new IfcRampType();
		case IFCRATIONALBSPLINECURVEWITHKNOTS:return new IfcRationalBSplineCurveWithKnots();
		case IFCRATIONALBSPLINESURFACEWITHKNOTS:return new IfcRationalBSplineSurfaceWithKnots();
		case IFCRECTANGLEHOLLOWPROFILEDEF:return new IfcRectangleHollowProfileDef();
		case IFCRECTANGLEPROFILEDEF:return new IfcRectangleProfileDef();
		case IFCRECTANGULARPYRAMID:return new IfcRectangularPyramid();
		case IFCRECTANGULARTRIMMEDSURFACE:return new IfcRectangularTrimmedSurface();
		case IFCRECURRENCEPATTERN:return new IfcRecurrencePattern();
		case IFCREFERENCE:return new IfcReference();
		case IFCREGULARTIMESERIES:return new IfcRegularTimeSeries();
		case IFCREINFORCEMENTBARPROPERTIES:return new IfcReinforcementBarProperties();
		case IFCREINFORCEMENTDEFINITIONPROPERTIES:return new IfcReinforcementDefinitionProperties();
		case IFCREINFORCINGBAR:return new IfcReinforcingBar();
		case IFCREINFORCINGBARTYPE:return new IfcReinforcingBarType();
		case IFCREINFORCINGELEMENT:return new IfcReinforcingElement();
		case IFCREINFORCINGELEMENTTYPE:return new IfcReinforcingElementType();
		case IFCREINFORCINGMESH:return new IfcReinforcingMesh();
		case IFCREINFORCINGMESHTYPE:return new IfcReinforcingMeshType();
		case IFCRELAGGREGATES:return new IfcRelAggregates();
		case IFCRELASSIGNS:return new IfcRelAssigns();
		case IFCRELASSIGNSTOACTOR:return new IfcRelAssignsToActor();
		case IFCRELASSIGNSTOCONTROL:return new IfcRelAssignsToControl();
		case IFCRELASSIGNSTOGROUP:return new IfcRelAssignsToGroup();
		case IFCRELASSIGNSTOGROUPBYFACTOR:return new IfcRelAssignsToGroupByFactor();
		case IFCRELASSIGNSTOPROCESS:return new IfcRelAssignsToProcess();
		case IFCRELASSIGNSTOPRODUCT:return new IfcRelAssignsToProduct();
		case IFCRELASSIGNSTORESOURCE:return new IfcRelAssignsToResource();
		case IFCRELASSOCIATES:return new IfcRelAssociates();
		case IFCRELASSOCIATESAPPROVAL:return new IfcRelAssociatesApproval();
		case IFCRELASSOCIATESCLASSIFICATION:return new IfcRelAssociatesClassification();
		case IFCRELASSOCIATESCONSTRAINT:return new IfcRelAssociatesConstraint();
		case IFCRELASSOCIATESDOCUMENT:return new IfcRelAssociatesDocument();
		case IFCRELASSOCIATESLIBRARY:return new IfcRelAssociatesLibrary();
		case IFCRELASSOCIATESMATERIAL:return new IfcRelAssociatesMaterial();
		case IFCRELCONNECTS:return new IfcRelConnects();
		case IFCRELCONNECTSELEMENTS:return new IfcRelConnectsElements();
		case IFCRELCONNECTSPATHELEMENTS:return new IfcRelConnectsPathElements();
		case IFCRELCONNECTSPORTTOELEMENT:return new IfcRelConnectsPortToElement();
		case IFCRELCONNECTSPORTS:return new IfcRelConnectsPorts();
		case IFCRELCONNECTSSTRUCTURALACTIVITY:return new IfcRelConnectsStructuralActivity();
		case IFCRELCONNECTSSTRUCTURALMEMBER:return new IfcRelConnectsStructuralMember();
		case IFCRELCONNECTSWITHECCENTRICITY:return new IfcRelConnectsWithEccentricity();
		case IFCRELCONNECTSWITHREALIZINGELEMENTS:return new IfcRelConnectsWithRealizingElements();
		case IFCRELCONTAINEDINSPATIALSTRUCTURE:return new IfcRelContainedInSpatialStructure();
		case IFCRELCOVERSBLDGELEMENTS:return new IfcRelCoversBldgElements();
		case IFCRELCOVERSSPACES:return new IfcRelCoversSpaces();
		case IFCRELDECLARES:return new IfcRelDeclares();
		case IFCRELDECOMPOSES:return new IfcRelDecomposes();
		case IFCRELDEFINES:return new IfcRelDefines();
		case IFCRELDEFINESBYOBJECT:return new IfcRelDefinesByObject();
		case IFCRELDEFINESBYPROPERTIES:return new IfcRelDefinesByProperties();
		case IFCRELDEFINESBYTEMPLATE:return new IfcRelDefinesByTemplate();
		case IFCRELDEFINESBYTYPE:return new IfcRelDefinesByType();
		case IFCRELFILLSELEMENT:return new IfcRelFillsElement();
		case IFCRELFLOWCONTROLELEMENTS:return new IfcRelFlowControlElements();
		case IFCRELINTERFERESELEMENTS:return new IfcRelInterferesElements();
		case IFCRELNESTS:return new IfcRelNests();
		case IFCRELPROJECTSELEMENT:return new IfcRelProjectsElement();
		case IFCRELREFERENCEDINSPATIALSTRUCTURE:return new IfcRelReferencedInSpatialStructure();
		case IFCRELSEQUENCE:return new IfcRelSequence();
		case IFCRELSERVICESBUILDINGS:return new IfcRelServicesBuildings();
		case IFCRELSPACEBOUNDARY:return new IfcRelSpaceBoundary();
		case IFCRELSPACEBOUNDARY1STLEVEL:return new IfcRelSpaceBoundary1stLevel();
		case IFCRELSPACEBOUNDARY2NDLEVEL:return new IfcRelSpaceBoundary2ndLevel();
		case IFCRELVOIDSELEMENT:return new IfcRelVoidsElement();
		case IFCRELATIONSHIP:return new IfcRelationship();
		case IFCREPARAMETRISEDCOMPOSITECURVESEGMENT:return new IfcReparametrisedCompositeCurveSegment();
		case IFCREPRESENTATION:return new IfcRepresentation();
		case IFCREPRESENTATIONCONTEXT:return new IfcRepresentationContext();
		case IFCREPRESENTATIONITEM:return new IfcRepresentationItem();
		case IFCREPRESENTATIONMAP:return new IfcRepresentationMap();
		case IFCRESOURCE:return new IfcResource();
		case IFCRESOURCEAPPROVALRELATIONSHIP:return new IfcResourceApprovalRelationship();
		case IFCRESOURCECONSTRAINTRELATIONSHIP:return new IfcResourceConstraintRelationship();
		case IFCRESOURCELEVELRELATIONSHIP:return new IfcResourceLevelRelationship();
		case IFCRESOURCETIME:return new IfcResourceTime();
		case IFCREVOLVEDAREASOLID:return new IfcRevolvedAreaSolid();
		case IFCREVOLVEDAREASOLIDTAPERED:return new IfcRevolvedAreaSolidTapered();
		case IFCRIGHTCIRCULARCONE:return new IfcRightCircularCone();
		case IFCRIGHTCIRCULARCYLINDER:return new IfcRightCircularCylinder();
		case IFCROOF:return new IfcRoof();
		case IFCROOFTYPE:return new IfcRoofType();
		case IFCROOT:return new IfcRoot();
		case IFCROUNDEDRECTANGLEPROFILEDEF:return new IfcRoundedRectangleProfileDef();
		case IFCSIUNIT:return new IfcSIUnit();
		case IFCSANITARYTERMINAL:return new IfcSanitaryTerminal();
		case IFCSANITARYTERMINALTYPE:return new IfcSanitaryTerminalType();
		case IFCSCHEDULINGTIME:return new IfcSchedulingTime();
		case IFCSECTIONPROPERTIES:return new IfcSectionProperties();
		case IFCSECTIONREINFORCEMENTPROPERTIES:return new IfcSectionReinforcementProperties();
		case IFCSECTIONEDSPINE:return new IfcSectionedSpine();
		case IFCSENSOR:return new IfcSensor();
		case IFCSENSORTYPE:return new IfcSensorType();
		case IFCSHADINGDEVICE:return new IfcShadingDevice();
		case IFCSHADINGDEVICETYPE:return new IfcShadingDeviceType();
		case IFCSHAPEASPECT:return new IfcShapeAspect();
		case IFCSHAPEMODEL:return new IfcShapeModel();
		case IFCSHAPEREPRESENTATION:return new IfcShapeRepresentation();
		case IFCSHELLBASEDSURFACEMODEL:return new IfcShellBasedSurfaceModel();
		case IFCSIMPLEPROPERTY:return new IfcSimpleProperty();
		case IFCSIMPLEPROPERTYTEMPLATE:return new IfcSimplePropertyTemplate();
		case IFCSITE:return new IfcSite();
		case IFCSLAB:return new IfcSlab();
		case IFCSLABELEMENTEDCASE:return new IfcSlabElementedCase();
		case IFCSLABSTANDARDCASE:return new IfcSlabStandardCase();
		case IFCSLABTYPE:return new IfcSlabType();
		case IFCSLIPPAGECONNECTIONCONDITION:return new IfcSlippageConnectionCondition();
		case IFCSOLARDEVICE:return new IfcSolarDevice();
		case IFCSOLARDEVICETYPE:return new IfcSolarDeviceType();
		case IFCSOLIDMODEL:return new IfcSolidModel();
		case IFCSPACE:return new IfcSpace();
		case IFCSPACEHEATER:return new IfcSpaceHeater();
		case IFCSPACEHEATERTYPE:return new IfcSpaceHeaterType();
		case IFCSPACETYPE:return new IfcSpaceType();
		case IFCSPATIALELEMENT:return new IfcSpatialElement();
		case IFCSPATIALELEMENTTYPE:return new IfcSpatialElementType();
		case IFCSPATIALSTRUCTUREELEMENT:return new IfcSpatialStructureElement();
		case IFCSPATIALSTRUCTUREELEMENTTYPE:return new IfcSpatialStructureElementType();
		case IFCSPATIALZONE:return new IfcSpatialZone();
		case IFCSPATIALZONETYPE:return new IfcSpatialZoneType();
		case IFCSPHERE:return new IfcSphere();
		case IFCSTACKTERMINAL:return new IfcStackTerminal();
		case IFCSTACKTERMINALTYPE:return new IfcStackTerminalType();
		case IFCSTAIR:return new IfcStair();
		case IFCSTAIRFLIGHT:return new IfcStairFlight();
		case IFCSTAIRFLIGHTTYPE:return new IfcStairFlightType();
		case IFCSTAIRTYPE:return new IfcStairType();
		case IFCSTRUCTURALACTION:return new IfcStructuralAction();
		case IFCSTRUCTURALACTIVITY:return new IfcStructuralActivity();
		case IFCSTRUCTURALANALYSISMODEL:return new IfcStructuralAnalysisModel();
		case IFCSTRUCTURALCONNECTION:return new IfcStructuralConnection();
		case IFCSTRUCTURALCONNECTIONCONDITION:return new IfcStructuralConnectionCondition();
		case IFCSTRUCTURALCURVEACTION:return new IfcStructuralCurveAction();
		case IFCSTRUCTURALCURVECONNECTION:return new IfcStructuralCurveConnection();
		case IFCSTRUCTURALCURVEMEMBER:return new IfcStructuralCurveMember();
		case IFCSTRUCTURALCURVEMEMBERVARYING:return new IfcStructuralCurveMemberVarying();
		case IFCSTRUCTURALCURVEREACTION:return new IfcStructuralCurveReaction();
		case IFCSTRUCTURALITEM:return new IfcStructuralItem();
		case IFCSTRUCTURALLINEARACTION:return new IfcStructuralLinearAction();
		case IFCSTRUCTURALLOAD:return new IfcStructuralLoad();
		case IFCSTRUCTURALLOADCASE:return new IfcStructuralLoadCase();
		case IFCSTRUCTURALLOADCONFIGURATION:return new IfcStructuralLoadConfiguration();
		case IFCSTRUCTURALLOADGROUP:return new IfcStructuralLoadGroup();
		case IFCSTRUCTURALLOADLINEARFORCE:return new IfcStructuralLoadLinearForce();
		case IFCSTRUCTURALLOADORRESULT:return new IfcStructuralLoadOrResult();
		case IFCSTRUCTURALLOADPLANARFORCE:return new IfcStructuralLoadPlanarForce();
		case IFCSTRUCTURALLOADSINGLEDISPLACEMENT:return new IfcStructuralLoadSingleDisplacement();
		case IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION:return new IfcStructuralLoadSingleDisplacementDistortion();
		case IFCSTRUCTURALLOADSINGLEFORCE:return new IfcStructuralLoadSingleForce();
		case IFCSTRUCTURALLOADSINGLEFORCEWARPING:return new IfcStructuralLoadSingleForceWarping();
		case IFCSTRUCTURALLOADSTATIC:return new IfcStructuralLoadStatic();
		case IFCSTRUCTURALLOADTEMPERATURE:return new IfcStructuralLoadTemperature();
		case IFCSTRUCTURALMEMBER:return new IfcStructuralMember();
		case IFCSTRUCTURALPLANARACTION:return new IfcStructuralPlanarAction();
		case IFCSTRUCTURALPOINTACTION:return new IfcStructuralPointAction();
		case IFCSTRUCTURALPOINTCONNECTION:return new IfcStructuralPointConnection();
		case IFCSTRUCTURALPOINTREACTION:return new IfcStructuralPointReaction();
		case IFCSTRUCTURALREACTION:return new IfcStructuralReaction();
		case IFCSTRUCTURALRESULTGROUP:return new IfcStructuralResultGroup();
		case IFCSTRUCTURALSURFACEACTION:return new IfcStructuralSurfaceAction();
		case IFCSTRUCTURALSURFACECONNECTION:return new IfcStructuralSurfaceConnection();
		case IFCSTRUCTURALSURFACEMEMBER:return new IfcStructuralSurfaceMember();
		case IFCSTRUCTURALSURFACEMEMBERVARYING:return new IfcStructuralSurfaceMemberVarying();
		case IFCSTRUCTURALSURFACEREACTION:return new IfcStructuralSurfaceReaction();
		case IFCSTYLEMODEL:return new IfcStyleModel();
		case IFCSTYLEDITEM:return new IfcStyledItem();
		case IFCSTYLEDREPRESENTATION:return new IfcStyledRepresentation();
		case IFCSUBCONTRACTRESOURCE:return new IfcSubContractResource();
		case IFCSUBCONTRACTRESOURCETYPE:return new IfcSubContractResourceType();
		case IFCSUBEDGE:return new IfcSubedge();
		case IFCSURFACE:return new IfcSurface();
		case IFCSURFACECURVESWEPTAREASOLID:return new IfcSurfaceCurveSweptAreaSolid();
		case IFCSURFACEFEATURE:return new IfcSurfaceFeature();
		case IFCSURFACEOFLINEAREXTRUSION:return new IfcSurfaceOfLinearExtrusion();
		case IFCSURFACEOFREVOLUTION:return new IfcSurfaceOfRevolution();
		case IFCSURFACEREINFORCEMENTAREA:return new IfcSurfaceReinforcementArea();
		case IFCSURFACESTYLE:return new IfcSurfaceStyle();
		case IFCSURFACESTYLELIGHTING:return new IfcSurfaceStyleLighting();
		case IFCSURFACESTYLEREFRACTION:return new IfcSurfaceStyleRefraction();
		case IFCSURFACESTYLERENDERING:return new IfcSurfaceStyleRendering();
		case IFCSURFACESTYLESHADING:return new IfcSurfaceStyleShading();
		case IFCSURFACESTYLEWITHTEXTURES:return new IfcSurfaceStyleWithTextures();
		case IFCSURFACETEXTURE:return new IfcSurfaceTexture();
		case IFCSWEPTAREASOLID:return new IfcSweptAreaSolid();
		case IFCSWEPTDISKSOLID:return new IfcSweptDiskSolid();
		case IFCSWEPTDISKSOLIDPOLYGONAL:return new IfcSweptDiskSolidPolygonal();
		case IFCSWEPTSURFACE:return new IfcSweptSurface();
		case IFCSWITCHINGDEVICE:return new IfcSwitchingDevice();
		case IFCSWITCHINGDEVICETYPE:return new IfcSwitchingDeviceType();
		case IFCSYSTEM:return new IfcSystem();
		case IFCSYSTEMFURNITUREELEMENT:return new IfcSystemFurnitureElement();
		case IFCSYSTEMFURNITUREELEMENTTYPE:return new IfcSystemFurnitureElementType();
		case IFCTSHAPEPROFILEDEF:return new IfcTShapeProfileDef();
		case IFCTABLE:return new IfcTable();
		case IFCTABLECOLUMN:return new IfcTableColumn();
		case IFCTABLEROW:return new IfcTableRow();
		case IFCTANK:return new IfcTank();
		case IFCTANKTYPE:return new IfcTankType();
		case IFCTASK:return new IfcTask();
		case IFCTASKTIME:return new IfcTaskTime();
		case IFCTASKTIMERECURRING:return new IfcTaskTimeRecurring();
		case IFCTASKTYPE:return new IfcTaskType();
		case IFCTELECOMADDRESS:return new IfcTelecomAddress();
		case IFCTENDON:return new IfcTendon();
		case IFCTENDONANCHOR:return new IfcTendonAnchor();
		case IFCTENDONANCHORTYPE:return new IfcTendonAnchorType();
		case IFCTENDONTYPE:return new IfcTendonType();
		case IFCTESSELLATEDFACESET:return new IfcTessellatedFaceSet();
		case IFCTESSELLATEDITEM:return new IfcTessellatedItem();
		case IFCTEXTLITERAL:return new IfcTextLiteral();
		case IFCTEXTLITERALWITHEXTENT:return new IfcTextLiteralWithExtent();
		case IFCTEXTSTYLE:return new IfcTextStyle();
		case IFCTEXTSTYLEFONTMODEL:return new IfcTextStyleFontModel();
		case IFCTEXTSTYLEFORDEFINEDFONT:return new IfcTextStyleForDefinedFont();
		case IFCTEXTSTYLETEXTMODEL:return new IfcTextStyleTextModel();
		case IFCTEXTURECOORDINATE:return new IfcTextureCoordinate();
		case IFCTEXTURECOORDINATEGENERATOR:return new IfcTextureCoordinateGenerator();
		case IFCTEXTUREMAP:return new IfcTextureMap();
		case IFCTEXTUREVERTEX:return new IfcTextureVertex();
		case IFCTEXTUREVERTEXLIST:return new IfcTextureVertexList();
		case IFCTIMEPERIOD:return new IfcTimePeriod();
		case IFCTIMESERIES:return new IfcTimeSeries();
		case IFCTIMESERIESVALUE:return new IfcTimeSeriesValue();
		case IFCTOPOLOGICALREPRESENTATIONITEM:return new IfcTopologicalRepresentationItem();
		case IFCTOPOLOGYREPRESENTATION:return new IfcTopologyRepresentation();
		case IFCTRANSFORMER:return new IfcTransformer();
		case IFCTRANSFORMERTYPE:return new IfcTransformerType();
		case IFCTRANSPORTELEMENT:return new IfcTransportElement();
		case IFCTRANSPORTELEMENTTYPE:return new IfcTransportElementType();
		case IFCTRAPEZIUMPROFILEDEF:return new IfcTrapeziumProfileDef();
		case IFCTRIANGULATEDFACESET:return new IfcTriangulatedFaceSet();
		case IFCTRIMMEDCURVE:return new IfcTrimmedCurve();
		case IFCTUBEBUNDLE:return new IfcTubeBundle();
		case IFCTUBEBUNDLETYPE:return new IfcTubeBundleType();
		case IFCTYPEOBJECT:return new IfcTypeObject();
		case IFCTYPEPROCESS:return new IfcTypeProcess();
		case IFCTYPEPRODUCT:return new IfcTypeProduct();
		case IFCTYPERESOURCE:return new IfcTypeResource();
		case IFCUSHAPEPROFILEDEF:return new IfcUShapeProfileDef();
		case IFCUNITASSIGNMENT:return new IfcUnitAssignment();
		case IFCUNITARYCONTROLELEMENT:return new IfcUnitaryControlElement();
		case IFCUNITARYCONTROLELEMENTTYPE:return new IfcUnitaryControlElementType();
		case IFCUNITARYEQUIPMENT:return new IfcUnitaryEquipment();
		case IFCUNITARYEQUIPMENTTYPE:return new IfcUnitaryEquipmentType();
		case IFCVALVE:return new IfcValve();
		case IFCVALVETYPE:return new IfcValveType();
		case IFCVECTOR:return new IfcVector();
		case IFCVERTEX:return new IfcVertex();
		case IFCVERTEXLOOP:return new IfcVertexLoop();
		case IFCVERTEXPOINT:return new IfcVertexPoint();
		case IFCVIBRATIONISOLATOR:return new IfcVibrationIsolator();
		case IFCVIBRATIONISOLATORTYPE:return new IfcVibrationIsolatorType();
		case IFCVIRTUALELEMENT:return new IfcVirtualElement();
		case IFCVIRTUALGRIDINTERSECTION:return new IfcVirtualGridIntersection();
		case IFCVOIDINGFEATURE:return new IfcVoidingFeature();
		case IFCWALL:return new IfcWall();
		case IFCWALLELEMENTEDCASE:return new IfcWallElementedCase();
		case IFCWALLSTANDARDCASE:return new IfcWallStandardCase();
		case IFCWALLTYPE:return new IfcWallType();
		case IFCWASTETERMINAL:return new IfcWasteTerminal();
		case IFCWASTETERMINALTYPE:return new IfcWasteTerminalType();
		case IFCWINDOW:return new IfcWindow();
		case IFCWINDOWLININGPROPERTIES:return new IfcWindowLiningProperties();
		case IFCWINDOWPANELPROPERTIES:return new IfcWindowPanelProperties();
		case IFCWINDOWSTANDARDCASE:return new IfcWindowStandardCase();
		case IFCWINDOWSTYLE:return new IfcWindowStyle();
		case IFCWINDOWTYPE:return new IfcWindowType();
		case IFCWORKCALENDAR:return new IfcWorkCalendar();
		case IFCWORKCONTROL:return new IfcWorkControl();
		case IFCWORKPLAN:return new IfcWorkPlan();
		case IFCWORKSCHEDULE:return new IfcWorkSchedule();
		case IFCWORKTIME:return new IfcWorkTime();
		case IFCZSHAPEPROFILEDEF:return new IfcZShapeProfileDef();
		case IFCZONE:return new IfcZone();

		default: throw IfcPPException("given IfcPPEntityEnum not valid");
	}
	return nullptr;
}
