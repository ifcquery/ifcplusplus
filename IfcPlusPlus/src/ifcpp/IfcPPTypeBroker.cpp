/* -*-c++-*- IfcPlusPlus - www.ifcplusplus.com - Copyright (C) 2011 Fabian Gerold
*
* This library is open source and may be redistributed and/or modified under  
* the terms of the OpenSceneGraph Public License (OSGPL) version 0.0 or 
* (at your option) any later version.  The full license is in LICENSE file
* included with this distribution, and on the openscenegraph.org website.
* 
* This library is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
* OpenSceneGraph Public License for more details.
*/

#include <vector>
#include <map>
#include <string>
#include "ifcpp/IfcPPTypes.h"
#include "ifcpp/IfcPPTypeEnums.h"
#include "ifcpp/model/IfcPPException.h"

shared_ptr<IfcPPObject> createIfcPPType( const IfcPPTypeEnum type_enum, const std::wstring& arg, const boost::unordered_map<int,shared_ptr<IfcPPEntity> >& map_entities )
{
	if( arg.compare( L"$" ) == 0 ) { return shared_ptr<IfcPPObject>(); }
	else if( arg.compare( L"*" ) == 0 ) { return shared_ptr<IfcPPObject>(); }
	switch( type_enum )
	{
		case IFCABSORBEDDOSEMEASURE:return IfcAbsorbedDoseMeasure::createObjectFromSTEP( arg );
		case IFCACCELERATIONMEASURE:return IfcAccelerationMeasure::createObjectFromSTEP( arg );
		case IFCACTIONREQUESTTYPEENUM:return IfcActionRequestTypeEnum::createObjectFromSTEP( arg );
		case IFCACTIONSOURCETYPEENUM:return IfcActionSourceTypeEnum::createObjectFromSTEP( arg );
		case IFCACTIONTYPEENUM:return IfcActionTypeEnum::createObjectFromSTEP( arg );
		case IFCACTUATORTYPEENUM:return IfcActuatorTypeEnum::createObjectFromSTEP( arg );
		case IFCADDRESSTYPEENUM:return IfcAddressTypeEnum::createObjectFromSTEP( arg );
		case IFCAIRTERMINALBOXTYPEENUM:return IfcAirTerminalBoxTypeEnum::createObjectFromSTEP( arg );
		case IFCAIRTERMINALTYPEENUM:return IfcAirTerminalTypeEnum::createObjectFromSTEP( arg );
		case IFCAIRTOAIRHEATRECOVERYTYPEENUM:return IfcAirToAirHeatRecoveryTypeEnum::createObjectFromSTEP( arg );
		case IFCALARMTYPEENUM:return IfcAlarmTypeEnum::createObjectFromSTEP( arg );
		case IFCAMOUNTOFSUBSTANCEMEASURE:return IfcAmountOfSubstanceMeasure::createObjectFromSTEP( arg );
		case IFCANALYSISMODELTYPEENUM:return IfcAnalysisModelTypeEnum::createObjectFromSTEP( arg );
		case IFCANALYSISTHEORYTYPEENUM:return IfcAnalysisTheoryTypeEnum::createObjectFromSTEP( arg );
		case IFCANGULARVELOCITYMEASURE:return IfcAngularVelocityMeasure::createObjectFromSTEP( arg );
		case IFCARCINDEX:return IfcArcIndex::createObjectFromSTEP( arg );
		case IFCAREADENSITYMEASURE:return IfcAreaDensityMeasure::createObjectFromSTEP( arg );
		case IFCAREAMEASURE:return IfcAreaMeasure::createObjectFromSTEP( arg );
		case IFCARITHMETICOPERATORENUM:return IfcArithmeticOperatorEnum::createObjectFromSTEP( arg );
		case IFCASSEMBLYPLACEENUM:return IfcAssemblyPlaceEnum::createObjectFromSTEP( arg );
		case IFCAUDIOVISUALAPPLIANCETYPEENUM:return IfcAudioVisualApplianceTypeEnum::createObjectFromSTEP( arg );
		case IFCBSPLINECURVEFORM:return IfcBSplineCurveForm::createObjectFromSTEP( arg );
		case IFCBSPLINESURFACEFORM:return IfcBSplineSurfaceForm::createObjectFromSTEP( arg );
		case IFCBEAMTYPEENUM:return IfcBeamTypeEnum::createObjectFromSTEP( arg );
		case IFCBENCHMARKENUM:return IfcBenchmarkEnum::createObjectFromSTEP( arg );
		case IFCBINARY:return IfcBinary::createObjectFromSTEP( arg );
		case IFCBOILERTYPEENUM:return IfcBoilerTypeEnum::createObjectFromSTEP( arg );
		case IFCBOOLEAN:return IfcBoolean::createObjectFromSTEP( arg );
		case IFCBOOLEANOPERATOR:return IfcBooleanOperator::createObjectFromSTEP( arg );
		case IFCBOXALIGNMENT:return IfcBoxAlignment::createObjectFromSTEP( arg );
		case IFCBUILDINGELEMENTPARTTYPEENUM:return IfcBuildingElementPartTypeEnum::createObjectFromSTEP( arg );
		case IFCBUILDINGELEMENTPROXYTYPEENUM:return IfcBuildingElementProxyTypeEnum::createObjectFromSTEP( arg );
		case IFCBUILDINGSYSTEMTYPEENUM:return IfcBuildingSystemTypeEnum::createObjectFromSTEP( arg );
		case IFCBURNERTYPEENUM:return IfcBurnerTypeEnum::createObjectFromSTEP( arg );
		case IFCCABLECARRIERFITTINGTYPEENUM:return IfcCableCarrierFittingTypeEnum::createObjectFromSTEP( arg );
		case IFCCABLECARRIERSEGMENTTYPEENUM:return IfcCableCarrierSegmentTypeEnum::createObjectFromSTEP( arg );
		case IFCCABLEFITTINGTYPEENUM:return IfcCableFittingTypeEnum::createObjectFromSTEP( arg );
		case IFCCABLESEGMENTTYPEENUM:return IfcCableSegmentTypeEnum::createObjectFromSTEP( arg );
		case IFCCARDINALPOINTREFERENCE:return IfcCardinalPointReference::createObjectFromSTEP( arg );
		case IFCCHANGEACTIONENUM:return IfcChangeActionEnum::createObjectFromSTEP( arg );
		case IFCCHILLERTYPEENUM:return IfcChillerTypeEnum::createObjectFromSTEP( arg );
		case IFCCHIMNEYTYPEENUM:return IfcChimneyTypeEnum::createObjectFromSTEP( arg );
		case IFCCOILTYPEENUM:return IfcCoilTypeEnum::createObjectFromSTEP( arg );
		case IFCCOLUMNTYPEENUM:return IfcColumnTypeEnum::createObjectFromSTEP( arg );
		case IFCCOMMUNICATIONSAPPLIANCETYPEENUM:return IfcCommunicationsApplianceTypeEnum::createObjectFromSTEP( arg );
		case IFCCOMPLEXNUMBER:return IfcComplexNumber::createObjectFromSTEP( arg );
		case IFCCOMPLEXPROPERTYTEMPLATETYPEENUM:return IfcComplexPropertyTemplateTypeEnum::createObjectFromSTEP( arg );
		case IFCCOMPOUNDPLANEANGLEMEASURE:return IfcCompoundPlaneAngleMeasure::createObjectFromSTEP( arg );
		case IFCCOMPRESSORTYPEENUM:return IfcCompressorTypeEnum::createObjectFromSTEP( arg );
		case IFCCONDENSERTYPEENUM:return IfcCondenserTypeEnum::createObjectFromSTEP( arg );
		case IFCCONNECTIONTYPEENUM:return IfcConnectionTypeEnum::createObjectFromSTEP( arg );
		case IFCCONSTRAINTENUM:return IfcConstraintEnum::createObjectFromSTEP( arg );
		case IFCCONSTRUCTIONEQUIPMENTRESOURCETYPEENUM:return IfcConstructionEquipmentResourceTypeEnum::createObjectFromSTEP( arg );
		case IFCCONSTRUCTIONMATERIALRESOURCETYPEENUM:return IfcConstructionMaterialResourceTypeEnum::createObjectFromSTEP( arg );
		case IFCCONSTRUCTIONPRODUCTRESOURCETYPEENUM:return IfcConstructionProductResourceTypeEnum::createObjectFromSTEP( arg );
		case IFCCONTEXTDEPENDENTMEASURE:return IfcContextDependentMeasure::createObjectFromSTEP( arg );
		case IFCCONTROLLERTYPEENUM:return IfcControllerTypeEnum::createObjectFromSTEP( arg );
		case IFCCOOLEDBEAMTYPEENUM:return IfcCooledBeamTypeEnum::createObjectFromSTEP( arg );
		case IFCCOOLINGTOWERTYPEENUM:return IfcCoolingTowerTypeEnum::createObjectFromSTEP( arg );
		case IFCCOSTITEMTYPEENUM:return IfcCostItemTypeEnum::createObjectFromSTEP( arg );
		case IFCCOSTSCHEDULETYPEENUM:return IfcCostScheduleTypeEnum::createObjectFromSTEP( arg );
		case IFCCOUNTMEASURE:return IfcCountMeasure::createObjectFromSTEP( arg );
		case IFCCOVERINGTYPEENUM:return IfcCoveringTypeEnum::createObjectFromSTEP( arg );
		case IFCCREWRESOURCETYPEENUM:return IfcCrewResourceTypeEnum::createObjectFromSTEP( arg );
		case IFCCURTAINWALLTYPEENUM:return IfcCurtainWallTypeEnum::createObjectFromSTEP( arg );
		case IFCCURVATUREMEASURE:return IfcCurvatureMeasure::createObjectFromSTEP( arg );
		case IFCCURVEINTERPOLATIONENUM:return IfcCurveInterpolationEnum::createObjectFromSTEP( arg );
		case IFCDAMPERTYPEENUM:return IfcDamperTypeEnum::createObjectFromSTEP( arg );
		case IFCDATAORIGINENUM:return IfcDataOriginEnum::createObjectFromSTEP( arg );
		case IFCDATE:return IfcDate::createObjectFromSTEP( arg );
		case IFCDATETIME:return IfcDateTime::createObjectFromSTEP( arg );
		case IFCDAYINMONTHNUMBER:return IfcDayInMonthNumber::createObjectFromSTEP( arg );
		case IFCDAYINWEEKNUMBER:return IfcDayInWeekNumber::createObjectFromSTEP( arg );
		case IFCDERIVEDUNITENUM:return IfcDerivedUnitEnum::createObjectFromSTEP( arg );
		case IFCDESCRIPTIVEMEASURE:return IfcDescriptiveMeasure::createObjectFromSTEP( arg );
		case IFCDIMENSIONCOUNT:return IfcDimensionCount::createObjectFromSTEP( arg );
		case IFCDIRECTIONSENSEENUM:return IfcDirectionSenseEnum::createObjectFromSTEP( arg );
		case IFCDISCRETEACCESSORYTYPEENUM:return IfcDiscreteAccessoryTypeEnum::createObjectFromSTEP( arg );
		case IFCDISTRIBUTIONCHAMBERELEMENTTYPEENUM:return IfcDistributionChamberElementTypeEnum::createObjectFromSTEP( arg );
		case IFCDISTRIBUTIONPORTTYPEENUM:return IfcDistributionPortTypeEnum::createObjectFromSTEP( arg );
		case IFCDISTRIBUTIONSYSTEMENUM:return IfcDistributionSystemEnum::createObjectFromSTEP( arg );
		case IFCDOCUMENTCONFIDENTIALITYENUM:return IfcDocumentConfidentialityEnum::createObjectFromSTEP( arg );
		case IFCDOCUMENTSTATUSENUM:return IfcDocumentStatusEnum::createObjectFromSTEP( arg );
		case IFCDOORPANELOPERATIONENUM:return IfcDoorPanelOperationEnum::createObjectFromSTEP( arg );
		case IFCDOORPANELPOSITIONENUM:return IfcDoorPanelPositionEnum::createObjectFromSTEP( arg );
		case IFCDOORSTYLECONSTRUCTIONENUM:return IfcDoorStyleConstructionEnum::createObjectFromSTEP( arg );
		case IFCDOORSTYLEOPERATIONENUM:return IfcDoorStyleOperationEnum::createObjectFromSTEP( arg );
		case IFCDOORTYPEENUM:return IfcDoorTypeEnum::createObjectFromSTEP( arg );
		case IFCDOORTYPEOPERATIONENUM:return IfcDoorTypeOperationEnum::createObjectFromSTEP( arg );
		case IFCDOSEEQUIVALENTMEASURE:return IfcDoseEquivalentMeasure::createObjectFromSTEP( arg );
		case IFCDUCTFITTINGTYPEENUM:return IfcDuctFittingTypeEnum::createObjectFromSTEP( arg );
		case IFCDUCTSEGMENTTYPEENUM:return IfcDuctSegmentTypeEnum::createObjectFromSTEP( arg );
		case IFCDUCTSILENCERTYPEENUM:return IfcDuctSilencerTypeEnum::createObjectFromSTEP( arg );
		case IFCDURATION:return IfcDuration::createObjectFromSTEP( arg );
		case IFCDYNAMICVISCOSITYMEASURE:return IfcDynamicViscosityMeasure::createObjectFromSTEP( arg );
		case IFCELECTRICAPPLIANCETYPEENUM:return IfcElectricApplianceTypeEnum::createObjectFromSTEP( arg );
		case IFCELECTRICCAPACITANCEMEASURE:return IfcElectricCapacitanceMeasure::createObjectFromSTEP( arg );
		case IFCELECTRICCHARGEMEASURE:return IfcElectricChargeMeasure::createObjectFromSTEP( arg );
		case IFCELECTRICCONDUCTANCEMEASURE:return IfcElectricConductanceMeasure::createObjectFromSTEP( arg );
		case IFCELECTRICCURRENTMEASURE:return IfcElectricCurrentMeasure::createObjectFromSTEP( arg );
		case IFCELECTRICDISTRIBUTIONBOARDTYPEENUM:return IfcElectricDistributionBoardTypeEnum::createObjectFromSTEP( arg );
		case IFCELECTRICFLOWSTORAGEDEVICETYPEENUM:return IfcElectricFlowStorageDeviceTypeEnum::createObjectFromSTEP( arg );
		case IFCELECTRICGENERATORTYPEENUM:return IfcElectricGeneratorTypeEnum::createObjectFromSTEP( arg );
		case IFCELECTRICMOTORTYPEENUM:return IfcElectricMotorTypeEnum::createObjectFromSTEP( arg );
		case IFCELECTRICRESISTANCEMEASURE:return IfcElectricResistanceMeasure::createObjectFromSTEP( arg );
		case IFCELECTRICTIMECONTROLTYPEENUM:return IfcElectricTimeControlTypeEnum::createObjectFromSTEP( arg );
		case IFCELECTRICVOLTAGEMEASURE:return IfcElectricVoltageMeasure::createObjectFromSTEP( arg );
		case IFCELEMENTASSEMBLYTYPEENUM:return IfcElementAssemblyTypeEnum::createObjectFromSTEP( arg );
		case IFCELEMENTCOMPOSITIONENUM:return IfcElementCompositionEnum::createObjectFromSTEP( arg );
		case IFCENERGYMEASURE:return IfcEnergyMeasure::createObjectFromSTEP( arg );
		case IFCENGINETYPEENUM:return IfcEngineTypeEnum::createObjectFromSTEP( arg );
		case IFCEVAPORATIVECOOLERTYPEENUM:return IfcEvaporativeCoolerTypeEnum::createObjectFromSTEP( arg );
		case IFCEVAPORATORTYPEENUM:return IfcEvaporatorTypeEnum::createObjectFromSTEP( arg );
		case IFCEVENTTRIGGERTYPEENUM:return IfcEventTriggerTypeEnum::createObjectFromSTEP( arg );
		case IFCEVENTTYPEENUM:return IfcEventTypeEnum::createObjectFromSTEP( arg );
		case IFCEXTERNALSPATIALELEMENTTYPEENUM:return IfcExternalSpatialElementTypeEnum::createObjectFromSTEP( arg );
		case IFCFANTYPEENUM:return IfcFanTypeEnum::createObjectFromSTEP( arg );
		case IFCFASTENERTYPEENUM:return IfcFastenerTypeEnum::createObjectFromSTEP( arg );
		case IFCFILTERTYPEENUM:return IfcFilterTypeEnum::createObjectFromSTEP( arg );
		case IFCFIRESUPPRESSIONTERMINALTYPEENUM:return IfcFireSuppressionTerminalTypeEnum::createObjectFromSTEP( arg );
		case IFCFLOWDIRECTIONENUM:return IfcFlowDirectionEnum::createObjectFromSTEP( arg );
		case IFCFLOWINSTRUMENTTYPEENUM:return IfcFlowInstrumentTypeEnum::createObjectFromSTEP( arg );
		case IFCFLOWMETERTYPEENUM:return IfcFlowMeterTypeEnum::createObjectFromSTEP( arg );
		case IFCFONTSTYLE:return IfcFontStyle::createObjectFromSTEP( arg );
		case IFCFONTVARIANT:return IfcFontVariant::createObjectFromSTEP( arg );
		case IFCFONTWEIGHT:return IfcFontWeight::createObjectFromSTEP( arg );
		case IFCFOOTINGTYPEENUM:return IfcFootingTypeEnum::createObjectFromSTEP( arg );
		case IFCFORCEMEASURE:return IfcForceMeasure::createObjectFromSTEP( arg );
		case IFCFREQUENCYMEASURE:return IfcFrequencyMeasure::createObjectFromSTEP( arg );
		case IFCFURNITURETYPEENUM:return IfcFurnitureTypeEnum::createObjectFromSTEP( arg );
		case IFCGEOGRAPHICELEMENTTYPEENUM:return IfcGeographicElementTypeEnum::createObjectFromSTEP( arg );
		case IFCGEOMETRICPROJECTIONENUM:return IfcGeometricProjectionEnum::createObjectFromSTEP( arg );
		case IFCGLOBALORLOCALENUM:return IfcGlobalOrLocalEnum::createObjectFromSTEP( arg );
		case IFCGLOBALLYUNIQUEID:return IfcGloballyUniqueId::createObjectFromSTEP( arg );
		case IFCGRIDTYPEENUM:return IfcGridTypeEnum::createObjectFromSTEP( arg );
		case IFCHEATEXCHANGERTYPEENUM:return IfcHeatExchangerTypeEnum::createObjectFromSTEP( arg );
		case IFCHEATFLUXDENSITYMEASURE:return IfcHeatFluxDensityMeasure::createObjectFromSTEP( arg );
		case IFCHEATINGVALUEMEASURE:return IfcHeatingValueMeasure::createObjectFromSTEP( arg );
		case IFCHUMIDIFIERTYPEENUM:return IfcHumidifierTypeEnum::createObjectFromSTEP( arg );
		case IFCIDENTIFIER:return IfcIdentifier::createObjectFromSTEP( arg );
		case IFCILLUMINANCEMEASURE:return IfcIlluminanceMeasure::createObjectFromSTEP( arg );
		case IFCINDUCTANCEMEASURE:return IfcInductanceMeasure::createObjectFromSTEP( arg );
		case IFCINTEGER:return IfcInteger::createObjectFromSTEP( arg );
		case IFCINTEGERCOUNTRATEMEASURE:return IfcIntegerCountRateMeasure::createObjectFromSTEP( arg );
		case IFCINTERCEPTORTYPEENUM:return IfcInterceptorTypeEnum::createObjectFromSTEP( arg );
		case IFCINTERNALOREXTERNALENUM:return IfcInternalOrExternalEnum::createObjectFromSTEP( arg );
		case IFCINVENTORYTYPEENUM:return IfcInventoryTypeEnum::createObjectFromSTEP( arg );
		case IFCIONCONCENTRATIONMEASURE:return IfcIonConcentrationMeasure::createObjectFromSTEP( arg );
		case IFCISOTHERMALMOISTURECAPACITYMEASURE:return IfcIsothermalMoistureCapacityMeasure::createObjectFromSTEP( arg );
		case IFCJUNCTIONBOXTYPEENUM:return IfcJunctionBoxTypeEnum::createObjectFromSTEP( arg );
		case IFCKINEMATICVISCOSITYMEASURE:return IfcKinematicViscosityMeasure::createObjectFromSTEP( arg );
		case IFCKNOTTYPE:return IfcKnotType::createObjectFromSTEP( arg );
		case IFCLABEL:return IfcLabel::createObjectFromSTEP( arg );
		case IFCLABORRESOURCETYPEENUM:return IfcLaborResourceTypeEnum::createObjectFromSTEP( arg );
		case IFCLAMPTYPEENUM:return IfcLampTypeEnum::createObjectFromSTEP( arg );
		case IFCLANGUAGEID:return IfcLanguageId::createObjectFromSTEP( arg );
		case IFCLAYERSETDIRECTIONENUM:return IfcLayerSetDirectionEnum::createObjectFromSTEP( arg );
		case IFCLENGTHMEASURE:return IfcLengthMeasure::createObjectFromSTEP( arg );
		case IFCLIGHTDISTRIBUTIONCURVEENUM:return IfcLightDistributionCurveEnum::createObjectFromSTEP( arg );
		case IFCLIGHTEMISSIONSOURCEENUM:return IfcLightEmissionSourceEnum::createObjectFromSTEP( arg );
		case IFCLIGHTFIXTURETYPEENUM:return IfcLightFixtureTypeEnum::createObjectFromSTEP( arg );
		case IFCLINEINDEX:return IfcLineIndex::createObjectFromSTEP( arg );
		case IFCLINEARFORCEMEASURE:return IfcLinearForceMeasure::createObjectFromSTEP( arg );
		case IFCLINEARMOMENTMEASURE:return IfcLinearMomentMeasure::createObjectFromSTEP( arg );
		case IFCLINEARSTIFFNESSMEASURE:return IfcLinearStiffnessMeasure::createObjectFromSTEP( arg );
		case IFCLINEARVELOCITYMEASURE:return IfcLinearVelocityMeasure::createObjectFromSTEP( arg );
		case IFCLOADGROUPTYPEENUM:return IfcLoadGroupTypeEnum::createObjectFromSTEP( arg );
		case IFCLOGICAL:return IfcLogical::createObjectFromSTEP( arg );
		case IFCLOGICALOPERATORENUM:return IfcLogicalOperatorEnum::createObjectFromSTEP( arg );
		case IFCLUMINOUSFLUXMEASURE:return IfcLuminousFluxMeasure::createObjectFromSTEP( arg );
		case IFCLUMINOUSINTENSITYDISTRIBUTIONMEASURE:return IfcLuminousIntensityDistributionMeasure::createObjectFromSTEP( arg );
		case IFCLUMINOUSINTENSITYMEASURE:return IfcLuminousIntensityMeasure::createObjectFromSTEP( arg );
		case IFCMAGNETICFLUXDENSITYMEASURE:return IfcMagneticFluxDensityMeasure::createObjectFromSTEP( arg );
		case IFCMAGNETICFLUXMEASURE:return IfcMagneticFluxMeasure::createObjectFromSTEP( arg );
		case IFCMASSDENSITYMEASURE:return IfcMassDensityMeasure::createObjectFromSTEP( arg );
		case IFCMASSFLOWRATEMEASURE:return IfcMassFlowRateMeasure::createObjectFromSTEP( arg );
		case IFCMASSMEASURE:return IfcMassMeasure::createObjectFromSTEP( arg );
		case IFCMASSPERLENGTHMEASURE:return IfcMassPerLengthMeasure::createObjectFromSTEP( arg );
		case IFCMECHANICALFASTENERTYPEENUM:return IfcMechanicalFastenerTypeEnum::createObjectFromSTEP( arg );
		case IFCMEDICALDEVICETYPEENUM:return IfcMedicalDeviceTypeEnum::createObjectFromSTEP( arg );
		case IFCMEMBERTYPEENUM:return IfcMemberTypeEnum::createObjectFromSTEP( arg );
		case IFCMODULUSOFELASTICITYMEASURE:return IfcModulusOfElasticityMeasure::createObjectFromSTEP( arg );
		case IFCMODULUSOFLINEARSUBGRADEREACTIONMEASURE:return IfcModulusOfLinearSubgradeReactionMeasure::createObjectFromSTEP( arg );
		case IFCMODULUSOFROTATIONALSUBGRADEREACTIONMEASURE:return IfcModulusOfRotationalSubgradeReactionMeasure::createObjectFromSTEP( arg );
		case IFCMODULUSOFSUBGRADEREACTIONMEASURE:return IfcModulusOfSubgradeReactionMeasure::createObjectFromSTEP( arg );
		case IFCMOISTUREDIFFUSIVITYMEASURE:return IfcMoistureDiffusivityMeasure::createObjectFromSTEP( arg );
		case IFCMOLECULARWEIGHTMEASURE:return IfcMolecularWeightMeasure::createObjectFromSTEP( arg );
		case IFCMOMENTOFINERTIAMEASURE:return IfcMomentOfInertiaMeasure::createObjectFromSTEP( arg );
		case IFCMONETARYMEASURE:return IfcMonetaryMeasure::createObjectFromSTEP( arg );
		case IFCMONTHINYEARNUMBER:return IfcMonthInYearNumber::createObjectFromSTEP( arg );
		case IFCMOTORCONNECTIONTYPEENUM:return IfcMotorConnectionTypeEnum::createObjectFromSTEP( arg );
		case IFCNONNEGATIVELENGTHMEASURE:return IfcNonNegativeLengthMeasure::createObjectFromSTEP( arg );
		case IFCNORMALISEDRATIOMEASURE:return IfcNormalisedRatioMeasure::createObjectFromSTEP( arg );
		case IFCNULLSTYLE:return IfcNullStyle::createObjectFromSTEP( arg );
		case IFCNUMERICMEASURE:return IfcNumericMeasure::createObjectFromSTEP( arg );
		case IFCOBJECTTYPEENUM:return IfcObjectTypeEnum::createObjectFromSTEP( arg );
		case IFCOBJECTIVEENUM:return IfcObjectiveEnum::createObjectFromSTEP( arg );
		case IFCOCCUPANTTYPEENUM:return IfcOccupantTypeEnum::createObjectFromSTEP( arg );
		case IFCOPENINGELEMENTTYPEENUM:return IfcOpeningElementTypeEnum::createObjectFromSTEP( arg );
		case IFCOUTLETTYPEENUM:return IfcOutletTypeEnum::createObjectFromSTEP( arg );
		case IFCPHMEASURE:return IfcPHMeasure::createObjectFromSTEP( arg );
		case IFCPARAMETERVALUE:return IfcParameterValue::createObjectFromSTEP( arg );
		case IFCPERFORMANCEHISTORYTYPEENUM:return IfcPerformanceHistoryTypeEnum::createObjectFromSTEP( arg );
		case IFCPERMEABLECOVERINGOPERATIONENUM:return IfcPermeableCoveringOperationEnum::createObjectFromSTEP( arg );
		case IFCPERMITTYPEENUM:return IfcPermitTypeEnum::createObjectFromSTEP( arg );
		case IFCPHYSICALORVIRTUALENUM:return IfcPhysicalOrVirtualEnum::createObjectFromSTEP( arg );
		case IFCPILECONSTRUCTIONENUM:return IfcPileConstructionEnum::createObjectFromSTEP( arg );
		case IFCPILETYPEENUM:return IfcPileTypeEnum::createObjectFromSTEP( arg );
		case IFCPIPEFITTINGTYPEENUM:return IfcPipeFittingTypeEnum::createObjectFromSTEP( arg );
		case IFCPIPESEGMENTTYPEENUM:return IfcPipeSegmentTypeEnum::createObjectFromSTEP( arg );
		case IFCPLANARFORCEMEASURE:return IfcPlanarForceMeasure::createObjectFromSTEP( arg );
		case IFCPLANEANGLEMEASURE:return IfcPlaneAngleMeasure::createObjectFromSTEP( arg );
		case IFCPLATETYPEENUM:return IfcPlateTypeEnum::createObjectFromSTEP( arg );
		case IFCPOSITIVEINTEGER:return IfcPositiveInteger::createObjectFromSTEP( arg );
		case IFCPOSITIVELENGTHMEASURE:return IfcPositiveLengthMeasure::createObjectFromSTEP( arg );
		case IFCPOSITIVEPLANEANGLEMEASURE:return IfcPositivePlaneAngleMeasure::createObjectFromSTEP( arg );
		case IFCPOSITIVERATIOMEASURE:return IfcPositiveRatioMeasure::createObjectFromSTEP( arg );
		case IFCPOWERMEASURE:return IfcPowerMeasure::createObjectFromSTEP( arg );
		case IFCPRESENTABLETEXT:return IfcPresentableText::createObjectFromSTEP( arg );
		case IFCPRESSUREMEASURE:return IfcPressureMeasure::createObjectFromSTEP( arg );
		case IFCPROCEDURETYPEENUM:return IfcProcedureTypeEnum::createObjectFromSTEP( arg );
		case IFCPROFILETYPEENUM:return IfcProfileTypeEnum::createObjectFromSTEP( arg );
		case IFCPROJECTORDERTYPEENUM:return IfcProjectOrderTypeEnum::createObjectFromSTEP( arg );
		case IFCPROJECTEDORTRUELENGTHENUM:return IfcProjectedOrTrueLengthEnum::createObjectFromSTEP( arg );
		case IFCPROJECTIONELEMENTTYPEENUM:return IfcProjectionElementTypeEnum::createObjectFromSTEP( arg );
		case IFCPROPERTYSETDEFINITIONSET:return IfcPropertySetDefinitionSet::createObjectFromSTEP( arg, map_entities );
		case IFCPROPERTYSETTEMPLATETYPEENUM:return IfcPropertySetTemplateTypeEnum::createObjectFromSTEP( arg );
		case IFCPROTECTIVEDEVICETRIPPINGUNITTYPEENUM:return IfcProtectiveDeviceTrippingUnitTypeEnum::createObjectFromSTEP( arg );
		case IFCPROTECTIVEDEVICETYPEENUM:return IfcProtectiveDeviceTypeEnum::createObjectFromSTEP( arg );
		case IFCPUMPTYPEENUM:return IfcPumpTypeEnum::createObjectFromSTEP( arg );
		case IFCRADIOACTIVITYMEASURE:return IfcRadioActivityMeasure::createObjectFromSTEP( arg );
		case IFCRAILINGTYPEENUM:return IfcRailingTypeEnum::createObjectFromSTEP( arg );
		case IFCRAMPFLIGHTTYPEENUM:return IfcRampFlightTypeEnum::createObjectFromSTEP( arg );
		case IFCRAMPTYPEENUM:return IfcRampTypeEnum::createObjectFromSTEP( arg );
		case IFCRATIOMEASURE:return IfcRatioMeasure::createObjectFromSTEP( arg );
		case IFCREAL:return IfcReal::createObjectFromSTEP( arg );
		case IFCRECURRENCETYPEENUM:return IfcRecurrenceTypeEnum::createObjectFromSTEP( arg );
		case IFCREFLECTANCEMETHODENUM:return IfcReflectanceMethodEnum::createObjectFromSTEP( arg );
		case IFCREINFORCINGBARROLEENUM:return IfcReinforcingBarRoleEnum::createObjectFromSTEP( arg );
		case IFCREINFORCINGBARSURFACEENUM:return IfcReinforcingBarSurfaceEnum::createObjectFromSTEP( arg );
		case IFCREINFORCINGBARTYPEENUM:return IfcReinforcingBarTypeEnum::createObjectFromSTEP( arg );
		case IFCREINFORCINGMESHTYPEENUM:return IfcReinforcingMeshTypeEnum::createObjectFromSTEP( arg );
		case IFCROLEENUM:return IfcRoleEnum::createObjectFromSTEP( arg );
		case IFCROOFTYPEENUM:return IfcRoofTypeEnum::createObjectFromSTEP( arg );
		case IFCROTATIONALFREQUENCYMEASURE:return IfcRotationalFrequencyMeasure::createObjectFromSTEP( arg );
		case IFCROTATIONALMASSMEASURE:return IfcRotationalMassMeasure::createObjectFromSTEP( arg );
		case IFCROTATIONALSTIFFNESSMEASURE:return IfcRotationalStiffnessMeasure::createObjectFromSTEP( arg );
		case IFCSIPREFIX:return IfcSIPrefix::createObjectFromSTEP( arg );
		case IFCSIUNITNAME:return IfcSIUnitName::createObjectFromSTEP( arg );
		case IFCSANITARYTERMINALTYPEENUM:return IfcSanitaryTerminalTypeEnum::createObjectFromSTEP( arg );
		case IFCSECTIONMODULUSMEASURE:return IfcSectionModulusMeasure::createObjectFromSTEP( arg );
		case IFCSECTIONTYPEENUM:return IfcSectionTypeEnum::createObjectFromSTEP( arg );
		case IFCSECTIONALAREAINTEGRALMEASURE:return IfcSectionalAreaIntegralMeasure::createObjectFromSTEP( arg );
		case IFCSENSORTYPEENUM:return IfcSensorTypeEnum::createObjectFromSTEP( arg );
		case IFCSEQUENCEENUM:return IfcSequenceEnum::createObjectFromSTEP( arg );
		case IFCSHADINGDEVICETYPEENUM:return IfcShadingDeviceTypeEnum::createObjectFromSTEP( arg );
		case IFCSHEARMODULUSMEASURE:return IfcShearModulusMeasure::createObjectFromSTEP( arg );
		case IFCSIMPLEPROPERTYTEMPLATETYPEENUM:return IfcSimplePropertyTemplateTypeEnum::createObjectFromSTEP( arg );
		case IFCSLABTYPEENUM:return IfcSlabTypeEnum::createObjectFromSTEP( arg );
		case IFCSOLARDEVICETYPEENUM:return IfcSolarDeviceTypeEnum::createObjectFromSTEP( arg );
		case IFCSOLIDANGLEMEASURE:return IfcSolidAngleMeasure::createObjectFromSTEP( arg );
		case IFCSOUNDPOWERLEVELMEASURE:return IfcSoundPowerLevelMeasure::createObjectFromSTEP( arg );
		case IFCSOUNDPOWERMEASURE:return IfcSoundPowerMeasure::createObjectFromSTEP( arg );
		case IFCSOUNDPRESSURELEVELMEASURE:return IfcSoundPressureLevelMeasure::createObjectFromSTEP( arg );
		case IFCSOUNDPRESSUREMEASURE:return IfcSoundPressureMeasure::createObjectFromSTEP( arg );
		case IFCSPACEHEATERTYPEENUM:return IfcSpaceHeaterTypeEnum::createObjectFromSTEP( arg );
		case IFCSPACETYPEENUM:return IfcSpaceTypeEnum::createObjectFromSTEP( arg );
		case IFCSPATIALZONETYPEENUM:return IfcSpatialZoneTypeEnum::createObjectFromSTEP( arg );
		case IFCSPECIFICHEATCAPACITYMEASURE:return IfcSpecificHeatCapacityMeasure::createObjectFromSTEP( arg );
		case IFCSPECULAREXPONENT:return IfcSpecularExponent::createObjectFromSTEP( arg );
		case IFCSPECULARROUGHNESS:return IfcSpecularRoughness::createObjectFromSTEP( arg );
		case IFCSTACKTERMINALTYPEENUM:return IfcStackTerminalTypeEnum::createObjectFromSTEP( arg );
		case IFCSTAIRFLIGHTTYPEENUM:return IfcStairFlightTypeEnum::createObjectFromSTEP( arg );
		case IFCSTAIRTYPEENUM:return IfcStairTypeEnum::createObjectFromSTEP( arg );
		case IFCSTATEENUM:return IfcStateEnum::createObjectFromSTEP( arg );
		case IFCSTRIPPEDOPTIONAL:return IfcStrippedOptional::createObjectFromSTEP( arg );
		case IFCSTRUCTURALCURVEACTIVITYTYPEENUM:return IfcStructuralCurveActivityTypeEnum::createObjectFromSTEP( arg );
		case IFCSTRUCTURALCURVEMEMBERTYPEENUM:return IfcStructuralCurveMemberTypeEnum::createObjectFromSTEP( arg );
		case IFCSTRUCTURALSURFACEACTIVITYTYPEENUM:return IfcStructuralSurfaceActivityTypeEnum::createObjectFromSTEP( arg );
		case IFCSTRUCTURALSURFACEMEMBERTYPEENUM:return IfcStructuralSurfaceMemberTypeEnum::createObjectFromSTEP( arg );
		case IFCSUBCONTRACTRESOURCETYPEENUM:return IfcSubContractResourceTypeEnum::createObjectFromSTEP( arg );
		case IFCSURFACEFEATURETYPEENUM:return IfcSurfaceFeatureTypeEnum::createObjectFromSTEP( arg );
		case IFCSURFACESIDE:return IfcSurfaceSide::createObjectFromSTEP( arg );
		case IFCSWITCHINGDEVICETYPEENUM:return IfcSwitchingDeviceTypeEnum::createObjectFromSTEP( arg );
		case IFCSYSTEMFURNITUREELEMENTTYPEENUM:return IfcSystemFurnitureElementTypeEnum::createObjectFromSTEP( arg );
		case IFCTANKTYPEENUM:return IfcTankTypeEnum::createObjectFromSTEP( arg );
		case IFCTASKDURATIONENUM:return IfcTaskDurationEnum::createObjectFromSTEP( arg );
		case IFCTASKTYPEENUM:return IfcTaskTypeEnum::createObjectFromSTEP( arg );
		case IFCTEMPERATUREGRADIENTMEASURE:return IfcTemperatureGradientMeasure::createObjectFromSTEP( arg );
		case IFCTEMPERATURERATEOFCHANGEMEASURE:return IfcTemperatureRateOfChangeMeasure::createObjectFromSTEP( arg );
		case IFCTENDONANCHORTYPEENUM:return IfcTendonAnchorTypeEnum::createObjectFromSTEP( arg );
		case IFCTENDONTYPEENUM:return IfcTendonTypeEnum::createObjectFromSTEP( arg );
		case IFCTEXT:return IfcText::createObjectFromSTEP( arg );
		case IFCTEXTALIGNMENT:return IfcTextAlignment::createObjectFromSTEP( arg );
		case IFCTEXTDECORATION:return IfcTextDecoration::createObjectFromSTEP( arg );
		case IFCTEXTFONTNAME:return IfcTextFontName::createObjectFromSTEP( arg );
		case IFCTEXTPATH:return IfcTextPath::createObjectFromSTEP( arg );
		case IFCTEXTTRANSFORMATION:return IfcTextTransformation::createObjectFromSTEP( arg );
		case IFCTHERMALADMITTANCEMEASURE:return IfcThermalAdmittanceMeasure::createObjectFromSTEP( arg );
		case IFCTHERMALCONDUCTIVITYMEASURE:return IfcThermalConductivityMeasure::createObjectFromSTEP( arg );
		case IFCTHERMALEXPANSIONCOEFFICIENTMEASURE:return IfcThermalExpansionCoefficientMeasure::createObjectFromSTEP( arg );
		case IFCTHERMALRESISTANCEMEASURE:return IfcThermalResistanceMeasure::createObjectFromSTEP( arg );
		case IFCTHERMALTRANSMITTANCEMEASURE:return IfcThermalTransmittanceMeasure::createObjectFromSTEP( arg );
		case IFCTHERMODYNAMICTEMPERATUREMEASURE:return IfcThermodynamicTemperatureMeasure::createObjectFromSTEP( arg );
		case IFCTIME:return IfcTime::createObjectFromSTEP( arg );
		case IFCTIMEMEASURE:return IfcTimeMeasure::createObjectFromSTEP( arg );
		case IFCTIMESERIESDATATYPEENUM:return IfcTimeSeriesDataTypeEnum::createObjectFromSTEP( arg );
		case IFCTIMESTAMP:return IfcTimeStamp::createObjectFromSTEP( arg );
		case IFCTORQUEMEASURE:return IfcTorqueMeasure::createObjectFromSTEP( arg );
		case IFCTRANSFORMERTYPEENUM:return IfcTransformerTypeEnum::createObjectFromSTEP( arg );
		case IFCTRANSITIONCODE:return IfcTransitionCode::createObjectFromSTEP( arg );
		case IFCTRANSPORTELEMENTTYPEENUM:return IfcTransportElementTypeEnum::createObjectFromSTEP( arg );
		case IFCTRIMMINGPREFERENCE:return IfcTrimmingPreference::createObjectFromSTEP( arg );
		case IFCTUBEBUNDLETYPEENUM:return IfcTubeBundleTypeEnum::createObjectFromSTEP( arg );
		case IFCURIREFERENCE:return IfcURIReference::createObjectFromSTEP( arg );
		case IFCUNITENUM:return IfcUnitEnum::createObjectFromSTEP( arg );
		case IFCUNITARYCONTROLELEMENTTYPEENUM:return IfcUnitaryControlElementTypeEnum::createObjectFromSTEP( arg );
		case IFCUNITARYEQUIPMENTTYPEENUM:return IfcUnitaryEquipmentTypeEnum::createObjectFromSTEP( arg );
		case IFCVALVETYPEENUM:return IfcValveTypeEnum::createObjectFromSTEP( arg );
		case IFCVAPORPERMEABILITYMEASURE:return IfcVaporPermeabilityMeasure::createObjectFromSTEP( arg );
		case IFCVIBRATIONISOLATORTYPEENUM:return IfcVibrationIsolatorTypeEnum::createObjectFromSTEP( arg );
		case IFCVOIDINGFEATURETYPEENUM:return IfcVoidingFeatureTypeEnum::createObjectFromSTEP( arg );
		case IFCVOLUMEMEASURE:return IfcVolumeMeasure::createObjectFromSTEP( arg );
		case IFCVOLUMETRICFLOWRATEMEASURE:return IfcVolumetricFlowRateMeasure::createObjectFromSTEP( arg );
		case IFCWALLTYPEENUM:return IfcWallTypeEnum::createObjectFromSTEP( arg );
		case IFCWARPINGCONSTANTMEASURE:return IfcWarpingConstantMeasure::createObjectFromSTEP( arg );
		case IFCWARPINGMOMENTMEASURE:return IfcWarpingMomentMeasure::createObjectFromSTEP( arg );
		case IFCWASTETERMINALTYPEENUM:return IfcWasteTerminalTypeEnum::createObjectFromSTEP( arg );
		case IFCWINDOWPANELOPERATIONENUM:return IfcWindowPanelOperationEnum::createObjectFromSTEP( arg );
		case IFCWINDOWPANELPOSITIONENUM:return IfcWindowPanelPositionEnum::createObjectFromSTEP( arg );
		case IFCWINDOWSTYLECONSTRUCTIONENUM:return IfcWindowStyleConstructionEnum::createObjectFromSTEP( arg );
		case IFCWINDOWSTYLEOPERATIONENUM:return IfcWindowStyleOperationEnum::createObjectFromSTEP( arg );
		case IFCWINDOWTYPEENUM:return IfcWindowTypeEnum::createObjectFromSTEP( arg );
		case IFCWINDOWTYPEPARTITIONINGENUM:return IfcWindowTypePartitioningEnum::createObjectFromSTEP( arg );
		case IFCWORKCALENDARTYPEENUM:return IfcWorkCalendarTypeEnum::createObjectFromSTEP( arg );
		case IFCWORKPLANTYPEENUM:return IfcWorkPlanTypeEnum::createObjectFromSTEP( arg );
		case IFCWORKSCHEDULETYPEENUM:return IfcWorkScheduleTypeEnum::createObjectFromSTEP( arg );

		default: throw IfcPPException("given IfcPPTypeEnum not valid");
	}
	return shared_ptr<IfcPPObject>();
}
